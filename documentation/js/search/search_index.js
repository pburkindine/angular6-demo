var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiResponse.html",[0,1.453,1,2.29]],["body/interfaces/ApiResponse.html",[0,2.521,1,3.973,2,0.298,3,0.298,4,0.197,5,4.488,6,3.991,7,0.483,8,2.259,9,5.951,10,1.761,11,0.695,12,0.019,13,0.264,14,3.075,15,0.017,16,0.017]],["title/components/AppComponent.html",[17,0.726,18,1.302]],["body/components/AppComponent.html",[2,0.154,3,0.154,4,0.102,7,0.25,10,0.712,11,0.36,12,0.02,13,0.137,15,0.011,16,0.011,17,1.14,18,1.913,19,1.225,20,1.225,21,1.225,22,2.323,23,1.174,24,2.166,25,1.225,26,3.044,27,2.871,28,1.619,29,1.817,30,4.027,31,1.817,32,4.027,33,0.683,34,3.246,35,3.365,36,5.312,37,1.019,38,2.397,39,0.809,40,2.714,41,4.547,42,3.042,43,3.115,44,2.452,45,2.02,46,4.801,47,5.312,48,4.11,49,4.547,50,0.849,51,2.714,52,0.516,53,0.636,54,0.516,55,4.027,56,2.714,57,0.722,58,1.826,59,2.714,60,2.714,61,0.548,62,0.271,63,2.066,64,1.72,65,1.45,66,1.482,67,1.592,68,2.323,69,1.72,70,0.173,71,1.937,72,2.714,73,1.72,74,2.714,75,2.714,76,0.641,77,0.608,78,0.641,79,0.879,80,1.386,81,1.72,82,2.714,83,2.714,84,2.714,85,2.714,86,0.879,87,1.714,88,1.817,89,1.817,90,2.397,91,1.225,92,1.225,93,0.879,94,0.834,95,1.817,96,0.978,97,1.155,98,1.817,99,0.926,100,0.926,101,1.225,102,0.926,103,1.225,104,0.978,105,1.225,106,1.225,107,0.879,108,0.926,109,1.225,110,0.879,111,1.225,112,0.978,113,1.225,114,1.225]],["title/modules/AppModule.html",[115,1,116,2.495]],["body/modules/AppModule.html",[2,0.11,3,0.11,4,0.073,12,0.021,13,0.223,15,0.008,16,0.008,18,2.242,41,1.654,43,1.817,45,1.178,57,0.466,61,0.659,62,0.193,63,2.357,64,1.224,65,1.865,66,1.055,67,1.133,68,1.654,69,1.224,70,0.197,76,0.457,77,0.433,78,0.457,86,0.626,94,0.594,115,0.857,116,4.801,117,0.987,118,2.273,119,1.98,120,3.18,121,1.654,122,1.654,123,1.654,124,1.654,125,1.654,126,3.281,127,3.281,128,2.646,129,2.828,130,3.575,131,3.575,132,3.575,133,3.575,134,3.575,135,1.817,136,1.133,137,0.987,138,1.471,139,1.654,140,1.334,141,1.334,142,1.471,143,1.471,144,5.179,145,3.693,146,3.098,147,0.872,148,2.651,149,1.582,150,2.651,151,2.651,152,1.055,153,3.098,154,3.098,155,1.932,156,1.817,157,0.822,158,3.877,159,1.932,160,1.932,161,1.654,162,3.318,163,3.098,164,1.471,165,3.098,166,3.098,167,1.654,168,1.932,169,1.471,170,1.932,171,0.926,172,1.055,173,1.932,174,1.932,175,1.334,176,1.932,177,1.224,178,1.334,179,1.654,180,1.932,181,1.932,182,1.932,183,1.471,184,1.932,185,1.334,186,2.138,187,1.932,188,1.932,189,1.932,190,1.932,191,1.932,192,1.932,193,3.098,194,1.932,195,1.932,196,1.932,197,2.138,198,1.932,199,1.471,200,2.138,201,1.654,202,2.138,203,1.932,204,1.932,205,1.654,206,1.932,207,1.932,208,1.654,209,1.932,210,1.932,211,3.098,212,1.471,213,3.098,214,1.932,215,1.932,216,1.654,217,1.932,218,1.932,219,1.932,220,1.932,221,1.932,222,1.932,223,1.932,224,1.932,225,4.439,226,1.932,227,1.932,228,1.654,229,1.932,230,1.932,231,1.932,232,1.932,233,1.654,234,1.932,235,1.932,236,1.471,237,5.441,238,4.853,239,0.987]],["title/modules/AppRoutingModule.html",[115,1,126,2.29]],["body/modules/AppRoutingModule.html",[2,0.223,3,0.223,4,0.148,12,0.021,13,0.263,15,0.014,16,0.014,17,1.049,61,0.64,62,0.391,70,0.332,76,0.926,77,0.878,78,0.926,79,1.269,93,1.689,94,1.204,99,1.781,107,1.269,110,1.269,115,1.084,126,3.306,149,2.665,156,3.06,157,1.668,239,2.002,240,3.92,241,5.217,242,3.06,243,3.92,244,3.92,245,3.971,246,3.92,247,3.355,248,3.92,249,3.92,250,4.955,251,5.217,252,3.92,253,3.355,254,2.983,255,3.92,256,3.92,257,3.355,258,3.355,259,3.92,260,2.983,261,3.92,262,3.92]],["title/guards/AuthGuard.html",[245,2.751,263,2.751]],["body/guards/AuthGuard.html",[2,0.234,3,0.234,4,0.155,7,0.38,11,0.546,12,0.02,13,0.207,15,0.015,16,0.015,23,1.201,28,1.656,33,0.914,37,1.405,39,1.084,50,0.862,52,0.783,53,0.546,54,0.783,57,0.904,61,0.588,62,0.411,70,0.262,71,1.841,94,1.265,157,1.753,171,1.975,172,2.25,225,3.136,245,4.104,258,5.812,263,3.136,264,4.12,265,2.844,266,4.04,267,5.145,268,4.04,269,4.12,270,3.721,271,4.12,272,4.615,273,0.811,274,4.12,275,1.753,276,4.12,277,3.526,278,3.526]],["title/components/AuthLayoutComponent.html",[17,0.726,93,1.17]],["body/components/AuthLayoutComponent.html",[2,0.173,3,0.173,4,0.115,7,0.28,8,1.576,10,1.346,11,0.58,12,0.02,13,0.153,15,0.012,16,0.012,17,1.194,18,1.095,19,1.372,20,1.372,21,1.372,23,1.275,24,2.313,25,1.372,26,3.114,27,2.937,29,1.974,31,1.974,33,0.742,34,2.799,35,3.552,37,1.088,38,2.53,39,0.611,42,2.772,43,3.288,50,0.896,52,0.578,53,0.679,54,0.578,57,0.658,58,1.722,61,0.403,62,0.304,65,1.095,66,1.661,70,0.193,73,1.927,76,0.718,77,0.681,78,0.718,79,0.984,80,1.553,81,1.927,86,0.984,87,1.862,88,1.974,89,1.974,90,2.53,91,1.372,92,1.372,93,1.815,94,1.574,95,1.974,96,1.095,97,1.294,98,1.974,99,1.038,100,1.038,101,1.372,102,1.038,103,1.372,104,1.095,105,1.372,106,1.372,107,0.984,108,1.038,109,1.372,110,0.984,111,1.372,112,1.095,113,1.372,114,1.372,279,2.603,280,3.745,281,4.376,282,4.376,283,5.607,284,2.603,285,4.376,286,3.041,287,3.041,288,1.661,289,3.041,290,3.041,291,3.745,292,2.39]],["title/modules/AuthModule.html",[115,1,127,2.29]],["body/modules/AuthModule.html",[2,0.192,3,0.192,4,0.127,12,0.021,13,0.237,15,0.013,16,0.013,61,0.657,62,0.336,65,1.213,67,1.974,70,0.299,76,0.795,77,0.754,78,0.795,86,1.09,107,2.071,110,2.071,115,1.301,117,1.72,118,3.179,119,1.72,120,1.72,127,4.517,128,3.267,129,3.493,135,2.758,136,1.974,137,1.72,139,4.026,140,2.323,141,2.323,142,2.562,143,2.562,149,2.402,150,4.026,151,4.026,152,1.838,156,2.758,157,1.433,164,3.579,185,2.323,199,2.562,239,1.72,293,2.881,294,2.881,295,2.881,296,4.053,297,3.366,298,3.246,299,2.133,300,4.703,301,4.026,302,4.703,303,4.026,304,4.703,305,4.703,306,2.562,307,3.366,308,2.881,309,2.881]],["title/modules/AuthRoutingModule.html",[115,1,296,2.29]],["body/modules/AuthRoutingModule.html",[2,0.248,3,0.248,4,0.164,12,0.021,13,0.281,15,0.015,16,0.015,17,1.241,61,0.635,62,0.435,70,0.356,76,1.029,77,0.976,78,1.029,79,1.41,93,1.81,107,1.81,110,1.81,115,1.205,149,2.856,156,3.279,157,1.854,239,2.226,242,3.279,247,3.729,250,4.699,260,3.316,296,3.542,308,3.729,309,3.729,310,4.357,311,4.357,312,2.555,313,2.76,314,4.357]],["title/interceptors/AuthTokenInterceptor.html",[130,2.495,315,1.631]],["body/interceptors/AuthTokenInterceptor.html",[2,0.207,3,0.207,4,0.137,7,0.335,10,0.954,11,0.657,12,0.02,13,0.183,15,0.014,16,0.014,23,1.059,33,0.841,37,1.347,39,0.73,50,0.792,52,0.942,53,0.657,54,0.942,57,0.849,61,0.559,62,0.363,70,0.231,76,0.858,77,1.358,78,0.858,79,1.827,94,1.116,130,3.421,147,1.639,171,1.741,172,1.984,266,3.84,273,0.746,288,1.984,315,1.639,316,5.642,317,3.632,318,3.575,319,3.632,320,6.062,321,3.632,322,4.957,323,2.301,324,3.721,325,3.84,326,3.632,327,2.907,328,2.882,329,2.301,330,3.14,331,1.741,332,2.13,333,2.13,334,3.632,335,4.829,336,3.632,337,2.507,338,3.109,339,3.109,340,3.109,341,3.109,342,3.109]],["title/components/BackToLoginComponent.html",[17,0.726,96,1.302]],["body/components/BackToLoginComponent.html",[2,0.195,3,0.195,4,0.129,7,0.315,12,0.02,13,0.172,15,0.013,16,0.013,17,1.248,18,1.232,19,1.543,20,1.543,21,1.543,23,1.386,24,2.467,25,1.543,26,3.18,27,2.999,29,2.146,31,2.146,33,0.806,37,1.16,38,2.666,39,1.099,50,0.76,53,0.63,57,0.515,58,1.461,61,0.315,62,0.341,70,0.218,86,1.107,87,2.024,88,2.146,89,2.146,90,2.666,91,1.543,92,1.543,93,1.107,94,1.05,95,2.146,96,2.128,97,2.806,98,2.146,99,1.167,100,1.167,101,1.543,102,1.167,103,1.543,104,1.232,105,1.543,106,1.543,107,1.107,108,1.167,109,1.543,110,1.107,111,1.543,112,1.232,113,1.543,114,1.543,292,2.597,312,2.789,343,4.679,344,4.16,345,2.927,346,4.07,347,4.07,348,3.42,349,3.42,350,4.755,351,4.755]],["title/modules/CoreModule.html",[115,1,128,1.846]],["body/modules/CoreModule.html",[2,0.25,3,0.25,4,0.165,12,0.02,13,0.329,15,0.015,16,0.015,61,0.602,62,0.438,70,0.357,76,1.036,77,0.983,78,1.036,86,1.42,104,2.638,115,1.553,117,2.241,118,3.632,119,2.241,120,2.241,128,3.586,135,3.293,136,2.573,137,2.241,149,2.868,239,2.241,298,3.876,299,2.779,352,3.755,353,3.755,354,3.755,355,4.387,356,4.387,357,3.338,358,4.387]],["title/injectables/DateHelperService.html",[273,0.544,359,2.495]],["body/injectables/DateHelperService.html",[2,0.249,3,0.249,4,0.165,7,0.403,10,1.712,11,0.579,12,0.02,13,0.22,15,0.015,16,0.015,28,1.758,33,0.95,37,1.312,50,0.699,52,0.831,53,0.579,54,0.831,57,0.843,61,0.517,62,0.436,70,0.278,79,1.415,202,3.017,273,0.93,275,1.86,359,3.867,360,4.796,361,3.742,362,5.603,363,5.603,364,4.372,365,4.372,366,5.25,367,4.796,368,4.372,369,4.372,370,4.372,371,4.372,372,4.372,373,4.372,374,4.372,375,4.372,376,4.372,377,4.372]],["title/injectables/ErrorHandlerService.html",[186,2.495,273,0.544]],["body/injectables/ErrorHandlerService.html",[2,0.249,3,0.249,4,0.165,7,0.403,11,0.743,12,0.02,13,0.22,15,0.015,16,0.015,23,1.274,28,1.758,33,0.95,39,0.879,44,2.862,45,2.48,50,0.896,52,1.065,53,0.743,54,1.065,57,0.658,58,1.721,61,0.517,62,0.436,70,0.278,76,1.033,77,0.979,78,1.033,100,1.492,148,4.796,186,3.867,273,0.93,275,1.86,288,2.387,378,5.293,379,3.742,380,5.603,381,3.017,382,4.372,383,5.603,384,4.372,385,2.77,386,4.372,387,4.372]],["title/components/ErrorPageComponent.html",[17,0.726,99,1.234]],["body/components/ErrorPageComponent.html",[2,0.203,3,0.203,4,0.134,7,0.328,12,0.02,13,0.179,15,0.013,16,0.013,17,1.266,18,1.283,19,1.607,20,1.607,21,1.607,23,1.425,24,2.52,25,1.607,26,3.202,27,3.02,29,2.207,31,2.207,33,0.829,38,2.713,39,1.122,50,0.782,53,0.648,57,0.536,58,1.502,61,0.328,62,0.356,70,0.227,86,1.153,87,2.081,88,2.207,89,2.207,90,2.713,91,1.607,92,1.607,93,1.153,94,1.094,95,2.207,96,1.283,97,1.516,98,2.207,99,2.052,100,1.907,101,1.607,102,1.216,103,1.607,104,1.283,105,1.607,106,1.607,107,1.153,108,1.216,109,1.607,110,1.153,111,1.607,112,1.283,113,1.607,114,1.607,292,2.671,388,3.049,389,4.891,390,4.891,391,4.891,392,3.562,393,3.562,394,4.891]],["title/interfaces/ErrorResponse.html",[0,1.453,395,2.29]],["body/interfaces/ErrorResponse.html",[0,2.461,2,0.287,3,0.287,4,0.19,6,3.834,7,0.465,8,2.205,9,5.872,10,1.876,11,0.812,12,0.019,13,0.254,14,3.591,15,0.017,16,0.017,100,2.342,395,3.879,396,4.313]],["title/components/HomeComponent.html",[17,0.726,102,1.234]],["body/components/HomeComponent.html",[2,0.207,3,0.207,4,0.137,7,0.335,12,0.02,13,0.183,15,0.014,16,0.014,17,1.275,18,1.308,19,1.639,20,1.639,21,1.639,23,1.445,24,2.546,25,1.639,26,3.212,27,3.03,29,2.236,31,2.236,33,0.841,38,2.735,39,1.134,50,0.792,53,0.657,57,0.547,58,1.522,61,0.335,62,0.363,70,0.231,86,1.176,87,2.109,88,2.236,89,2.236,90,2.735,91,1.639,92,1.639,93,1.176,94,1.116,95,2.236,96,1.308,97,1.546,98,2.236,99,1.24,100,1.24,101,1.639,102,2.069,103,1.639,104,1.308,105,1.639,106,1.639,107,1.176,108,1.24,109,1.639,110,1.176,111,1.639,112,1.308,113,1.639,114,1.639,257,5.188,397,3.109,398,4.957,399,4.957,400,3.632,401,3.632,402,4.957]],["title/modules/HomeModule.html",[115,1,403,2.495]],["body/modules/HomeModule.html",[2,0.228,3,0.228,4,0.151,12,0.02,13,0.266,15,0.014,16,0.014,61,0.643,62,0.4,70,0.337,76,0.946,77,0.897,78,0.946,86,1.296,102,2.3,115,1.464,117,2.046,118,3.476,119,2.046,120,2.046,128,3.441,129,3.679,135,3.104,136,2.349,137,2.046,149,2.703,185,2.764,199,3.048,239,2.046,298,3.653,299,2.537,403,4.99,404,3.428,405,3.428,406,3.428,407,4.268,408,4.005,409,3.428,410,4.005]],["title/modules/HomeRoutingModule.html",[115,1,407,2.29]],["body/modules/HomeRoutingModule.html",[2,0.256,3,0.256,4,0.169,12,0.021,13,0.287,15,0.016,16,0.016,17,1.146,61,0.627,62,0.449,70,0.363,76,1.062,77,1.007,78,1.062,79,1.455,102,1.947,108,1.947,115,1.243,149,2.913,156,3.344,157,1.912,239,2.295,242,3.344,250,4.34,253,3.846,254,3.42,260,3.42,407,3.613,409,3.846,411,4.494,412,4.494,413,4.494,414,4.494]],["title/interceptors/JsonHeaderInterceptor.html",[131,2.495,315,1.631]],["body/interceptors/JsonHeaderInterceptor.html",[2,0.203,3,0.203,4,0.134,7,0.328,8,1.761,10,1.466,11,0.74,12,0.02,13,0.179,15,0.013,16,0.013,23,1.038,33,0.829,37,1.337,39,1.122,50,0.893,52,0.677,53,0.472,54,0.677,57,0.736,61,0.515,62,0.356,70,0.227,71,1.907,76,1.155,77,1.411,78,1.155,79,1.583,131,3.375,147,1.607,273,0.736,315,1.607,318,3.539,323,2.257,324,3.695,325,3.809,327,2.868,328,2.853,329,2.257,330,3.099,331,1.708,332,2.089,333,2.089,338,3.049,339,3.049,340,3.049,342,3.049,415,6.012,416,3.562,417,6.012,418,4.891,419,3.562,420,2.711,421,2.711,422,4.891,423,4.891,424,4.891,425,3.562,426,4.891,427,3.562,428,3.562,429,3.562,430,3.049]],["title/interfaces/JwtPayload.html",[0,1.453,431,2.495]],["body/interfaces/JwtPayload.html",[0,2.461,2,0.287,3,0.287,4,0.19,7,0.465,8,2.205,10,1.876,11,0.812,12,0.019,13,0.254,14,3.591,15,0.017,16,0.017,53,0.909,431,4.225,432,4.313,433,3.834,434,3.289]],["title/components/LangSwitchComponent.html",[17,0.726,104,1.302]],["body/components/LangSwitchComponent.html",[2,0.175,3,0.175,4,0.116,7,0.284,10,1.356,11,0.586,12,0.02,13,0.155,15,0.012,16,0.012,17,1.201,18,1.111,19,1.392,20,1.392,21,1.392,23,1.289,24,2.331,25,1.392,26,3.122,27,2.944,29,1.995,31,1.995,33,0.75,37,1.319,38,2.546,39,0.888,48,3.784,49,4.83,50,0.826,52,0.84,53,0.748,54,0.84,57,0.665,58,1.733,61,0.408,62,0.308,65,1.111,67,1.809,70,0.196,71,1.053,86,0.999,87,1.881,88,1.995,89,1.995,90,2.546,91,1.392,92,1.392,93,0.999,94,0.947,95,1.995,96,1.111,97,1.313,98,1.995,99,1.053,100,1.053,101,1.392,102,1.053,103,1.392,104,2.033,105,2.955,106,1.392,107,0.999,108,1.053,109,1.392,110,0.999,111,1.392,112,1.111,113,1.392,114,1.392,357,4.295,435,4.83,436,2.64,437,4.421,438,4.421,439,4.421,440,4.421,441,3.084,442,3.084,443,3.084,444,4.421,445,3.084,446,3.084,447,4.421,448,4.421]],["title/modules/LayoutModule.html",[115,1,129,1.974]],["body/modules/LayoutModule.html",[2,0.196,3,0.196,4,0.129,12,0.021,13,0.24,15,0.013,16,0.013,61,0.655,62,0.343,65,1.238,67,2.016,70,0.304,76,0.812,77,0.77,78,0.812,86,1.113,93,2.085,96,2.319,99,2.198,108,2.198,112,2.319,115,1.32,117,1.756,118,3.215,119,1.756,120,1.756,128,3.289,129,3.947,135,2.799,136,2.016,137,1.756,149,2.438,156,2.799,157,1.463,164,3.632,185,2.373,239,1.756,298,3.294,299,2.178,301,4.085,303,4.085,306,2.617,344,2.617,449,2.943,450,2.943,451,3.438,452,3.438,453,3.438,454,3.438,455,3.438,456,3.438,457,3.438,458,3.438]],["title/interceptors/LogRequestInterceptor.html",[132,2.495,315,1.631]],["body/interceptors/LogRequestInterceptor.html",[2,0.215,3,0.215,4,0.142,7,0.349,11,0.675,12,0.02,13,0.19,15,0.014,16,0.014,23,1.102,33,0.864,37,1.365,39,1.024,44,2.602,45,2.344,50,0.814,52,0.968,53,0.675,54,0.968,57,0.867,61,0.593,62,0.377,70,0.241,71,1.739,77,1.29,132,3.515,147,1.706,273,0.766,315,1.706,318,3.649,323,2.396,324,3.614,325,3.905,327,2.987,328,2.942,329,2.396,330,3.227,331,1.813,332,2.218,333,2.218,337,3.515,381,2.61,385,2.396,459,4.93,460,3.781,461,4.384,462,3.614,463,3.781,464,3.781,465,2.878,466,2.878,467,2.878,468,3.781]],["title/interceptors/LogResponseInterceptor.html",[133,2.495,315,1.631]],["body/interceptors/LogResponseInterceptor.html",[2,0.202,3,0.202,4,0.134,7,0.327,11,0.647,12,0.021,13,0.179,15,0.013,16,0.013,23,1.035,33,0.828,37,1.336,39,0.981,44,2.493,45,2.284,50,0.78,52,0.928,53,0.647,54,0.928,57,0.904,61,0.6,62,0.355,70,0.226,71,1.666,76,0.839,77,1.345,78,0.839,133,3.369,147,1.603,273,0.734,315,1.603,318,3.534,323,2.251,324,3.522,325,3.805,327,2.863,328,2.849,329,3.093,330,3.093,331,1.703,332,2.083,333,2.083,337,2.452,381,2.452,385,2.251,459,4.774,461,4.244,462,3.522,465,2.703,466,2.703,467,2.703,469,3.552,470,3.552,471,3.552,472,4.178,473,2.703,474,3.04,475,3.04,476,3.04,477,2.452,478,3.04,479,3.552]],["title/injectables/LogService.html",[197,2.495,273,0.544]],["body/injectables/LogService.html",[2,0.197,3,0.197,4,0.131,7,0.32,10,1.445,11,0.827,12,0.021,13,0.174,15,0.013,16,0.013,33,0.814,39,0.697,45,1.825,50,0.998,52,1.186,53,0.827,54,1.186,57,0.894,58,2.072,61,0.508,62,0.346,65,1.248,70,0.22,76,1.301,77,1.233,78,1.301,79,1.122,100,1.638,175,2.392,197,3.313,273,0.828,288,1.893,385,2.196,480,2.967,481,4.108,482,3.653,483,4.108,484,3.466,485,5.943,486,3.466,487,4.8,488,4.108,489,3.466,490,4.712,491,4.108,492,3.466,493,4.108,494,3.466,495,4.8,496,3.466,497,4.8,498,4.8,499,3.466,500,3.466,501,3.466,502,3.466,503,3.466,504,3.466,505,3.466,506,3.466,507,3.466]],["title/classes/LogServiceAbstract.html",[45,1.375,70,0.23]],["body/classes/LogServiceAbstract.html",[2,0.198,3,0.198,4,0.131,7,0.32,10,1.447,11,0.828,12,0.02,13,0.175,15,0.013,16,0.013,33,0.815,37,1.529,45,1.829,50,0.999,52,1.187,53,0.828,54,1.187,57,0.972,58,2.131,61,0.32,70,0.306,76,1.136,77,1.077,78,1.136,100,1.641,178,2.399,179,2.975,216,2.975,332,2.038,333,2.038,481,4.116,482,3.659,483,4.116,488,4.116,490,4.719,491,4.116,493,4.116,508,2.975,509,7.119,510,4.809,511,3.475,512,4.809,513,3.475,514,2.975,515,3.475,516,3.475,517,4.809,518,3.475,519,3.475,520,3.475,521,3.475]],["title/injectables/LoginFormFactory.html",[273,0.544,522,2.495]],["body/injectables/LoginFormFactory.html",[2,0.242,3,0.242,4,0.16,7,0.392,11,0.564,12,0.02,13,0.214,15,0.015,16,0.015,28,1.711,33,0.934,37,1.296,39,0.855,50,0.88,52,0.809,53,0.564,54,0.809,57,0.829,61,0.563,62,0.425,70,0.271,152,2.324,171,2.041,273,0.919,275,1.811,288,2.324,434,2.041,522,3.801,523,3.643,524,5.526,525,3.643,526,5.526,527,4.256,528,4.714,529,4.256,530,4.214,531,3.489,532,3.643,533,3.643,534,4.714,535,3.643,536,4.714,537,2.174,538,3.643]],["title/components/LoginPageComponent.html",[17,0.726,107,1.17]],["body/components/LoginPageComponent.html",[2,0.119,3,0.119,4,0.079,7,0.193,8,1.19,11,0.542,12,0.02,13,0.106,15,0.011,16,0.009,17,1.015,18,0.755,19,0.946,20,0.946,21,0.946,23,0.963,24,1.845,25,0.946,26,2.869,27,2.706,29,1.491,31,1.491,33,0.56,34,2.931,37,1.271,38,2.094,39,0.664,44,2.089,45,1.765,50,0.898,52,0.628,53,0.615,54,0.628,57,0.76,58,1.883,61,0.537,62,0.209,65,0.755,69,1.328,70,0.133,71,1.832,76,0.495,77,0.469,78,0.495,86,0.679,87,1.406,88,1.491,89,1.491,90,2.094,91,0.946,92,0.946,93,0.679,94,1.015,95,1.491,96,0.755,97,0.892,98,1.491,99,0.715,100,1.128,101,0.946,102,0.715,103,0.946,104,0.755,105,2.702,106,0.946,107,1.503,108,0.715,109,0.946,110,0.679,111,0.946,112,0.755,113,0.946,114,0.946,152,1.145,157,0.892,171,1.005,172,1.145,177,1.328,265,1.447,266,2.941,270,2.28,292,2.931,312,3.147,313,1.328,346,2.828,347,2.828,434,2.226,522,3.204,530,3.204,531,2.093,537,2.371,539,1.794,540,3.533,541,2.828,542,3.973,543,4.642,544,3.501,545,4.09,546,3.204,547,3.113,548,3.533,549,3.501,550,3.533,551,3.304,552,3.304,553,2.096,554,2.096,555,2.096,556,2.096,557,2.096,558,2.096,559,2.096,560,1.794,561,1.794,562,1.794,563,2.096,564,2.096,565,2.096,566,1.595,567,1.794,568,1.794,569,2.096,570,2.096,571,2.096,572,2.096,573,1.595,574,3.304,575,3.973,576,2.515,577,2.828,578,2.828,579,4.43,580,3.973,581,2.828,582,2.828,583,2.828,584,3.304,585,3.304]],["title/interfaces/LoginResult.html",[0,1.453,586,2.29]],["body/interfaces/LoginResult.html",[0,2.461,2,0.287,3,0.287,4,0.19,7,0.465,8,2.205,10,1.876,11,0.812,12,0.019,13,0.254,14,3.591,15,0.017,16,0.017,335,5.872,586,3.879,587,4.313,588,4.313,589,5.221]],["title/injectables/LoginService.html",[273,0.544,546,2.495]],["body/injectables/LoginService.html",[2,0.162,3,0.162,4,0.107,7,0.262,8,1.5,10,1.715,11,0.72,12,0.02,13,0.143,15,0.013,16,0.011,28,1.142,33,0.706,34,3.299,35,3.44,37,1.046,39,0.837,42,3.123,43,3.184,44,2.518,45,2.065,50,0.924,52,0.937,53,0.653,54,0.937,57,0.87,58,1.279,61,0.612,62,0.283,65,1.023,66,1.551,69,1.799,70,0.181,71,2.186,73,1.799,76,0.671,77,0.636,78,0.671,79,1.348,80,1.45,81,1.799,94,0.872,171,1.361,172,1.551,265,1.96,266,3.44,270,2.874,273,0.742,275,1.208,312,2.891,328,2.953,331,1.361,434,1.996,537,2.773,546,2.874,586,3.44,590,2.431,591,5.429,592,4.164,593,3.752,594,3.184,595,4.22,596,3.44,597,4.164,598,2.84,599,4.164,600,2.84,601,4.164,602,2.84,603,2.84,604,2.431,605,2.84,606,2.431,607,2.364,608,2.161,609,2.161,610,2.84,611,4.164,612,2.84,613,2.84,614,2.84,615,2.84,616,2.84,617,2.84,618,2.84]],["title/injectables/LogoutService.html",[268,2.29,273,0.544]],["body/injectables/LogoutService.html",[1,1.891,2,0.17,3,0.17,4,0.112,7,0.275,8,1.555,10,1.332,11,0.572,12,0.021,13,0.15,15,0.012,16,0.012,28,1.2,33,0.732,34,3.357,35,3.521,37,1.077,39,0.868,42,3.214,43,3.26,50,0.943,52,0.567,53,0.396,54,0.567,57,0.763,58,1.888,61,0.627,62,0.298,65,1.555,66,1.63,70,0.19,71,2.216,73,1.891,76,0.705,77,0.668,78,0.705,79,0.966,80,1.524,81,1.891,94,0.917,145,4.23,147,1.347,157,1.27,171,1.431,172,1.63,177,1.891,265,2.06,266,3.521,268,2.735,270,2.98,273,0.763,275,1.27,312,1.75,328,1.524,331,1.431,395,1.891,473,2.271,547,3.86,548,4.23,550,2.271,560,2.554,566,2.271,573,2.271,595,4.341,596,3.521,604,2.554,619,2.554,620,5.558,621,5.558,622,4.23,623,4.341,624,4.317,625,2.984,626,2.984,627,2.984,628,2.984,629,2.984,630,3.695,631,2.984,632,2.984,633,2.984,634,2.984,635,2.984,636,2.984,637,2.984,638,2.271,639,4.317]],["title/components/MainLayoutComponent.html",[17,0.726,108,1.234]],["body/components/MainLayoutComponent.html",[2,0.205,3,0.205,4,0.136,7,0.332,12,0.02,13,0.181,15,0.013,16,0.013,17,1.271,18,1.297,19,1.625,20,1.625,21,1.625,23,1.436,24,2.535,25,1.625,26,3.208,27,3.026,29,2.224,31,2.224,33,0.836,37,1.192,38,2.725,39,1.129,50,0.788,53,0.653,57,0.542,58,1.514,61,0.332,62,0.36,70,0.229,86,1.166,87,2.097,88,2.224,89,2.224,90,2.725,91,1.625,92,1.625,93,1.166,94,1.106,95,2.224,96,1.297,97,1.533,98,2.224,99,1.23,100,1.23,101,1.625,102,1.23,103,1.625,104,1.297,105,1.625,106,1.625,107,1.166,108,2.062,109,2.535,110,1.166,111,1.625,112,1.297,113,1.625,114,1.625,280,4.218,640,3.083,641,4.928,642,4.928,643,3.602,644,3.602]],["title/injectables/RegisterFormFactory.html",[273,0.544,645,2.495]],["body/injectables/RegisterFormFactory.html",[2,0.225,3,0.225,4,0.149,7,0.365,11,0.524,12,0.02,13,0.199,15,0.014,16,0.014,28,1.59,33,0.89,37,1.25,39,0.795,50,0.839,52,0.752,53,0.696,54,0.752,57,0.79,61,0.543,62,0.395,70,0.252,79,1.699,152,2.16,171,1.896,273,0.886,275,1.683,288,2.16,434,1.896,524,5.372,525,3.386,526,5.372,528,4.493,530,4.066,531,3.326,532,3.386,533,3.386,534,5.043,535,3.386,536,5.372,537,2.021,538,4.493,638,3.01,645,3.623,646,3.386,647,3.956,648,3.956,649,5.892,650,5.249,651,5.249,652,3.956,653,3.956,654,3.956]],["title/components/RegisterPageComponent.html",[17,0.726,110,1.17]],["body/components/RegisterPageComponent.html",[2,0.1,3,0.1,4,0.066,7,0.162,8,1.031,10,1.1,11,0.555,12,0.02,13,0.088,15,0.008,16,0.013,17,0.928,18,0.632,19,0.791,20,0.791,21,0.791,23,0.835,24,1.637,25,0.791,26,2.734,27,2.579,29,1.292,31,1.292,33,0.486,34,3.08,37,1.197,38,1.89,39,0.575,44,1.854,45,1.593,50,0.871,52,0.69,53,0.748,54,0.69,57,0.786,58,1.782,61,0.535,62,0.175,65,0.632,69,1.111,70,0.112,71,1.691,79,0.568,86,0.568,87,1.219,88,1.292,89,1.292,90,1.89,91,0.791,92,0.791,93,0.568,94,0.539,95,1.292,96,0.632,97,0.746,98,1.292,99,0.599,100,0.599,101,0.791,102,0.599,103,0.791,104,0.632,105,2.979,106,0.791,107,0.568,108,0.599,109,0.791,110,1.356,111,0.791,112,0.632,113,0.791,114,0.791,147,0.791,152,0.958,157,0.746,177,1.111,292,2.705,312,1.679,313,3.138,395,1.814,434,2.008,530,2.891,531,1.814,537,2.963,540,3.188,541,2.451,542,3.586,544,2.451,547,2.762,548,3.188,549,3.106,550,3.188,561,1.501,562,1.501,566,1.335,567,1.501,568,1.501,573,2.179,575,4.666,576,3.188,577,2.451,578,2.451,579,4.982,580,4.24,581,2.451,582,3.586,583,3.586,593,2.762,594,2.457,607,1.74,608,1.335,609,1.335,645,2.891,655,1.501,656,2.863,657,2.863,658,2.863,659,4.189,660,1.754,661,3.629,662,2.891,663,2.863,664,2.863,665,5.226,666,1.754,667,2.863,668,1.754,669,1.754,670,1.754,671,1.754,672,1.754,673,1.754,674,1.754,675,1.754,676,1.754,677,1.501,678,1.754,679,1.754,680,1.754,681,1.754,682,1.754,683,1.754,684,3.629,685,1.754,686,1.754,687,2.863,688,2.863,689,1.754,690,2.863,691,1.754,692,2.863,693,2.863,694,2.863,695,1.754,696,2.863,697,2.863,698,1.754,699,1.754,700,1.754]],["title/injectables/RegisterService.html",[273,0.544,662,2.495]],["body/injectables/RegisterService.html",[1,2.144,2,0.193,3,0.193,4,0.127,7,0.312,8,1.7,10,1.427,11,0.721,12,0.02,13,0.17,15,0.013,16,0.013,28,1.361,33,0.801,34,2.969,35,3.726,37,1.154,39,0.949,42,2.991,43,3.449,50,0.94,52,0.897,53,0.626,54,0.897,57,0.818,58,1.45,61,0.606,62,0.338,65,1.219,66,1.848,70,0.215,71,2.187,73,2.144,76,0.8,77,0.758,78,0.8,79,1.096,80,1.729,81,2.144,145,4.476,147,1.527,273,0.818,275,1.44,284,2.897,313,2.991,328,2.777,331,1.622,593,4.137,594,3.449,607,2.966,608,2.575,609,2.575,623,4.653,630,2.897,662,3.258,677,4.04,701,2.897,702,5.882,703,4.72,704,3.384,705,3.384,706,3.384,707,4.72,708,3.384,709,3.384,710,3.384]],["title/injectables/RequestInspectorService.html",[273,0.544,462,2.12]],["body/injectables/RequestInspectorService.html",[2,0.261,3,0.261,4,0.173,7,0.423,11,0.608,12,0.02,13,0.231,15,0.016,16,0.016,28,1.845,33,0.98,37,1.343,50,0.734,52,0.873,53,0.608,54,0.873,57,0.87,61,0.533,62,0.458,70,0.292,76,1.084,77,1.028,78,1.084,147,2.071,272,4.947,273,0.952,275,1.953,324,3.894,327,2.692,462,3.389,711,4.947,712,3.929,713,5.779,714,5.779,715,4.59,716,4.59]],["title/interceptors/TimingInterceptor.html",[134,2.495,315,1.631]],["body/interceptors/TimingInterceptor.html",[2,0.193,3,0.193,4,0.128,7,0.313,11,0.627,12,0.021,13,0.171,15,0.013,16,0.013,23,0.989,33,0.802,37,1.314,39,0.95,44,2.416,45,2.24,50,0.756,52,0.899,53,0.627,54,0.899,57,0.932,61,0.591,62,0.339,70,0.216,71,1.614,76,0.802,77,1.319,78,0.802,79,1.531,134,3.264,147,1.531,273,0.712,315,1.531,318,3.449,323,2.15,324,3.453,325,3.731,327,2.773,328,2.781,329,2.996,330,2.996,331,1.627,332,1.99,333,1.99,337,2.342,381,2.342,385,2.15,461,4.143,462,3.453,465,2.582,466,2.582,467,2.582,472,4.048,473,2.582,474,2.904,475,2.904,476,2.904,477,3.757,478,2.904,717,3.393,718,3.393,719,3.393,720,3.599,721,4.729,722,4.729,723,4.729,724,3.393,725,3.393,726,3.393,727,3.393,728,3.393]],["title/components/TopnavComponent.html",[17,0.726,112,1.302]],["body/components/TopnavComponent.html",[2,0.182,3,0.182,4,0.12,7,0.294,11,0.423,12,0.02,13,0.161,15,0.012,16,0.012,17,1.216,18,1.149,19,1.44,20,1.44,21,1.44,23,1.32,24,2.376,25,1.44,26,3.142,27,2.963,29,2.044,31,2.044,33,0.768,37,1.334,38,2.586,39,0.91,50,0.842,52,0.607,53,0.698,54,0.607,57,0.682,58,1.76,61,0.418,62,0.319,70,0.203,71,1.089,86,1.033,87,1.928,88,2.044,89,2.044,90,2.586,91,1.44,92,1.44,93,1.033,94,0.98,95,2.044,96,1.149,97,1.358,98,2.044,99,1.089,100,1.089,101,1.44,102,1.089,103,1.44,104,1.149,105,1.44,106,1.44,107,1.033,108,1.089,109,1.44,110,1.033,111,1.44,112,2.064,113,2.376,114,1.44,267,3.877,268,3.631,277,2.732,291,3.877,292,2.474,622,4.785,729,2.732,730,4.53,731,4.53,732,3.191,733,3.191,734,3.191,735,3.191,736,3.191,737,4.53]],["title/classes/User.html",[70,0.23,607,1.733]],["body/classes/User.html",[2,0.173,3,0.173,4,0.115,7,0.28,8,1.576,10,1.906,11,0.787,12,0.02,13,0.153,14,4.047,15,0.012,16,0.012,39,0.879,50,1.062,52,0.578,53,0.865,54,1.129,57,0.844,61,0.28,70,0.278,71,2.356,366,4.852,434,2.966,537,3.256,589,4.852,607,2.098,738,2.603,739,5.607,740,5.607,741,5.607,742,5.607,743,4.376,744,3.041,745,4.376,746,3.745,747,5.607,748,6.645,749,3.041,750,3.041,751,3.041,752,3.041,753,3.041,754,3.041,755,3.041,756,3.041,757,3.041,758,3.041,759,3.041,760,2.314,761,4.376,762,4.376,763,4.376,764,4.376]],["title/injectables/UserFactory.html",[273,0.544,594,2.12]],["body/injectables/UserFactory.html",[2,0.164,3,0.164,4,0.109,7,0.267,10,1.723,11,0.772,12,0.02,13,0.146,15,0.011,16,0.011,28,1.162,33,0.715,37,1.45,39,0.581,50,0.931,52,1.107,53,0.884,54,1.107,57,0.968,61,0.579,62,0.289,70,0.184,79,0.936,202,1.995,273,0.749,275,1.23,288,1.579,359,3.779,366,3.79,431,2.911,434,2.388,537,2.974,586,3.469,589,4.167,594,2.474,606,2.474,607,3.24,638,3.21,746,2.474,765,2.474,766,4.218,767,4.218,768,4.218,769,4.263,770,2.891,771,2.891,772,4.218,773,4.218,774,4.196,775,2.891,776,2.891,777,4.218,778,2.891,779,2.891,780,4.218,781,2.891,782,2.891,783,2.891,784,2.891,785,2.2,786,2.474,787,2.891,788,4.218,789,2.891,790,2.891,791,2.474,792,2.891,793,2.891,794,2.891,795,2.891,796,2.891,797,2.891,798,2.891,799,2.891,800,2.891,801,2.891,802,2.891,803,2.891,804,2.891,805,2.891,806,2.891,807,2.891]],["title/interfaces/UserPayload.html",[0,1.453,774,2.495]],["body/interfaces/UserPayload.html",[0,2.404,2,0.276,3,0.276,4,0.183,7,0.447,8,2.154,10,1.918,11,0.86,12,0.02,13,0.244,14,3.803,15,0.016,16,0.016,53,0.897,433,3.69,434,3.246,537,3.458,774,4.127,808,4.15]],["title/injectables/UserService.html",[273,0.544,596,2.29]],["body/injectables/UserService.html",[2,0.218,3,0.218,4,0.145,7,0.354,8,1.853,10,1.523,11,0.682,12,0.02,13,0.193,15,0.014,16,0.014,28,1.543,33,0.872,37,1.485,50,0.991,52,0.73,53,0.509,54,0.73,57,0.933,58,1.904,61,0.535,62,0.383,70,0.244,71,1.981,273,0.873,275,1.633,420,2.921,421,2.921,596,3.259,607,3.355,760,2.921,769,5.307,791,3.285,809,3.285,810,6.2,811,6.2,812,5.145,813,3.838,814,3.838,815,5.145,816,3.838,817,3.838,818,3.838,819,3.838,820,3.838,821,3.838,822,3.838,823,3.838]],["title/coverage.html",[824,3.76]],["body/coverage.html",[0,2.341,1,1.831,4,0.109,5,2.474,6,3.21,11,0.383,12,0.02,15,0.011,16,0.011,17,1.34,18,1.041,22,2.474,45,1.099,70,0.268,80,1.477,93,0.936,96,1.041,99,0.987,102,0.987,104,1.041,107,0.936,108,0.987,110,0.936,112,1.041,138,3.21,178,2.911,183,2.2,186,1.995,197,1.995,200,2.911,202,1.995,212,2.2,236,2.2,268,1.831,273,1.017,279,2.474,343,2.474,344,2.2,345,2.474,357,2.2,359,1.995,360,2.474,361,2.474,378,2.474,379,2.474,388,2.474,395,1.831,396,2.474,397,2.474,431,1.995,432,2.474,433,3.21,435,2.474,436,2.474,462,1.695,480,2.474,508,2.474,522,1.995,523,2.474,539,2.474,546,1.995,586,1.831,587,2.474,588,2.474,590,2.474,594,1.695,596,1.831,607,1.386,619,2.474,640,2.474,645,1.995,646,2.474,655,2.474,662,1.995,701,2.474,711,2.474,712,2.474,729,2.474,738,2.474,765,2.474,774,1.995,808,2.474,809,2.474,824,2.2,825,2.2,826,2.891,827,2.891,828,7.43,829,5.476,830,6.08,831,2.891,832,2.891,833,6.668,834,6.08,835,3.61,836,4.167,837,4.981,838,4.981,839,2.474,840,2.474,841,2.891,842,2.891]],["title/dependencies.html",[117,2.222,843,2.581]],["body/dependencies.html",[12,0.021,15,0.013,16,0.013,62,0.355,63,3.715,64,3.093,65,2.343,66,1.94,67,2.083,94,1.091,117,1.814,119,1.814,140,2.452,141,2.452,142,2.703,143,2.703,152,1.94,157,1.512,161,3.04,162,4.178,167,3.04,169,2.703,171,2.34,172,1.94,175,2.452,177,2.251,299,2.251,306,2.703,331,1.703,367,3.04,531,2.251,760,2.703,785,2.703,786,3.04,844,3.552,845,3.552,846,7.036,847,3.552,848,4.881,849,3.552,850,3.552,851,3.552,852,3.552,853,3.552,854,3.552,855,3.04,856,4.881,857,3.552,858,3.552,859,3.552,860,3.552,861,3.552,862,3.552,863,3.552,864,3.552,865,3.552,866,3.552,867,3.552,868,3.552,869,3.552,870,3.552,871,3.552,872,3.552,873,3.552,874,3.552,875,3.552,876,3.552,877,3.04,878,3.552,879,3.552,880,3.552,881,3.552,882,3.552,883,3.552,884,3.552,885,3.552,886,3.552,887,3.552,888,3.552,889,3.552,890,3.04,891,3.552,892,3.552,893,3.552]],["title/miscellaneous/functions.html",[200,3.002,894,2.081]],["body/miscellaneous/functions.html",[7,0.485,12,0.019,15,0.017,16,0.017,52,1.195,53,0.833,54,1.195,138,4.007,200,3.634,201,4.506,205,4.506,212,4.784,236,4.784,894,3.634,895,6.287,896,6.287,897,6.287]],["title/index.html",[7,0.278,720,2.295,898,2.295]],["body/index.html",[4,0.119,12,0.016,15,0.012,16,0.012,23,0.921,27,1.345,64,2.002,65,1.886,80,1.614,87,1.345,97,1.345,100,1.079,119,1.614,120,2.298,137,1.614,140,4.162,141,3.104,169,2.405,175,2.181,208,2.705,254,2.405,292,2.456,313,2.002,477,2.181,482,2.405,514,2.705,540,2.405,576,2.405,579,2.405,607,1.515,622,2.405,785,3.423,824,2.405,825,2.405,843,2.705,855,2.705,877,2.705,890,2.705,898,2.405,899,4.498,900,5.237,901,3.16,902,4.498,903,3.16,904,3.16,905,3.16,906,3.16,907,3.16,908,3.16,909,3.16,910,3.16,911,3.85,912,5.237,913,5.237,914,3.16,915,3.16,916,5.237,917,4.498,918,3.16,919,2.705,920,3.16,921,3.16,922,3.16,923,3.16,924,3.16,925,3.16,926,5.641,927,4.498,928,3.16,929,3.16,930,3.16,931,3.16,932,4.498,933,4.498,934,4.498,935,3.16,936,3.16,937,3.16,938,3.16,939,3.16,940,3.16,941,3.16,942,3.16,943,3.16,944,4.498,945,3.16,946,4.498,947,3.16,948,5.237,949,3.16,950,3.16,951,4.498,952,4.498,953,3.16,954,3.16,955,3.16,956,3.16,957,3.16,958,3.16,959,4.498,960,3.16,961,4.498,962,3.16,963,3.16,964,3.16,965,3.16,966,3.16,967,3.16,968,3.16,969,3.16,970,3.16,971,3.16,972,4.498,973,3.16,974,3.16,975,3.16,976,4.498,977,3.16,978,4.498,979,3.16,980,3.16,981,4.498,982,3.16,983,3.16,984,5.237,985,3.16,986,3.16,987,3.16,988,4.498,989,3.16,990,3.16,991,3.16,992,3.16,993,3.16,994,3.16,995,3.16,996,3.16,997,3.16,998,3.16,999,3.16]],["title/license.html",[720,2.295,898,2.295,1000,2.581]],["body/license.html",[4,0.155,12,0.015,15,0.015,16,0.015,120,2.098,137,2.098,233,3.515,341,3.515,477,2.834,825,3.126,911,3.515,919,3.515,926,4.606,1000,3.515,1001,4.107,1002,6.001,1003,4.107,1004,4.107,1005,4.107,1006,4.107,1007,5.381,1008,4.107,1009,4.107,1010,4.107,1011,4.107,1012,5.381,1013,4.107,1014,6.369,1015,7.092,1016,4.107,1017,5.381,1018,6.001,1019,4.107,1020,6.001,1021,5.381,1022,4.107,1023,4.107,1024,4.107,1025,4.107,1026,4.107,1027,4.107,1028,4.107,1029,4.107,1030,4.107,1031,4.107,1032,4.107,1033,4.107,1034,5.381,1035,5.381,1036,4.107,1037,4.107,1038,5.381,1039,4.107,1040,4.107,1041,4.107,1042,4.107,1043,4.107,1044,4.107,1045,4.107,1046,4.107,1047,4.107,1048,4.107,1049,4.107,1050,4.107,1051,4.107,1052,4.107,1053,4.107,1054,4.107,1055,4.107,1056,4.107,1057,4.107]],["title/modules.html",[115,1.367]],["body/modules.html",[12,0.017,15,0.017,16,0.017,64,4.439,115,1.378,116,3.437,126,3.155,127,3.155,128,2.544,129,2.72,296,3.155,403,3.437,407,3.155,1058,7.007,1059,7.007,1060,7.285,1061,6.562,1062,6.562]],["title/overview.html",[1063,4.229]],["body/overview.html",[0,1.22,12,0.02,13,0.153,15,0.012,16,0.012,17,0.61,18,2.295,70,0.193,86,0.982,93,1.657,96,1.844,99,1.748,102,1.748,104,2.295,107,1.657,108,1.748,110,1.657,112,1.844,115,1.208,116,5.039,117,1.55,118,1.779,119,1.55,120,1.55,121,2.597,122,2.597,123,2.597,124,2.597,125,2.597,126,3.243,127,4.409,128,3.392,129,3.899,130,3.533,131,3.533,132,3.533,133,3.533,134,3.533,135,2.562,136,1.779,137,1.55,228,2.597,242,1.779,263,2.309,273,0.456,293,2.597,294,2.597,295,2.597,296,3.243,352,2.597,353,2.597,354,2.597,403,4.653,404,2.597,405,2.597,406,2.597,407,3.243,430,2.597,449,2.597,450,2.597,1063,2.597,1064,3.034,1065,3.034,1066,3.034,1067,3.034,1068,3.034]],["title/routes.html",[242,2.897]],["body/routes.html",[12,0.018,15,0.018,16,0.018,242,3.408]],["title/miscellaneous/variables.html",[836,3.31,894,2.081]],["body/miscellaneous/variables.html",[7,0.428,11,0.883,12,0.02,15,0.016,16,0.016,80,3.247,178,4.835,183,4.838,225,3.531,278,3.971,420,5.073,421,5.073,835,3.971,836,3.531,839,3.971,840,3.971,894,3.202,1069,5.818,1070,4.639,1071,4.639,1072,4.639,1073,4.639,1074,4.639,1075,4.639,1076,4.639,1077,5.818]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["0.1.18",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1066,"title":{},"body":{"overview.html":{}}}],["1.1.0",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["1.10.1",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1064,"title":{},"body":{"overview.html":{}}}],["10.0.2",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1065,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1068,"title":{},"body":{"overview.html":{}}}],["2",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["2.0.6",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":1004,"title":{},"body":{"license.html":{}}}],["255",{"_index":582,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["3.0.1",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":690,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["4",{"_index":909,"title":{},"body":{"index.html":{}}}],["4.1.3",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1067,"title":{},"body":{"overview.html":{}}}],["5.7.0",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":899,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":430,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["9.0.0",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["98",{"_index":983,"title":{},"body":{"index.html":{}}}],["_angulartics2googletagmanag",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["_authservic",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["_completehandl",{"_index":621,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_configservic",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["_configur",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["_configuretransl",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["_datehelp",{"_index":772,"title":{},"body":{"injectables/UserFactory.html":{}}}],["_email",{"_index":739,"title":{},"body":{"classes/User.html":{}}}],["_errorhandl",{"_index":541,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_errorhandler(errorrespons",{"_index":664,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_errorhandler(result",{"_index":552,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_formbuild",{"_index":528,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["_formfactori",{"_index":544,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_geterrorlist",{"_index":658,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_geterrorlist(errorrespons",{"_index":667,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_http",{"_index":623,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["_injector",{"_index":322,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["_jsonencodeverb",{"_index":417,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["_key",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["_lastlogin",{"_index":740,"title":{},"body":{"classes/User.html":{}}}],["_logger",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["_loginservic",{"_index":545,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_loginuri",{"_index":591,"title":{},"body":{"injectables/LoginService.html":{}}}],["_logoutservic",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"components/TopnavComponent.html":{}}}],["_logouturi",{"_index":620,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_name",{"_index":741,"title":{},"body":{"classes/User.html":{}}}],["_ngxlogger",{"_index":487,"title":{},"body":{"injectables/LogService.html":{}}}],["_password",{"_index":742,"title":{},"body":{"classes/User.html":{}}}],["_registerservic",{"_index":661,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_registeruri",{"_index":702,"title":{},"body":{"injectables/RegisterService.html":{}}}],["_requestinspector",{"_index":461,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_router",{"_index":547,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["_setus",{"_index":592,"title":{},"body":{"injectables/LoginService.html":{}}}],["_setuser(result",{"_index":599,"title":{},"body":{"injectables/LoginService.html":{}}}],["_successhandl",{"_index":542,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_titleservic",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["_toastr",{"_index":549,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_translateservic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/LangSwitchComponent.html":{}}}],["_userfactori",{"_index":593,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["_userservic",{"_index":595,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["abov",{"_index":1033,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":509,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["accept",{"_index":425,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["accessor",{"_index":743,"title":{},"body":{"classes/User.html":{}}}],["action",{"_index":1052,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["add",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["address",{"_index":578,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["against",{"_index":928,"title":{},"body":{"index.html":{}}}],["analyt",{"_index":954,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1027,"title":{},"body":{"license.html":{}}}],["angular",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compil",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular2",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["angulartics2",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":916,"title":{},"body":{"index.html":{}}}],["apibaseuri",{"_index":519,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["apirespons",{"_index":1,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["app.compon",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing.modul",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":18,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":914,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":426,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["appmodul",{"_index":116,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":126,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":1056,"title":{},"body":{"license.html":{}}}],["around",{"_index":982,"title":{},"body":{"index.html":{}}}],["assets/config.json",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lang",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["associ",{"_index":1016,"title":{},"body":{"license.html":{}}}],["auth",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"dependencies.html":{}}}],["auth.component.html",{"_index":282,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.component.scss",{"_index":281,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.routing.modul",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.modul",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module#authmodul",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/login/login.compon",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/register/register.compon",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/login",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout.servic",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authconfig",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":927,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":245,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authlayoutcompon",{"_index":93,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":127,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":341,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["authreq",{"_index":338,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["authrout",{"_index":311,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authroutingmodul",{"_index":296,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["authservice.gettoken",{"_index":336,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authtokeninterceptor",{"_index":130,"title":{"interceptors/AuthTokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"overview.html":{}}}],["autoseri",{"_index":748,"title":{},"body":{"classes/User.html":{}}}],["avail",{"_index":1062,"title":{},"body":{"modules.html":{}}}],["aw",{"_index":963,"title":{},"body":{"index.html":{}}}],["back",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["backend",{"_index":913,"title":{},"body":{"index.html":{}}}],["backtologincompon",{"_index":96,"title":{"components/BackToLoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["baseurl",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beanstalk",{"_index":952,"title":{},"body":{"index.html":{}}}],["below",{"_index":693,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["blacklist",{"_index":930,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RequestInspectorService.html":{}}}],["bootstrap",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["brows",{"_index":1060,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":967,"title":{},"body":{"index.html":{}}}],["build",{"_index":937,"title":{},"body":{"index.html":{}}}],["builder",{"_index":989,"title":{},"body":{"index.html":{}}}],["burkindin",{"_index":1006,"title":{},"body":{"license.html":{}}}],["c",{"_index":1003,"title":{},"body":{"license.html":{}}}],["call",{"_index":929,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cart",{"_index":938,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":628,"title":{},"body":{"injectables/LogoutService.html":{}}}],["cerial",{"_index":760,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["changedetectionstrategy.push",{"_index":942,"title":{},"body":{"index.html":{}}}],["charact",{"_index":583,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["charg",{"_index":1011,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":429,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["check",{"_index":939,"title":{},"body":{"index.html":{}}}],["children",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["chromedriv",{"_index":994,"title":{},"body":{"index.html":{}}}],["ci",{"_index":996,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":962,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1048,"title":{},"body":{"license.html":{}}}],["class",{"_index":70,"title":{"classes/LogServiceAbstract.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["clearus",{"_index":811,"title":{},"body":{"injectables/UserService.html":{}}}],["close",{"_index":575,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["cluster_appmodul",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":352,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":353,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":354,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodul",{"_index":404,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":405,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_import",{"_index":406,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutmodul",{"_index":449,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declar",{"_index":450,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_import",{"_index":451,"title":{},"body":{"modules/LayoutModule.html":{}}}],["code",{"_index":960,"title":{},"body":{"index.html":{}}}],["codepipline/codebuild",{"_index":964,"title":{},"body":{"index.html":{}}}],["combin",{"_index":924,"title":{},"body":{"index.html":{}}}],["commit",{"_index":976,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["compodoc",{"_index":958,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":17,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component/auth/auth.compon",{"_index":453,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/back",{"_index":454,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/error/error.compon",{"_index":456,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/home/home.compon",{"_index":409,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["component/lang",{"_index":356,"title":{},"body":{"modules/CoreModule.html":{}}}],["component/login/login.compon",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/main/main.compon",{"_index":457,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/register/register.compon",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/topnav/topnav.compon",{"_index":458,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component_templ",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["compos",{"_index":908,"title":{},"body":{"index.html":{}}}],["condit",{"_index":1032,"title":{},"body":{"license.html":{}}}],["config",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.auth.heroimageuri",{"_index":290,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["config.core.apibaseuri",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.core.apibaseuri}${config.auth.loginuri",{"_index":612,"title":{},"body":{"injectables/LoginService.html":{}}}],["config.core.apibaseuri}${config.auth.logouturi",{"_index":634,"title":{},"body":{"injectables/LogoutService.html":{}}}],["config.core.apibaseuri}${config.auth.registeruri",{"_index":708,"title":{},"body":{"injectables/RegisterService.html":{}}}],["config.core.apibaseuri}${config.logging.logerroruri",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["config.core.apibaseuri}/auth/login",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.json",{"_index":988,"title":{},"body":{"index.html":{}}}],["config/auth.config",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["config/cor",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["config/http",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["configfactori",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configfactory(http",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["confighttpload",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["confighttploader(http",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["configload",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["configservic",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["configur",{"_index":947,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":694,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["confirmpassword",{"_index":654,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["confirmpasswordcontrol",{"_index":651,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["connect",{"_index":1057,"title":{},"body":{"license.html":{}}}],["consol",{"_index":520,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["console.log(data",{"_index":521,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["const",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["constructor(_angulartics2googletagmanag",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_authservic",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["constructor(_configservic",{"_index":284,"title":{},"body":{"components/AuthLayoutComponent.html":{},"injectables/RegisterService.html":{}}}],["constructor(_datehelp",{"_index":770,"title":{},"body":{"injectables/UserFactory.html":{}}}],["constructor(_formbuild",{"_index":525,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["constructor(_formfactori",{"_index":660,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["constructor(_injector",{"_index":319,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["constructor(_logg",{"_index":381,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_logoutservic",{"_index":732,"title":{},"body":{"components/TopnavComponent.html":{}}}],["constructor(_ngxlogg",{"_index":484,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(_translateservic",{"_index":441,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["constructor(email",{"_index":744,"title":{},"body":{"classes/User.html":{}}}],["constructor(priv",{"_index":288,"title":{},"body":{"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{},"injectables/UserFactory.html":{}}}],["consum",{"_index":935,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1053,"title":{},"body":{"license.html":{}}}],["copi",{"_index":1014,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1002,"title":{},"body":{"license.html":{}}}],["core",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["core/core.modul",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["core/interface/service/log.service.abstract",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{}}}],["core/model/payload/api",{"_index":706,"title":{},"body":{"injectables/RegisterService.html":{}}}],["core/model/payload/login",{"_index":605,"title":{},"body":{"injectables/LoginService.html":{}}}],["core/model/user.model",{"_index":608,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/auth/logout.servic",{"_index":736,"title":{},"body":{"components/TopnavComponent.html":{}}}],["core/service/error",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/factory/user.factori",{"_index":609,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/guard/auth.guard",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/service/interceptor/auth",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/json",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/log",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/timing.interceptor.servic",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/log.servic",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/user.servic",{"_index":610,"title":{},"body":{"injectables/LoginService.html":{}}}],["coremodul",{"_index":128,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":979,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":824,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtranslateload",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":904,"title":{},"body":{"index.html":{}}}],["custom",{"_index":936,"title":{},"body":{"index.html":{}}}],["customvalid",{"_index":532,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.email",{"_index":535,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.equalto(newpasswordcontrol",{"_index":653,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["d3",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["damag",{"_index":1049,"title":{},"body":{"license.html":{}}}],["data",{"_index":514,"title":{},"body":{"classes/LogServiceAbstract.html":{},"index.html":{}}}],["date",{"_index":366,"title":{},"body":{"injectables/DateHelperService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["date.now",{"_index":722,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["datehelperservic",{"_index":359,"title":{"injectables/DateHelperService.html":{}},"body":{"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["ddthh:mm:ssza').tod",{"_index":371,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["deal",{"_index":1017,"title":{},"body":{"license.html":{}}}],["debug",{"_index":481,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["debug(messag",{"_index":488,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["declar",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["decod",{"_index":786,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":800,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.email",{"_index":803,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.nam",{"_index":804,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decor",{"_index":747,"title":{},"body":{"classes/User.html":{}}}],["default",{"_index":420,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["demo",{"_index":901,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":903,"title":{},"body":{"index.html":{}}}],["dep",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":117,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":961,"title":{},"body":{"index.html":{}}}],["deseri",{"_index":818,"title":{},"body":{"injectables/UserService.html":{}}}],["deserialize(sessionstorage.getitem(this._key",{"_index":820,"title":{},"body":{"injectables/UserService.html":{}}}],["devlog",{"_index":510,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["devlog(data",{"_index":512,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["direct",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["disabl",{"_index":992,"title":{},"body":{"index.html":{}}}],["disabletimeout",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":1025,"title":{},"body":{"license.html":{}}}],["document",{"_index":825,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":691,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["doesn\\'t",{"_index":699,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["dom",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["don't",{"_index":695,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["don\\'t",{"_index":700,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["dynam",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":991,"title":{},"body":{"index.html":{}}}],["ec2",{"_index":965,"title":{},"body":{"index.html":{}}}],["effort",{"_index":985,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":723,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["elast",{"_index":951,"title":{},"body":{"index.html":{}}}],["element",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["email",{"_index":434,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["en",{"_index":447,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["enablehtml",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":934,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":949,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":972,"title":{},"body":{"index.html":{}}}],["enter",{"_index":577,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["environ",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["environments/environ",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["error",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["error(`provid",{"_index":374,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["error(messag",{"_index":491,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["error.component.html",{"_index":391,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error.component.scss",{"_index":390,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error:${this._geterrorlist(errorrespons",{"_index":683,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorhandl",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":186,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errorlist",{"_index":684,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorlist}${error",{"_index":686,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorpagecompon",{"_index":99,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorrespons",{"_index":395,"title":{"interfaces/ErrorResponse.html":{}},"body":{"interfaces/ErrorResponse.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["es",{"_index":448,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["es6",{"_index":971,"title":{},"body":{"index.html":{}}}],["event",{"_index":477,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{},"license.html":{}}}],["exce",{"_index":581,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["expect",{"_index":375,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["expos",{"_index":917,"title":{},"body":{"index.html":{}}}],["express",{"_index":911,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":499,"title":{},"body":{"injectables/LogService.html":{}}}],["extensions/password",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["fals",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["fast_rewind",{"_index":350,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["feed",{"_index":948,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fit",{"_index":1042,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1031,"title":{},"body":{"license.html":{}}}],["fontawesome5",{"_index":910,"title":{},"body":{"index.html":{}}}],["fork",{"_index":923,"title":{},"body":{"index.html":{}}}],["form",{"_index":540,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["form.get('password').value?.length",{"_index":689,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["form.get(\\'password\\').value?.length",{"_index":698,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["format",{"_index":377,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["formbuild",{"_index":526,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["formcontrol",{"_index":649,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["formdata",{"_index":776,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.nam",{"_index":798,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.password",{"_index":799,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formgroup",{"_index":530,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{}}}],["formsmodul",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["free",{"_index":1010,"title":{},"body":{"license.html":{}}}],["front",{"_index":933,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":932,"title":{},"body":{"index.html":{}}}],["full",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"index.html":{}}}],["function",{"_index":200,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":1029,"title":{},"body":{"license.html":{}}}],["get",{"_index":898,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdatefromutcstr",{"_index":362,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getdatefromutcstring(utcdatestr",{"_index":363,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getemail",{"_index":752,"title":{},"body":{"classes/User.html":{}}}],["getform",{"_index":524,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["getfromformdata",{"_index":766,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfromformdata(formdata",{"_index":773,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload",{"_index":767,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload(payload",{"_index":777,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getlastlogin",{"_index":754,"title":{},"body":{"classes/User.html":{}}}],["getnam",{"_index":756,"title":{},"body":{"classes/User.html":{}}}],["getpassword",{"_index":758,"title":{},"body":{"classes/User.html":{}}}],["getpayload",{"_index":768,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getpayload(us",{"_index":780,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getus",{"_index":769,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["getuser(email",{"_index":782,"title":{},"body":{"injectables/UserFactory.html":{}}}],["gitignor",{"_index":999,"title":{},"body":{"index.html":{}}}],["googl",{"_index":953,"title":{},"body":{"index.html":{}}}],["gotologin",{"_index":659,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["gotosignup",{"_index":543,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["grant",{"_index":1009,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1061,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":263,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["hammerj",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":380,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":383,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.servic",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":379,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":384,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:8",{"_index":382,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["header",{"_index":424,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.servic",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["header.interceptor.service.t",{"_index":416,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:12",{"_index":418,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:17",{"_index":419,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["headers['cont",{"_index":428,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["helper.servic",{"_index":793,"title":{},"body":{"injectables/UserFactory.html":{}}}],["helper.service.t",{"_index":361,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:8",{"_index":364,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["helper/d",{"_index":792,"title":{},"body":{"injectables/UserFactory.html":{}}}],["herebi",{"_index":1008,"title":{},"body":{"license.html":{}}}],["heroimageuri",{"_index":283,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["holder",{"_index":1046,"title":{},"body":{"license.html":{}}}],["home",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["home.component.html",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.routing.modul",{"_index":410,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/home.module#homemodul",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homecompon",{"_index":102,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodul",{"_index":403,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homerout",{"_index":413,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["homeroutingmodul",{"_index":407,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["http",{"_index":897,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http/request",{"_index":465,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["http_interceptor",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["httpclientmodul",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":665,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["httpevent",{"_index":329,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httphandler",{"_index":325,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":330,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":324,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprespons",{"_index":472,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["identifi",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["immut",{"_index":944,"title":{},"body":{"index.html":{}}}],["implement",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["impli",{"_index":1040,"title":{},"body":{"license.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["includ",{"_index":1020,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":273,"title":{"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":320,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["inspector.servic",{"_index":466,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["inspector.service.t",{"_index":712,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["inspector.service.ts:7",{"_index":715,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["instanceof",{"_index":478,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["instruct",{"_index":997,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":318,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":323,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interceptor",{"_index":315,"title":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/UserPayload.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interface/service/log.service.abstract",{"_index":385,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["isconfigfilerequest",{"_index":713,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest(req",{"_index":714,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isnan(date.gettim",{"_index":372,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["issu",{"_index":993,"title":{},"body":{"index.html":{}}}],["it'",{"_index":921,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["json.stringify(serialize(us",{"_index":822,"title":{},"body":{"injectables/UserService.html":{}}}],["jsonheaderinterceptor",{"_index":131,"title":{"interceptors/JsonHeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["jwt",{"_index":785,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{},"index.html":{}}}],["jwtdecod",{"_index":784,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtdecode(payload.token",{"_index":801,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtpayload",{"_index":431,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["kind",{"_index":1039,"title":{},"body":{"license.html":{}}}],["lang",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["langswitchcompon",{"_index":104,"title":{"components/LangSwitchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lastlogin",{"_index":589,"title":{},"body":{"interfaces/LoginResult.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["layout",{"_index":280,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["layout/component/auth/auth.compon",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["layout/component/error/error.compon",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout/component/main/main.compon",{"_index":412,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["layout/layout.modul",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{}}}],["layoutmodul",{"_index":129,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"overview.html":{}}}],["level",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["liabil",{"_index":1050,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1047,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1000,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1021,"title":{},"body":{"license.html":{}}}],["line",{"_index":978,"title":{},"body":{"index.html":{}}}],["line:no",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["lint",{"_index":877,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["loadchildren",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lock.json",{"_index":998,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":482,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"index.html":{}}}],["log(messag",{"_index":493,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["logerroruri",{"_index":497,"title":{},"body":{"injectables/LogService.html":{}}}],["logger",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["loggerconfig",{"_index":498,"title":{},"body":{"injectables/LogService.html":{}}}],["loggermodul",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":312,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["login'},{'nam",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["login(email",{"_index":601,"title":{},"body":{"injectables/LoginService.html":{}}}],["login(this.form.value.email",{"_index":564,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login.compon",{"_index":455,"title":{},"body":{"modules/LayoutModule.html":{}}}],["login.component.html",{"_index":347,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.scss",{"_index":346,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.t",{"_index":345,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:11",{"_index":349,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login.component.ts:8",{"_index":348,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login/back",{"_index":344,"title":{},"body":{"components/BackToLoginComponent.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["loginformfactori",{"_index":522,"title":{"injectables/LoginFormFactory.html":{}},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecompon",{"_index":107,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginresult",{"_index":586,"title":{"interfaces/LoginResult.html":{}},"body":{"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["loginservic",{"_index":546,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":622,"title":{},"body":{"injectables/LogoutService.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["logoutservic",{"_index":268,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/LogoutService.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["logrequestinterceptor",{"_index":132,"title":{"interceptors/LogRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"overview.html":{}}}],["logresponseinterceptor",{"_index":133,"title":{"interceptors/LogResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogResponseInterceptor.html":{},"overview.html":{}}}],["logservic",{"_index":197,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logserviceabstract",{"_index":45,"title":{"classes/LogServiceAbstract.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["made",{"_index":986,"title":{},"body":{"index.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["main.component.html",{"_index":642,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["main.component.scss",{"_index":641,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["mainlayoutcompon",{"_index":108,"title":{"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":603,"title":{},"body":{"injectables/LoginService.html":{}}}],["matbuttonmodul",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{}}}],["matcardmodul",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["match",{"_index":16,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["matformfieldmodul",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{}}}],["maticonmodul",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["matinputmodul",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{}}}],["matpasswordstrengthmodul",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["matpasswordstrengthmodule.forroot",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{}}}],["max",{"_index":977,"title":{},"body":{"index.html":{}}}],["maxopen",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":907,"title":{},"body":{"index.html":{}}}],["measur",{"_index":974,"title":{},"body":{"index.html":{}}}],["menu",{"_index":737,"title":{},"body":{"components/TopnavComponent.html":{}}}],["merchant",{"_index":1041,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1023,"title":{},"body":{"license.html":{}}}],["messag",{"_index":490,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":894,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1001,"title":{},"body":{"license.html":{}}}],["mm",{"_index":370,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["model/payload/api",{"_index":629,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/error",{"_index":631,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/jwt",{"_index":787,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/login",{"_index":789,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/us",{"_index":790,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/user.model",{"_index":791,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["modifi",{"_index":1022,"title":{},"body":{"license.html":{}}}],["modul",{"_index":115,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":367,"title":{},"body":{"injectables/DateHelperService.html":{},"dependencies.html":{}}}],["moment(utcdatestr",{"_index":368,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["mongodb",{"_index":912,"title":{},"body":{"index.html":{}}}],["more",{"_index":688,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["ms",{"_index":728,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["msg",{"_index":9,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{}}}],["multi",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nav.backtologin",{"_index":351,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["nav.errorpag",{"_index":394,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["new",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["newpasswordcontrol",{"_index":650,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["next",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(authreq",{"_index":342,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["next.handle(req",{"_index":337,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req).pip",{"_index":475,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["ng2",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"dependencies.html":{}}}],["ng2uiauthmodul",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["ng2uiauthmodule.forroot(authconfig",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["ngrx/effect",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":855,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"injectables/LogService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":485,"title":{},"body":{"injectables/LogService.html":{}}}],["ngxloggerlevel",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.off",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.trac",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":1045,"title":{},"body":{"license.html":{}}}],["note",{"_index":984,"title":{},"body":{"index.html":{}}}],["notic",{"_index":1034,"title":{},"body":{"license.html":{}}}],["null",{"_index":638,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/UserFactory.html":{}}}],["number",{"_index":721,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["object.values(errorresponse.error).foreach((error",{"_index":685,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["observ",{"_index":328,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{}}}],["obtain",{"_index":1013,"title":{},"body":{"license.html":{}}}],["of(us",{"_index":618,"title":{},"body":{"injectables/LoginService.html":{}}}],["old",{"_index":957,"title":{},"body":{"index.html":{}}}],["onactivatetick",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":1055,"title":{},"body":{"license.html":{}}}],["out",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outdatedbrows",{"_index":955,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1063,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":843,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":389,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page'},{'nam",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["pages.login.loginbutton",{"_index":584,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.registerlink",{"_index":585,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.titl",{"_index":574,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.register.loginlink",{"_index":697,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.registerbutton",{"_index":696,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.titl",{"_index":687,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["paramet",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1043,"title":{},"body":{"license.html":{}}}],["passport",{"_index":925,"title":{},"body":{"index.html":{}}}],["password",{"_index":537,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["path",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pattern",{"_index":905,"title":{},"body":{"index.html":{}}}],["payload",{"_index":779,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.lastlogin",{"_index":805,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model",{"_index":788,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model.t",{"_index":433,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["perform",{"_index":943,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":1007,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1028,"title":{},"body":{"license.html":{}}}],["person",{"_index":1012,"title":{},"body":{"license.html":{}}}],["pete",{"_index":1005,"title":{},"body":{"license.html":{}}}],["pipe(map(this._setuser.bind(thi",{"_index":614,"title":{},"body":{"injectables/LoginService.html":{}}}],["pipelin",{"_index":959,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":576,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["popper.j",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":1037,"title":{},"body":{"license.html":{}}}],["positionclass",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":422,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["pre",{"_index":975,"title":{},"body":{"index.html":{}}}],["preloadallmodul",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategi",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["privat",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["product",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":902,"title":{},"body":{"index.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AuthLayoutComponent.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["protect",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["provid",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["public",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["publish",{"_index":1024,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1044,"title":{},"body":{"license.html":{}}}],["put",{"_index":423,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["qualiti",{"_index":973,"title":{},"body":{"index.html":{}}}],["reactiv",{"_index":941,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["readonli",{"_index":14,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{}}}],["recaptcha",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["redi",{"_index":931,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":956,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regist",{"_index":313,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"index.html":{}}}],["register'},{'nam",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["register(us",{"_index":677,"title":{},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["register.component.html",{"_index":657,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["register.component.scss",{"_index":656,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["registerformfactori",{"_index":645,"title":{"injectables/RegisterFormFactory.html":{}},"body":{"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["registerpagecompon",{"_index":110,"title":{"components/RegisterPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerservic",{"_index":662,"title":{"injectables/RegisterService.html":{}},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registr",{"_index":682,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["repositori",{"_index":990,"title":{},"body":{"index.html":{}}}],["req",{"_index":327,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clon",{"_index":339,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["req.url.endswith('/assets/config.json",{"_index":716,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.urlwithparam",{"_index":726,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":725,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request.interceptor.servic",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["request.interceptor.service.t",{"_index":460,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:14",{"_index":463,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:21",{"_index":464,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["requestinspectorservic",{"_index":462,"title":{"injectables/RequestInspectorService.html":{}},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["requir",{"_index":580,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["require('../../assets/config.json",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["response.interceptor.servic",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.service.t",{"_index":469,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:16",{"_index":470,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:23",{"_index":471,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.model",{"_index":630,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["response.model.t",{"_index":6,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["rest",{"_index":915,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":1019,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.model",{"_index":606,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserFactory.html":{}}}],["result.model.t",{"_index":588,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["return",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["right",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["root",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["root'},{'nam",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["rout",{"_index":242,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":548,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["routermodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["routermodule.forchild(authrout",{"_index":314,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(homerout",{"_index":414,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rule",{"_index":692,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["run",{"_index":995,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":946,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":331,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/internal/oper",{"_index":604,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["rxjs/oper",{"_index":474,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["s3",{"_index":966,"title":{},"body":{"index.html":{}}}],["scss",{"_index":970,"title":{},"body":{"index.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["sell",{"_index":919,"title":{},"body":{"index.html":{},"license.html":{}}}],["serial",{"_index":819,"title":{},"body":{"injectables/UserService.html":{}}}],["serverloglevel",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["service/factory/form/login.form.factori",{"_index":558,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/factory/form/register.form.factori",{"_index":673,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["service/login.servic",{"_index":559,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/register.servic",{"_index":674,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["sessionstorage.removeitem(this._key",{"_index":823,"title":{},"body":{"injectables/UserService.html":{}}}],["sessionstorage.setitem(this._key",{"_index":821,"title":{},"body":{"injectables/UserService.html":{}}}],["sethead",{"_index":340,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["setlang",{"_index":440,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["setlang(lang",{"_index":444,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["setus",{"_index":812,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(us",{"_index":815,"title":{},"body":{"injectables/UserService.html":{}}}],["shall",{"_index":1035,"title":{},"body":{"license.html":{}}}],["sitetitl",{"_index":291,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/TopnavComponent.html":{}}}],["softwar",{"_index":1015,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["spoon",{"_index":922,"title":{},"body":{"index.html":{}}}],["spork",{"_index":920,"title":{},"body":{"index.html":{}}}],["src/.../app.module.t",{"_index":895,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.config.t",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.routing.module.t",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.module.t",{"_index":310,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/component/login/login.component.t",{"_index":539,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/login/login.component.ts:17",{"_index":551,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:28",{"_index":557,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:33",{"_index":556,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:42",{"_index":554,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:48",{"_index":553,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:53",{"_index":555,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/register/register.component.t",{"_index":655,"title":{},"body":{"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/register/register.component.ts:19",{"_index":663,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:29",{"_index":671,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:33",{"_index":672,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:44",{"_index":669,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:49",{"_index":666,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:57",{"_index":668,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:66",{"_index":670,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.t",{"_index":523,"title":{},"body":{"injectables/LoginFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:11",{"_index":529,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:8",{"_index":527,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.t",{"_index":646,"title":{},"body":{"injectables/RegisterFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:13",{"_index":647,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:16",{"_index":648,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/login.service.t",{"_index":590,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/auth/service/login.service.ts:17",{"_index":597,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:29",{"_index":598,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:36",{"_index":602,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:42",{"_index":600,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/register.service.t",{"_index":701,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{}}}],["src/app/auth/service/register.service.ts:14",{"_index":703,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:24",{"_index":704,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:31",{"_index":705,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/config/auth.config.t",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/component/lang",{"_index":435,"title":{},"body":{"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.t",{"_index":355,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/interface/service/log.service.abstract.t",{"_index":508,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:10",{"_index":518,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:13",{"_index":513,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:5",{"_index":511,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:6",{"_index":515,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:7",{"_index":516,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/model/payload/api",{"_index":5,"title":{},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/error",{"_index":396,"title":{},"body":{"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/jwt",{"_index":432,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/app/core/model/payload/login",{"_index":587,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["src/app/core/model/payload/us",{"_index":808,"title":{},"body":{"interfaces/UserPayload.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.t",{"_index":738,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:11",{"_index":745,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:25",{"_index":753,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:29",{"_index":755,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:33",{"_index":757,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:37",{"_index":759,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:5",{"_index":749,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:7",{"_index":750,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:9",{"_index":751,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/service/auth/logout.service.t",{"_index":619,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{}}}],["src/app/core/service/auth/logout.service.ts:17",{"_index":624,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:29",{"_index":626,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:36",{"_index":627,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:48",{"_index":625,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/error",{"_index":378,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.t",{"_index":765,"title":{},"body":{"injectables/UserFactory.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.ts:13",{"_index":771,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:16",{"_index":781,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:24",{"_index":775,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:28",{"_index":778,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:40",{"_index":783,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/guard/auth.guard.t",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:10",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:16",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/helper/d",{"_index":360,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["src/app/core/service/http/request",{"_index":711,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["src/app/core/service/interceptor/auth",{"_index":316,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["src/app/core/service/interceptor/json",{"_index":415,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["src/app/core/service/interceptor/log",{"_index":459,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.t",{"_index":717,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:16",{"_index":718,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:23",{"_index":719,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/log.service.t",{"_index":480,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/core/service/log.service.ts:13",{"_index":489,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:18",{"_index":492,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:23",{"_index":494,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:27",{"_index":496,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:7",{"_index":486,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/user.service.t",{"_index":809,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/service/user.service.ts:10",{"_index":817,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:12",{"_index":814,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:16",{"_index":816,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:20",{"_index":813,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/home/component/home/home.component.t",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/component/home/home.component.ts:11",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/home/home.component.ts:8",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.t",{"_index":408,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routing.module.t",{"_index":411,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/layout/component/auth/auth.component.t",{"_index":279,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/auth/auth.component.ts:10",{"_index":285,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:16",{"_index":286,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:23",{"_index":287,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/back",{"_index":343,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.t",{"_index":388,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.ts:11",{"_index":393,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/error/error.component.ts:8",{"_index":392,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/main/main.component.t",{"_index":640,"title":{},"body":{"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/main/main.component.ts:11",{"_index":644,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["src/app/layout/component/main/main.component.ts:8",{"_index":643,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.t",{"_index":729,"title":{},"body":{"components/TopnavComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:10",{"_index":733,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:15",{"_index":735,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:18",{"_index":734,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/layout.module.t",{"_index":452,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/environments/environment.prod.t",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabil",{"_index":945,"title":{},"body":{"index.html":{}}}],["stack",{"_index":900,"title":{},"body":{"index.html":{}}}],["stage",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":720,"title":{"index.html":{},"license.html":{}},"body":{"interceptors/TimingInterceptor.html":{}}}],["statement",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":918,"title":{},"body":{"index.html":{}}}],["strength",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["strict",{"_index":968,"title":{},"body":{"index.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["stripe",{"_index":940,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["subject",{"_index":1030,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1026,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":566,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["substanti",{"_index":1036,"title":{},"body":{"license.html":{}}}],["success",{"_index":679,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["super",{"_index":500,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":1058,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1059,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":437,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch'},{'nam",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["switch.compon",{"_index":358,"title":{},"body":{"modules/CoreModule.html":{}}}],["switch.component.html",{"_index":439,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.scss",{"_index":438,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.t",{"_index":436,"title":{},"body":{"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:14",{"_index":443,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.ts:16",{"_index":445,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.ts:9",{"_index":442,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch/lang",{"_index":357,"title":{},"body":{"modules/CoreModule.html":{},"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["tabl",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":473,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((ev",{"_index":476,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["taptodismiss",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["templat",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["test",{"_index":981,"title":{},"body":{"index.html":{}}}],["this._authservic",{"_index":613,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._authservice.isauthent",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._authservice.logout",{"_index":560,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{}}}],["this._authservice.removetoken",{"_index":635,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._completehandler.bind(thi",{"_index":639,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._configservice.getset",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["this._configur",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["this._configuretransl",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["this._datehelper.getdatefromutcstring(payload.lastlogin",{"_index":806,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this._email",{"_index":761,"title":{},"body":{"classes/User.html":{}}}],["this._errorhandler.bind(thi",{"_index":568,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._formbuilder.control",{"_index":652,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.control(nul",{"_index":534,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.group",{"_index":533,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formfactory.getform",{"_index":562,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._http.post",{"_index":709,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._http.post(this._logouturi",{"_index":637,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._injector.get",{"_index":334,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["this._jsonencodeverbs.includes(req.method.touppercas",{"_index":427,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["this._lastlogin",{"_index":762,"title":{},"body":{"classes/User.html":{}}}],["this._logger.devlog",{"_index":724,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["this._logger.devlog(error",{"_index":386,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.devlog(errorresponse.error",{"_index":680,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._logger.devlog(ev",{"_index":479,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["this._logger.devlog(req",{"_index":468,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["this._logger.devlog(result",{"_index":571,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._logger.devlog(us",{"_index":616,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logger.error(error",{"_index":387,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.updateloggeruri",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this._loginservic",{"_index":563,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._loginuri",{"_index":611,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logoutservice.logout",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"components/TopnavComponent.html":{}}}],["this._logouturi",{"_index":633,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._nam",{"_index":763,"title":{},"body":{"classes/User.html":{}}}],["this._ngxlogger.debug(messag",{"_index":501,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.error(messag",{"_index":502,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.getconfigsnapshot",{"_index":505,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.log(messag",{"_index":503,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.updateconfig(updatedconfig",{"_index":507,"title":{},"body":{"injectables/LogService.html":{}}}],["this._password",{"_index":764,"title":{},"body":{"classes/User.html":{}}}],["this._registerservic",{"_index":676,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._registeruri",{"_index":707,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._requestinspector.isconfigfilerequest(req",{"_index":467,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["this._router.navigate(['auth",{"_index":573,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["this._router.navigate(['hom",{"_index":570,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._successhandler.bind(thi",{"_index":567,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._titleservice.settitle(sitetitl",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastr.error",{"_index":681,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._toastr.error('login",{"_index":572,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.success('log",{"_index":569,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.success('register",{"_index":678,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._translateservice.get('sitetitle').subscribe((sitetitl",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.setdefaultlang('en",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use('en",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use(lang",{"_index":446,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["this._userfactory.getfromformdata(this.form.valu",{"_index":675,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._userfactory.getfrompayload(result",{"_index":615,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._userfactory.getpayload(us",{"_index":710,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._userservice.clearus",{"_index":636,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._userservice.setuser(us",{"_index":617,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.form",{"_index":561,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this.form.value.password",{"_index":565,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.getus",{"_index":802,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.getuser(formdata.email",{"_index":797,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.heroimageuri",{"_index":289,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["throw",{"_index":373,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["time",{"_index":987,"title":{},"body":{"index.html":{}}}],["timinginterceptor",{"_index":134,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["titl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservic",{"_index":550,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["todo",{"_index":579,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["token",{"_index":335,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interfaces/LoginResult.html":{}}}],["token.interceptor.servic",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["token.interceptor.service.t",{"_index":317,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:12",{"_index":321,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:16",{"_index":326,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["took",{"_index":727,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["topnav",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["topnav.component.html",{"_index":731,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav.component.scss",{"_index":730,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnavcompon",{"_index":112,"title":{"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tort",{"_index":1054,"title":{},"body":{"license.html":{}}}],["translat",{"_index":292,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["translate/cor",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["translatemodule.forroot",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["translatepip",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/LangSwitchComponent.html":{}}}],["tree",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["true",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:disable:no",{"_index":332,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:enable:no",{"_index":333,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":969,"title":{},"body":{"index.html":{}}}],["ui",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["undefin",{"_index":896,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":906,"title":{},"body":{"index.html":{}}}],["unit",{"_index":980,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["updatedconfig",{"_index":504,"title":{},"body":{"injectables/LogService.html":{}}}],["updatedconfig.serverloggingurl",{"_index":506,"title":{},"body":{"injectables/LogService.html":{}}}],["updateloggeruri",{"_index":483,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(apibaseuri",{"_index":517,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(logerroruri",{"_index":495,"title":{},"body":{"injectables/LogService.html":{}}}],["us",{"_index":926,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":607,"title":{"classes/User.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user(email",{"_index":807,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.email",{"_index":795,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.nam",{"_index":794,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.password",{"_index":796,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.servic",{"_index":632,"title":{},"body":{"injectables/LogoutService.html":{}}}],["userfactori",{"_index":594,"title":{"injectables/UserFactory.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["userpayload",{"_index":774,"title":{"interfaces/UserPayload.html":{}},"body":{"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["userservic",{"_index":596,"title":{"injectables/UserService.html":{}},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["utc",{"_index":376,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["utcdatestr",{"_index":365,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["valid",{"_index":531,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["validators.maxlength(255",{"_index":538,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["validators.requir",{"_index":536,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["valu",{"_index":421,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{}}}],["variabl",{"_index":836,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{}}}],["warranti",{"_index":1038,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1051,"title":{},"body":{"license.html":{}}}],["winston",{"_index":950,"title":{},"body":{"index.html":{}}}],["without",{"_index":1018,"title":{},"body":{"license.html":{}}}],["work",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{}}}],["yarn",{"_index":890,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ye",{"_index":746,"title":{},"body":{"classes/User.html":{},"injectables/UserFactory.html":{}}}],["yyyi",{"_index":369,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["zone.j",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/api-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  readonly msg: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _configureTranslation\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_angulartics2GoogleTagManager: Angulartics2GoogleTagManager, _configService: ConfigService, _logger: LogServiceAbstract, _titleService: Title, _translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _angulartics2GoogleTagManager\n                                                  \n                                                        \n                                                                    Angulartics2GoogleTagManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configureTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configureTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ConfigService } from '@ngx-config/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private _angulartics2GoogleTagManager: Angulartics2GoogleTagManager,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _titleService: Title,\n    private _translateService: TranslateService\n  ) {\n    this._configureTranslation();\n  }\n\n  public ngOnInit(): void {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    this._translateService.get('siteTitle').subscribe((siteTitle: string) => {\n      this._titleService.setTitle(siteTitle);\n    });\n\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logger.updateLoggerUri(\n      `${config.core.apiBaseUri}${config.logging.logErrorUri}`\n    );\n  }\n\n  protected _configureTranslation(): void {\n    this._translateService.setDefaultLang('en');\n    this._translateService.use('en');\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthTokenInterceptor\n                            \n                            \n                                     JsonHeaderInterceptor\n                            \n                            \n                                     LogRequestInterceptor\n                            \n                            \n                                     LogResponseInterceptor\n                            \n                            \n                                     TimingInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { ConfigLoader, ConfigModule, ConfigService } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { Ng2UiAuthModule } from 'ng2-ui-auth';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthConfig } from './config/auth.config';\nimport { CoreModule } from './core/core.module';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\nimport { ErrorHandlerService } from './core/service/error-handler.service';\nimport { AuthTokenInterceptor } from './core/service/interceptor/auth-token.interceptor.service';\nimport { JsonHeaderInterceptor } from './core/service/interceptor/json-header.interceptor.service';\nimport { LogRequestInterceptor } from './core/service/interceptor/log-request.interceptor.service';\nimport { LogResponseInterceptor } from './core/service/interceptor/log-response.interceptor.service';\nimport { TimingInterceptor } from './core/service/interceptor/timing.interceptor.service';\nimport { LogService } from './core/service/log.service';\nimport { LayoutModule } from './layout/layout.module';\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  return new ConfigHttpLoader(http, './assets/config.json');\n}\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AppRoutingModule,\n    AuthModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient],\n    }),\n    CoreModule,\n    FormsModule,\n    HttpClientModule,\n    LayoutModule,\n    LoggerModule.forRoot({\n      level: environment.production ? NgxLoggerLevel.OFF : NgxLoggerLevel.TRACE,\n      serverLogLevel: NgxLoggerLevel.ERROR,\n    }),\n    MatPasswordStrengthModule.forRoot(),\n    Ng2UiAuthModule.forRoot(AuthConfig),\n    ReactiveFormsModule,\n    RouterModule,\n    ToastrModule.forRoot({\n      enableHtml: true,\n      disableTimeOut: true,\n      maxOpened: 2,\n      onActivateTick: true,\n      positionClass: 'toast-bottom-right',\n      tapToDismiss: true,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  declarations: [AppComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TimingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JsonHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogRequestInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n\n    {\n      provide: ErrorHandler,\n      useClass: ErrorHandlerService,\n    },\n\n    ConfigService,\n    TranslatePipe,\n\n    {\n      provide: LogServiceAbstract,\n      useClass: LogService,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { LoginPageComponent } from './auth/component/login/login.component';\nimport { RegisterPageComponent } from './auth/component/register/register.component';\nimport { AuthGuard } from './core/service/guard/auth.guard';\nimport { AuthLayoutComponent } from './layout/component/auth/auth.component';\nimport { ErrorPageComponent } from './layout/component/error/error.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: './auth/auth.module#AuthModule',\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/auth/login',\n  },\n  {\n    path: 'home',\n    canActivate: [AuthGuard],\n    loadChildren: './home/home.module#HomeModule',\n  },\n  {\n    path: '**',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: '**',\n        component: ErrorPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/service/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_authService: AuthService, _logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/guard/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        canActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/guard/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\n\nimport { LogoutService } from '../auth/logout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  public constructor(\n    private _authService: AuthService,\n    private _logoutService: LogoutService\n  ) {}\n\n  public canActivate(): boolean {\n    if (this._authService.isAuthenticated()) {\n      return true;\n    }\n\n    this._logoutService.logout();\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n            \n                styleUrls\n                auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                heroImageUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heroImageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heroImageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthLayoutComponent implements OnInit {\n  public heroImageUri: string;\n\n  constructor(private _configService: ConfigService) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this.heroImageUri = `${config.auth.heroImageUri}`;\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      {{ 'siteTitle' | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'siteTitle\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAuthModule -->\n\nCoreModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginPageComponent\n                            \n                            \n                                RegisterPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { AuthRoutingModule } from './auth.routing.module';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\n@NgModule({\n  imports: [\n    AuthRoutingModule,\n    CommonModule,\n    CoreModule,\n    FormsModule,\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPasswordStrengthModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [LoginPageComponent, RegisterPageComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthLayoutComponent } from '../layout/component/auth/auth.component';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\nconst authRoutes: Routes = [\n  {\n    path: '',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginPageComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(authRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthTokenInterceptor.html":{"url":"interceptors/AuthTokenInterceptor.html","title":"interceptor - AuthTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/auth-token.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  public constructor(private _injector: Injector) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    const authService: AuthService = this._injector.get(\n      AuthService\n    );\n    const token: string = authService.getToken();\n    if (!token) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: { Authorization: token },\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackToLoginComponent.html":{"url":"components/BackToLoginComponent.html","title":"component - BackToLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BackToLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/back-to-login/back-to-login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-to-login\n            \n\n            \n                styleUrls\n                back-to-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./back-to-login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-back-to-login',\n  templateUrl: './back-to-login.component.html',\n  styleUrls: ['./back-to-login.component.scss'],\n})\nexport class BackToLoginComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      fast_rewind{{ 'nav.backToLogin' | translate }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              fast_rewind{{ \\'nav.backToLogin\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackToLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nLangSwitchComponent\n\nLangSwitchComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLangSwitchComponent->CoreModule\n\n\n\n\n\nLangSwitchComponent \n\nLangSwitchComponent \n\nLangSwitchComponent  -->\n\nCoreModule->LangSwitchComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LangSwitchComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LangSwitchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LangSwitchComponent } from './component/lang-switch/lang-switch.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LangSwitchComponent],\n  exports: [LangSwitchComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateHelperService.html":{"url":"injectables/DateHelperService.html","title":"injectable - DateHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DateHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/helper/date-helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDateFromUtcString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDateFromUtcString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDateFromUtcString(utcDateString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/helper/date-helper.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utcDateString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateHelperService {\n  public getDateFromUtcString(utcDateString: string): Date {\n    const date: Date = moment(utcDateString, 'YYYY-MM-DDTHH:mm:ssZa').toDate();\n\n    if (isNaN(date.getTime())) {\n      throw new Error(`Provided date string is not in expected UTC format`);\n    }\n\n    return date;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/error-handler.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-handler.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(private _logger: LogServiceAbstract) {}\n\n  // tslint:disable-next-line:no-any\n  handleError(error: any): void {\n    this._logger.devLog(error);\n    this._logger.error(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/error/error.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ 'nav.errorPage' | translate }}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'nav.errorPage\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorResponse.html":{"url":"interfaces/ErrorResponse.html","title":"interface - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/error-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errors\n                                \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorResponse {\n  readonly msg: string;\n  readonly errors: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/home/home.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  home works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  home works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    HomeRoutingModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { HomeComponent } from './component/home/home.component';\nimport { HomeRoutingModule } from './home.routing.module';\n\n@NgModule({\n  imports: [CommonModule, CoreModule, HomeRoutingModule, LayoutModule],\n  declarations: [HomeComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './component/home/home.component';\nimport { MainLayoutComponent } from '../layout/component/main/main.component';\n\nconst homeRoutes: Routes = [\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        component: HomeComponent,\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(homeRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JsonHeaderInterceptor.html":{"url":"interceptors/JsonHeaderInterceptor.html","title":"interceptor - JsonHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JsonHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/json-header.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonEncodeVerbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jsonEncodeVerbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _jsonEncodeVerbs:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['POST', 'PUT']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JsonHeaderInterceptor implements HttpInterceptor {\n  private _jsonEncodeVerbs: string[] = ['POST', 'PUT'];\n\n  public constructor() {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    // tslint:disable-next-line:no-any\n    const headers: any = {\n      Accept: 'application/json',\n    };\n\n    if (this._jsonEncodeVerbs.includes(req.method.toUpperCase())) {\n      headers['Content-Type'] = 'application/json; charset=utf-8';\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: headers,\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/jwt-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  readonly email: string;\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LangSwitchComponent.html":{"url":"components/LangSwitchComponent.html","title":"component - LangSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LangSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/component/lang-switch/lang-switch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lang-switch\n            \n\n            \n                styleUrls\n                lang-switch.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./lang-switch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/component/lang-switch/lang-switch.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/component/lang-switch/lang-switch.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/component/lang-switch/lang-switch.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-lang-switch',\n  templateUrl: './lang-switch.component.html',\n  styleUrls: ['./lang-switch.component.scss']\n})\nexport class LangSwitchComponent implements OnInit {\n  constructor(\n    private _translateService: TranslateService\n  ) { }\n\n  public ngOnInit(): void {}\n\n  public setLang(lang: string): void {\n    this._translateService.use(lang);\n  }\n}\n\n    \n\n    \n        \n  en |\n  es\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  en |  es'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LangSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_imports\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nLayoutModule -->\n\nMainLayoutComponent->LayoutModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nLayoutModule -->\n\nTopnavComponent->LayoutModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthLayoutComponent\n                            \n                            \n                                BackToLoginComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                MainLayoutComponent\n                            \n                            \n                                TopnavComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule, MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { AuthLayoutComponent } from './component/auth/auth.component';\nimport { BackToLoginComponent } from './component/back-to-login/back-to-login.component';\nimport { ErrorPageComponent } from './component/error/error.component';\nimport { MainLayoutComponent } from './component/main/main.component';\nimport { TopnavComponent } from './component/topnav/topnav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatCardModule,\n    MatIconModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [\n    AuthLayoutComponent,\n    BackToLoginComponent,\n    ErrorPageComponent,\n    MainLayoutComponent,\n    TopnavComponent\n  ],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class LayoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogRequestInterceptor.html":{"url":"interceptors/LogRequestInterceptor.html","title":"interceptor - LogRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-request.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogRequestInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    this._logger.devLog(req);\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogResponseInterceptor.html":{"url":"interceptors/LogResponseInterceptor.html","title":"interceptor - LogResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-response.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        this._logger.devLog(event);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/log.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxLogger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxLogger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateLoggerUri(logErrorUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logErrorUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerConfig, NGXLogger } from 'ngx-logger';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable()\nexport class LogService extends LogServiceAbstract {\n  constructor(private _ngxLogger: NGXLogger) {\n    super();\n  }\n\n  // tslint:disable-next-line:no-any\n  debug(message: any): void {\n    this._ngxLogger.debug(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  error(message: any): void {\n    this._ngxLogger.error(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  log(message: any): void {\n    this._ngxLogger.log(message);\n  }\n\n  updateLoggerUri(logErrorUri: string): void {\n    const updatedConfig: LoggerConfig = this._ngxLogger.getConfigSnapshot();\n    updatedConfig.serverLoggingUrl = logErrorUri;\n\n    this._ngxLogger.updateConfig(updatedConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogServiceAbstract.html":{"url":"classes/LogServiceAbstract.html","title":"class - LogServiceAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogServiceAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interface/service/log.service.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                devLog\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        devLog(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLoggerUri(apiBaseUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiBaseUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../../environments/environment';\n\nexport abstract class LogServiceAbstract {\n  // tslint:disable:no-any\n  public abstract debug(message: any): void;\n  public abstract error(message: any): void;\n  public abstract log(message: any): void;\n  // tslint:enable:no-any\n\n  public abstract updateLoggerUri(apiBaseUri: string): void;\n\n  // tslint:disable-next-line:no-any\n  public devLog(data: any): void {\n    if (environment.production) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginFormFactory.html":{"url":"injectables/LoginFormFactory.html","title":"injectable - LoginFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/login.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/login.form.factory.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/login.form.factory.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      password: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToSignUp\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _formFactory: LoginFormFactory, _loginService: LoginService, _logger: LogServiceAbstract, _router: Router, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    LoginFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _loginService\n                                                  \n                                                        \n                                                                    LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(result: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { LoginFormFactory } from '../../service/factory/form/login.form.factory';\nimport { LoginService } from '../../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(\n    private _authService: AuthService,\n    private _formFactory: LoginFormFactory,\n    private _loginService: LoginService,\n    private _logger: LogServiceAbstract,\n    private _router: Router,\n    private _toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this._authService.logout();\n    this.form = this._formFactory.getForm();\n  }\n\n  public login(): void {\n    this._loginService\n      .login(this.form.value.email, this.form.value.password)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Logged in...');\n    this._router.navigate(['home']);\n  }\n\n  // tslint:disable-next-line:no-any\n  protected _errorHandler(result: any): void {\n    this._logger.devLog(result);\n    this._toastr.error('Login error');\n  }\n\n  public goToSignUp(): void {\n    this._router.navigate(['auth', 'register']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.login.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.login.loginButton' | translate }}\n  \n\n\n  {{ 'pages.login.registerLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.login.title\\' | translate }}                                        close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                          {{ \\'pages.login.loginButton\\' | translate }}    {{ \\'pages.login.registerLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResult.html":{"url":"interfaces/LoginResult.html","title":"interface - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/login-result.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastLogin\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResult {\n  readonly token: string;\n  readonly lastLogin: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/login.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loginUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _setUser\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _logger: LogServiceAbstract, _userFactory: UserFactory, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _setUser(result: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loginUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _loginUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { LogServiceAbstract } from '../../core/interface/service/log.service.abstract';\nimport { LoginResult } from '../../core/model/payload/login-result.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\nimport { UserService } from '../../core/service/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private _loginUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _userFactory: UserFactory,\n    private _userService: UserService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._loginUri = `${config.core.apiBaseUri}${config.auth.loginUri}`;\n  }\n\n  public login(email: string, password: string): Observable {\n    return this._authService\n      .login({ email, password }, this._loginUri)\n      .pipe(map(this._setUser.bind(this)));\n  }\n\n  protected _setUser(result: LoginResult): Observable {\n    const user: User = this._userFactory.getFromPayload(result);\n    this._logger.devLog(user);\n    this._userService.setUser(user);\n\n    return of(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/auth/logout.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logoutUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _completeHandler\n                            \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _http: HttpClient, _router: Router, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _completeHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _completeHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _logoutUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _logoutUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/internal/operators';\nimport { ApiResponse } from '../../model/payload/api-response.model';\nimport { ErrorResponse } from '../../model/payload/error-response.model';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutService {\n  private _logoutUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _router: Router,\n    private _userService: UserService,\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logoutUri = `${config.core.apiBaseUri}${config.auth.logoutUri}`;\n  }\n\n  public logout(): void {\n    this._authService.logout();\n    this._authService.removeToken();\n    this._userService.clearUser();\n\n    this._http.post(this._logoutUri, null)\n      .subscribe(\n        this._completeHandler.bind(this),\n        this._completeHandler.bind(this),\n      );\n  }\n\n  protected _completeHandler(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainLayoutComponent.html":{"url":"components/MainLayoutComponent.html","title":"component - MainLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-layout\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/main/main.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/main/main.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainLayoutComponent implements OnInit {\n  constructor() { }\n\n  public ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterFormFactory.html":{"url":"injectables/RegisterFormFactory.html","title":"injectable - RegisterFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/register.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/register.form.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/register.form.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    const newPasswordControl: FormControl = this._formBuilder.control(null, [\n      Validators.required,\n      Validators.maxLength(255),\n    ]);\n\n    const confirmPasswordControl: FormControl = this._formBuilder.control(\n      null,\n      [Validators.required, CustomValidators.equalTo(newPasswordControl)]\n    );\n\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      name: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n      password: newPasswordControl,\n      confirmPassword: confirmPasswordControl,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPageComponent.html":{"url":"components/RegisterPageComponent.html","title":"component - RegisterPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _getErrorList\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_formFactory: RegisterFormFactory, _logger: LogServiceAbstract, _registerService: RegisterService, _router: Router, _toastr: ToastrService, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    RegisterFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _registerService\n                                                  \n                                                        \n                                                                    RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _getErrorList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getErrorList(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { User } from '../../../core/model/user.model';\nimport { UserFactory } from '../../../core/service/factory/user.factory';\nimport { RegisterFormFactory } from '../../service/factory/form/register.form.factory';\nimport { RegisterService } from '../../service/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterPageComponent implements OnInit {\n  public form: FormGroup;\n  constructor(\n    private _formFactory: RegisterFormFactory,\n    private _logger: LogServiceAbstract,\n    private _registerService: RegisterService,\n    private _router: Router,\n    private _toastr: ToastrService,\n    private _userFactory: UserFactory\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this._formFactory.getForm();\n  }\n\n  public register(): void {\n    const user: User = this._userFactory.getFromFormData(this.form.value);\n\n    this._registerService\n      .register(user)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Registeration successful!');\n    this._router.navigate(['auth', 'login']);\n  }\n\n  protected _errorHandler(errorResponse: HttpErrorResponse): void {\n    this._logger.devLog(errorResponse.error);\n\n    this._toastr.error(\n      `Registration error:${this._getErrorList(errorResponse)}`\n    );\n  }\n\n  protected _getErrorList(errorResponse: HttpErrorResponse): string {\n    let errorList: string = '';\n    Object.values(errorResponse.error).forEach((error: string) => {\n      errorList = `${errorList}${error}`;\n    });\n\n    return `${errorList}`;\n  }\n\n  public goToLogin(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.register.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Your name cannot be more than 255 characters - TODO lang\n        \n        \n          Name is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          {{ form.get('password').value?.length }} / 32\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n        \n        \n          Your password doesn't match the rules below yet - TODO lang\n          \n          \n        \n      \n      \n      \n\n      \n        \n        \n          close\n        \n        \n          Please confirm password - TODO lang\n        \n        \n          Passwords don't match - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.register.registerButton' | translate }}\n  \n\n\n  {{ 'pages.register.loginLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.register.title\\' | translate }}                                        close                          Your name cannot be more than 255 characters - TODO lang                          Name is required - TODO lang                                              close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          {{ form.get(\\'password\\').value?.length }} / 32                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                                  Your password doesn\\'t match the rules below yet - TODO lang                                                                              close                          Please confirm password - TODO lang                          Passwords don\\'t match - TODO lang                          {{ \\'pages.register.registerButton\\' | translate }}    {{ \\'pages.register.loginLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/register.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _http: HttpClient, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _registerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _registerUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiResponse } from '../../core/model/payload/api-response.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterService {\n  private _registerUri: string;\n\n  constructor(\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _userFactory: UserFactory\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._registerUri = `${config.core.apiBaseUri}${config.auth.registerUri}`;\n  }\n\n  public register(user: User): Observable {\n    return this._http.post(\n      this._registerUri,\n      this._userFactory.getPayload(user)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInspectorService.html":{"url":"injectables/RequestInspectorService.html","title":"injectable - RequestInspectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestInspectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/http/request-inspector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isConfigFileRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isConfigFileRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isConfigFileRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/http/request-inspector.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class RequestInspectorService {\n  // tslint:disable-next-line:no-any\n  public isConfigFileRequest(req: HttpRequest): boolean {\n    return req.url.endsWith('/assets/config.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/timing.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    const started: number = Date.now();\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return event;\n        }\n\n        const elapsed: number = Date.now() - started;\n        this._logger.devLog(\n          `Request for ${req.urlWithParams} took ${elapsed} ms.`\n        );\n\n        return event;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopnavComponent.html":{"url":"components/TopnavComponent.html","title":"component - TopnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/topnav/topnav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topnav\n            \n\n            \n                styleUrls\n                topnav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topnav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/topnav/topnav.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/topnav/topnav.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/topnav/topnav.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { LogoutService } from '../../../core/service/auth/logout.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.scss']\n})\nexport class TopnavComponent implements OnInit {\n  constructor(\n    private _logoutService: LogoutService,\n  ) { }\n\n  public ngOnInit(): void {\n  }\n\n  public logout(): void {\n    this._logoutService.logout();\n  }\n}\n\n    \n\n    \n        \n  {{ 'siteTitle' | translate }}\n  \n  \n    menu\n  \n\n  \n    \n      \n        Logout\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'siteTitle\\' | translate }}        menu                      Logout            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _email\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _lastLogin\n                            \n                            \n                                    Private\n                                    Readonly\n                                _name\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    lastLogin\n                                \n                                \n                                    name\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, name: string, lastLogin?: Date, password?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastLogin\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _lastLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _lastLogin:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastLogin\n                    \n                \n\n                \n                    \n                        getlastLogin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { autoserialize } from 'cerialize';\n\nexport class User {\n  @autoserialize\n  private readonly _email: string;\n  @autoserialize\n  private readonly _lastLogin?: Date;\n  @autoserialize\n  private readonly _name: string;\n  @autoserialize\n  private readonly _password?: string;\n\n  constructor(\n    email: string,\n    name: string,\n    lastLogin?: Date,\n    password?: string\n  ) {\n    this._email = email;\n    this._lastLogin = lastLogin;\n    this._name = name;\n    this._password = password;\n  }\n\n  get email(): string {\n    return this._email;\n  }\n\n  get lastLogin(): Date {\n    return this._lastLogin;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get password(): string {\n    return this._password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFactory.html":{"url":"injectables/UserFactory.html","title":"injectable - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/factory/user.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromFormData\n                            \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getPayload\n                            \n                            \n                                    Public\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dateHelper: DateHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/factory/user.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dateHelper\n                                                  \n                                                        \n                                                                    DateHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromFormData(formData: UserPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formData\n                                                        \n                                                                    UserPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(payload: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPayload(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     UserPayload\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser(email: string, name: string, lastLogin: Date, password?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastLogin\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as jwtDecode from 'jwt-decode';\n\nimport { JwtPayload } from '../../model/payload/jwt-payload.model';\nimport { LoginResult } from '../../model/payload/login-result.model';\nimport { UserPayload } from '../../model/payload/user-payload.model';\nimport { User } from '../../model/user.model';\nimport { DateHelperService } from '../helper/date-helper.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFactory {\n  constructor(private _dateHelper: DateHelperService) {}\n\n  public getPayload(user: User): UserPayload {\n    return {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n    };\n  }\n\n  public getFromFormData(formData: UserPayload): User {\n    return this.getUser(formData.email, formData.name, null, formData.password);\n  }\n\n  public getFromPayload(payload: LoginResult): User {\n    const decodedToken: JwtPayload = jwtDecode(payload.token);\n\n    return this.getUser(\n      decodedToken.email,\n      decodedToken.name,\n      payload.lastLogin\n        ? this._dateHelper.getDateFromUtcString(payload.lastLogin)\n        : null\n    );\n  }\n\n  public getUser(\n    email: string,\n    name: string,\n    lastLogin: Date,\n    password?: string\n  ): User {\n    return new User(email, name, lastLogin, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/user-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPayload {\n  readonly name: string;\n  readonly email: string;\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _key\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Deserialize, Serialize } from 'cerialize';\n\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private _key: string = 'user';\n\n  public getUser(): User {\n    return Deserialize(sessionStorage.getItem(this._key));\n  }\n\n  public setUser(user: User): void {\n    sessionStorage.setItem(this._key, JSON.stringify(Serialize(user)));\n  }\n\n  public clearUser(): void {\n    sessionStorage.removeItem(this._key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                configFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/component/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginPageComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/component/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterPageComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/login.form.factory.ts\n            \n            \n                injectable\n            \n            \n                LoginFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/register.form.factory.ts\n            \n            \n                injectable\n            \n            \n                RegisterFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/login.service.ts\n            \n            \n                injectable\n            \n            \n                LoginService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/service/register.service.ts\n            \n            \n                injectable\n            \n            \n                RegisterService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                AuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/component/lang-switch/lang-switch.component.ts\n            \n            \n                component\n            \n            \n                LangSwitchComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interface/service/log.service.abstract.ts\n            \n            \n                class\n            \n            \n                LogServiceAbstract\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/api-response.model.ts\n            \n            \n                interface\n            \n            \n                ApiResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/error-response.model.ts\n            \n            \n                interface\n            \n            \n                ErrorResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/jwt-payload.model.ts\n            \n            \n                interface\n            \n            \n                JwtPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/login-result.model.ts\n            \n            \n                interface\n            \n            \n                LoginResult\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/user-payload.model.ts\n            \n            \n                interface\n            \n            \n                UserPayload\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/auth/logout.service.ts\n            \n            \n                injectable\n            \n            \n                LogoutService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/service/factory/user.factory.ts\n            \n            \n                injectable\n            \n            \n                UserFactory\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/helper/date-helper.service.ts\n            \n            \n                injectable\n            \n            \n                DateHelperService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/http/request-inspector.service.ts\n            \n            \n                injectable\n            \n            \n                RequestInspectorService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/component/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthLayoutComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/component/back-to-login/back-to-login.component.ts\n            \n            \n                component\n            \n            \n                BackToLoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainLayoutComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/topnav/topnav.component.ts\n            \n            \n                component\n            \n            \n                TopnavComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-extensions/password-strength : ^3.2.0\n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngx-config/core : ^6.0.0\n        \n            @ngx-config/http-loader : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            add : ^2.0.6\n        \n            angular2-recaptcha : ^1.1.0\n        \n            angulartics2 : ^6.3.0\n        \n            bootstrap : ^4.1.3\n        \n            cerialize : ^0.1.18\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            jwt-decode : ^2.2.0\n        \n            lint-staged : ^7.3.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.22.2\n        \n            ng2-ui-auth : ^9.0.0\n        \n            ng2-validation : ^4.2.0\n        \n            ngx-logger : ^3.3.2\n        \n            ngx-toastr : ^9.1.0\n        \n            popper.js : ^1.14.4\n        \n            rxjs : ~6.2.0\n        \n            yarn : ^1.10.1\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 6 Full-Stack Demo\nIn this project I am demonstrating my current patterns and understanding in the\nMEAN stack composed of Angular 6, Angular Material, Bootstrap 4, FontAwesome5, express,\nand MongoDB.\nBackend\nIn this application, an express REST API backed by MongoDB exposes a store\nselling sporks (it's a spoon and fork combined!).\nPassport and JWT are used for authentication against MongoDB and call authentication.\nTODO is JWT blacklisting and logout since Redis is not in the stack\nFrontend\nAn Angular Material front-end consumes the API.  The customer registers, builds a cart, then checks out using Stripe.\nIn the Angular app, we use @ngrx/store, reactive forms, and ChangeDetectionStrategy.Push for performance, immutability and stability.\nngx-translate and ngx-config provide runtime configuration and translation.\nngx-logger feeds errors and events to an API endpoint where winston feeds them to the Elastic Beanstalk logs\nangulartics2 feeds data to Google Analytics.\nOutdatedBrowser is used to redirect users of old browsers.  Compodoc provides documentation.\nPipeline\nCode is deployed CI/CD using AWS CodePipline/CodeBuild.\nThe backend is deployed to an EC2 using Elastic Beanstalk, and the frontend\nis exposed in an S3 bucket.\nStrict linting of TypeScript, SCSS, JSON and HTML on the front-end\nand ES6 in the backend enforce quality measures at pre-commit and in the pipeline. no-any, max-file-line-count, and\nimmutability are enforced.\nUnit test coverage is around 98% lines.\nNOTE: There is no effort made at this time to implement a config.json builder,\nruntime config.json is committed to the repository\nNOTE: e2e tests are disabled because of issues getting ChromeDriver to run in CI\nInstructions for Use\n** Please note that this project uses yarn and that package-lock.json is in\nthe .gitignore **\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Pete Burkindine\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAuthModule -->\n\nCoreModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\nLangSwitchComponent \n\nLangSwitchComponent \n\nLangSwitchComponent  -->\n\nCoreModule->LangSwitchComponent \n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nLangSwitchComponent\n\nLangSwitchComponent\n\nCoreModule -->\n\nLangSwitchComponent->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nLayoutModule -->\n\nMainLayoutComponent->LayoutModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nLayoutModule -->\n\nTopnavComponent->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthConfig   (src/.../auth.config.ts)\n                        \n                        \n                            config   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/config/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthConfig:     ɵa\n\n                    \n                \n                    \n                        \n                            Type :     ɵa\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: config.core.apiBaseUri,\n  loginUrl: `${config.core.apiBaseUri}/auth/login`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : require('../../assets/config.json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
