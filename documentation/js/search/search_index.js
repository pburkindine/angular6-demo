var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiResponse.html",[0,1.317,1,2.438]],["body/interfaces/ApiResponse.html",[0,2.285,1,4.23,2,0.285,3,0.285,4,0.198,5,4.706,6,4.208,7,0.41,8,1.901,9,6.235,10,1.547,11,0.582,12,0.017,13,0.255,14,2.581,15,0.015,16,0.015]],["title/components/AppComponent.html",[17,0.796,18,1.381]],["body/components/AppComponent.html",[2,0.147,3,0.147,4,0.102,7,0.211,10,0.623,11,0.299,12,0.018,13,0.131,15,0.009,16,0.009,17,1.246,18,2.023,19,1.259,20,1.259,21,1.259,22,2.421,23,1.215,24,2.231,25,1.259,26,3.174,27,3.174,28,1.607,29,1.87,30,4.175,31,1.87,32,4.175,33,0.729,34,2.917,35,3.322,36,5.514,37,1.005,38,2.469,39,0.729,40,2.81,41,4.75,42,3.001,43,2.921,44,2.489,45,2.123,46,4.981,47,5.514,48,4.291,49,4.75,50,0.827,51,2.81,52,0.491,53,0.635,54,0.491,55,4.175,56,2.81,57,0.747,58,1.881,59,2.81,60,2.81,61,0.538,62,0.299,63,2.165,64,1.821,65,1.395,66,1.404,67,1.693,68,2.421,69,1.693,70,0.178,71,1.879,72,2.81,73,1.693,74,2.81,75,2.81,76,0.682,77,0.652,78,0.682,79,0.818,80,1.489,81,1.693,82,2.81,83,2.81,84,2.81,85,2.81,86,0.939,87,1.775,88,1.87,89,1.87,90,2.469,91,1.259,92,1.259,93,0.939,94,0.856,95,1.87,96,1.031,97,1.195,98,1.87,99,0.984,100,0.984,101,1.259,102,0.984,103,1.259,104,1.031,105,1.259,106,1.259,107,0.939,108,0.984,109,1.259,110,0.939,111,1.259,112,1.031,113,0.782,114,1.259,115,1.031,116,1.259,117,1.259]],["title/modules/AppModule.html",[118,1.096,119,2.643]],["body/modules/AppModule.html",[2,0.103,3,0.103,4,0.072,12,0.018,13,0.214,15,0.007,16,0.007,18,2.367,41,1.706,43,1.687,45,1.226,57,0.478,61,0.65,62,0.211,63,2.453,64,1.283,65,1.788,66,0.989,67,1.193,68,1.706,69,1.193,70,0.202,76,0.481,77,0.459,78,0.481,86,0.661,94,0.603,113,0.551,118,0.927,119,5.07,120,1.049,121,2.406,122,2.115,123,3.417,124,1.706,125,1.706,126,1.706,127,1.706,128,1.706,129,3.467,130,3.467,131,2.835,132,3.017,133,3.758,134,3.758,135,3.758,136,3.758,137,3.758,138,1.918,139,1.193,140,1.116,141,1.526,142,1.706,143,1.391,144,1.391,145,1.526,146,1.526,147,5.352,148,3.519,149,3.184,150,0.842,151,2.743,152,1.687,153,2.743,154,2.743,155,1.116,156,3.184,157,3.184,158,1.98,159,1.918,160,0.887,161,1.98,162,1.283,163,3.993,164,1.98,165,1.98,166,1.526,167,3.076,168,3.184,169,1.526,170,3.184,171,3.184,172,1.706,173,1.98,174,1.526,175,1.98,176,0.989,177,1.116,178,1.98,179,1.98,180,1.391,181,1.98,182,1.193,183,1.391,184,1.706,185,1.98,186,1.98,187,1.98,188,1.526,189,1.98,190,1.391,191,2.236,192,1.98,193,1.98,194,1.98,195,1.98,196,1.98,197,1.98,198,3.184,199,1.98,200,1.98,201,1.98,202,2.236,203,1.98,204,1.526,205,3.184,206,1.98,207,1.526,208,2.062,209,1.706,210,2.062,211,1.98,212,1.98,213,1.706,214,1.98,215,1.98,216,1.706,217,1.98,218,1.98,219,3.184,220,1.526,221,3.184,222,1.98,223,1.98,224,1.706,225,1.98,226,1.98,227,1.98,228,1.98,229,1.98,230,1.98,231,1.98,232,1.98,233,1.98,234,4.651,235,1.98,236,1.98,237,1.706,238,1.98,239,1.98,240,1.98,241,1.98,242,1.706,243,1.98,244,1.98,245,1.526,246,5.626,247,5.011,248,1.049]],["title/modules/AppRoutingModule.html",[118,1.096,129,2.438]],["body/modules/AppRoutingModule.html",[2,0.213,3,0.213,4,0.148,12,0.018,13,0.254,15,0.012,16,0.012,17,1.151,61,0.63,62,0.436,70,0.345,76,0.994,77,0.949,78,0.994,79,1.191,93,1.817,94,1.247,99,1.904,107,1.367,110,1.367,118,1.191,129,3.525,152,2.883,159,3.278,160,1.833,248,2.168,249,4.093,250,5.441,251,3.278,252,4.093,253,4.093,254,4.191,255,4.093,256,3.526,257,4.093,258,4.093,259,5.224,260,5.441,261,4.093,262,3.526,263,3.153,264,4.093,265,4.093,266,3.526,267,3.526,268,4.093,269,3.153,270,4.093,271,4.093]],["title/interfaces/AppState.html",[0,1.317,272,2.643]],["body/interfaces/AppState.html",[0,2.263,2,0.28,3,0.28,4,0.195,7,0.403,8,1.883,11,0.573,12,0.017,13,0.251,14,2.54,15,0.015,16,0.015,61,0.469,113,2.123,272,4.541,273,4.631,274,5.376]],["title/guards/AuthGuard.html",[254,2.899,275,2.899]],["body/guards/AuthGuard.html",[2,0.224,3,0.224,4,0.156,7,0.322,11,0.458,12,0.018,13,0.201,15,0.013,16,0.013,23,1.252,28,1.656,33,0.982,37,1.391,39,0.982,50,0.843,52,0.751,53,0.548,54,0.751,57,0.94,61,0.579,62,0.458,70,0.272,71,1.793,94,1.31,160,1.926,176,2.149,177,2.424,234,3.313,254,4.331,267,6.091,275,3.313,276,4.3,277,3.02,278,4.303,279,5.396,280,4.303,281,4.3,282,3.948,283,4.3,284,4.843,285,0.757,286,4.3,287,1.739,288,4.3,289,3.705,290,3.313]],["title/components/AuthLayoutComponent.html",[17,0.796,93,1.257]],["body/components/AuthLayoutComponent.html",[2,0.164,3,0.164,4,0.114,7,0.236,8,1.319,10,1.177,11,0.483,12,0.018,13,0.147,15,0.01,16,0.01,17,1.304,18,1.153,19,1.408,20,1.408,21,1.408,23,1.319,24,2.38,25,1.408,26,3.24,27,3.24,29,2.029,31,2.029,33,0.791,34,2.511,35,3.504,37,1.072,38,2.604,39,0.549,42,2.73,43,3.081,50,0.872,52,0.549,53,0.677,54,0.549,57,0.68,58,1.772,61,0.395,62,0.335,65,1.05,66,1.57,70,0.199,73,1.894,76,0.763,77,0.729,78,0.763,79,0.915,80,1.665,81,1.894,86,1.05,87,1.927,88,2.029,89,2.029,90,2.604,91,1.408,92,1.408,93,1.942,94,1.619,95,2.029,96,1.153,97,1.336,98,2.029,99,1.1,100,1.1,101,1.408,102,1.1,103,1.408,104,1.153,105,1.408,106,1.408,107,1.05,108,1.1,109,1.408,110,1.05,111,1.408,112,1.153,113,0.874,114,1.408,115,1.153,116,1.408,117,1.408,291,2.708,292,3.904,293,4.531,294,4.531,295,5.815,296,2.421,297,4.531,298,3.143,299,3.143,300,1.665,301,3.143,302,3.143,303,3.904,304,2.554]],["title/modules/AuthModule.html",[118,1.096,130,2.438]],["body/modules/AuthModule.html",[2,0.183,3,0.183,4,0.127,12,0.018,13,0.229,15,0.011,16,0.011,61,0.647,62,0.375,65,1.175,67,2.12,70,0.311,76,0.854,77,0.816,78,0.854,86,1.175,107,2.226,110,2.226,118,1.429,120,1.864,121,3.406,122,1.864,123,1.864,130,4.808,131,3.531,132,3.757,138,2.958,139,2.12,140,1.983,142,4.229,143,2.471,144,2.471,145,2.71,146,2.71,152,2.601,153,4.229,154,4.229,155,1.983,159,2.958,160,1.576,169,3.781,190,2.471,207,2.71,248,1.864,305,3.031,306,3.031,307,3.031,308,4.317,309,3.519,310,3.447,311,2.279,312,4.909,313,3.781,314,4.909,315,4.229,316,4.909,317,4.909,318,2.471,319,3.519,320,3.031,321,3.031]],["title/modules/AuthRoutingModule.html",[118,1.096,308,2.438]],["body/modules/AuthRoutingModule.html",[2,0.237,3,0.237,4,0.165,12,0.018,13,0.272,15,0.013,16,0.013,17,1.36,61,0.626,62,0.484,70,0.369,76,1.104,77,1.054,78,1.104,79,1.323,93,1.946,107,1.946,110,1.946,118,1.323,152,3.087,159,3.511,160,2.036,248,2.408,251,3.511,256,3.916,259,4.955,269,3.502,308,3.775,320,3.916,321,3.916,322,4.546,323,4.546,324,2.739,325,3.192,326,4.546]],["title/interceptors/AuthTokenInterceptor.html",[133,2.643,327,1.778]],["body/interceptors/AuthTokenInterceptor.html",[2,0.176,3,0.176,4,0.122,7,0.253,10,0.746,11,0.507,12,0.018,13,0.157,15,0.011,16,0.011,23,0.981,33,0.832,37,1.278,39,0.832,50,0.714,52,0.832,53,0.607,54,0.832,57,0.9,61,0.552,62,0.359,70,0.213,71,1.519,76,1.156,77,1.469,78,1.156,79,1.747,94,1.027,133,3.344,150,1.433,176,1.684,177,1.9,278,4.102,285,0.744,327,1.592,328,5.523,329,3.37,330,3.578,331,2.903,332,5.171,333,3.578,334,3.18,335,3.37,336,4.103,337,2.183,338,3.96,339,3.888,340,3.37,341,2.869,342,2.609,343,2.183,344,3.085,345,1.509,346,2.183,347,2.183,348,2.03,349,2.03,350,2.903,351,2.366,352,3.37,353,3.37,354,3.37,355,3.37,356,2.903,357,2.903,358,3.37,359,4.103,360,4.103,361,4.103,362,3.37,363,3.37,364,4.758,365,3.37,366,2.183,367,2.903,368,2.903]],["title/components/BackToLoginComponent.html",[17,0.796,96,1.381]],["body/components/BackToLoginComponent.html",[2,0.184,3,0.184,4,0.128,7,0.265,12,0.017,13,0.165,15,0.011,16,0.011,17,1.362,18,1.294,19,1.58,20,1.58,21,1.58,23,1.432,24,2.535,25,1.58,26,3.304,27,3.304,29,2.202,31,2.202,33,0.859,37,1.142,38,2.743,39,0.989,50,0.738,53,0.627,57,0.529,58,1.498,61,0.308,62,0.376,70,0.223,86,1.178,87,2.091,88,2.202,89,2.202,90,2.743,91,1.58,92,1.58,93,1.178,94,1.075,95,2.202,96,2.247,97,2.91,98,2.202,99,1.235,100,1.235,101,1.58,102,1.235,103,1.58,104,1.294,105,1.58,106,1.58,107,1.178,108,1.235,109,1.58,110,1.178,111,1.58,112,1.294,113,0.981,114,1.58,115,1.294,116,1.58,117,1.58,304,2.772,324,2.963,369,4.877,370,4.361,371,3.039,372,4.237,373,4.237,374,3.528,375,3.528,376,4.918,377,4.918]],["title/modules/CoreModule.html",[118,1.096,131,1.994]],["body/modules/CoreModule.html",[2,0.239,3,0.239,4,0.166,12,0.017,13,0.318,15,0.013,16,0.013,61,0.593,62,0.488,70,0.371,76,1.111,77,1.062,78,1.111,86,1.529,104,2.797,118,1.704,120,2.425,121,3.888,122,2.425,123,2.425,131,3.872,138,3.526,139,2.757,140,2.58,152,3.101,248,2.425,310,4.11,311,2.965,378,3.943,379,3.943,380,3.943,381,4.577,382,4.577,383,3.525,384,4.577]],["title/injectables/DateHelperService.html",[285,0.507,385,2.643]],["body/injectables/DateHelperService.html",[2,0.238,3,0.238,4,0.165,7,0.342,10,1.505,11,0.486,12,0.018,13,0.213,15,0.013,16,0.013,28,1.756,33,1.02,37,1.3,50,0.684,52,0.797,53,0.581,54,0.797,57,0.876,61,0.509,62,0.486,70,0.289,79,1.328,210,2.955,285,0.868,287,1.844,385,4.101,386,5.031,387,3.929,388,5.84,389,5.84,390,4.561,391,4.561,392,5.533,393,5.031,394,4.561,395,4.561,396,4.561,397,4.561,398,4.561,399,4.561,400,4.561,401,4.561,402,4.561,403,4.561]],["title/injectables/ErrorHandlerService.html",[191,2.643,285,0.507]],["body/injectables/ErrorHandlerService.html",[2,0.238,3,0.238,4,0.165,7,0.342,11,0.622,12,0.018,13,0.213,15,0.013,16,0.013,23,1.328,28,1.756,33,1.02,39,0.797,44,2.918,45,2.615,50,0.876,52,1.02,53,0.744,54,1.02,57,0.684,58,1.779,61,0.509,62,0.486,70,0.289,76,1.107,77,1.058,78,1.107,100,1.596,151,5.031,191,4.101,285,0.868,287,1.844,300,2.416,404,5.55,405,3.929,406,5.84,407,2.955,408,4.561,409,5.84,410,4.561,411,2.955,412,4.561,413,4.561]],["title/components/ErrorPageComponent.html",[17,0.796,99,1.317]],["body/components/ErrorPageComponent.html",[2,0.191,3,0.191,4,0.133,7,0.275,12,0.017,13,0.172,15,0.011,16,0.011,17,1.382,18,1.347,19,1.644,20,1.644,21,1.644,23,1.472,24,2.589,25,1.644,26,3.325,27,3.325,29,2.264,31,2.264,33,0.883,38,2.79,39,1.01,50,0.758,53,0.644,57,0.551,58,1.54,61,0.32,62,0.391,70,0.232,86,1.226,87,2.15,88,2.264,89,2.264,90,2.79,91,1.644,92,1.644,93,1.226,94,1.119,95,2.264,96,1.347,97,1.561,98,2.264,99,2.18,100,2.024,101,1.644,102,1.285,103,1.644,104,1.347,105,1.644,106,1.644,107,1.226,108,1.285,109,1.644,110,1.226,111,1.644,112,1.347,113,1.021,114,1.644,115,1.347,116,1.644,117,1.644,304,2.85,414,3.163,415,5.055,416,5.055,417,5.055,418,3.671,419,3.671,420,5.055]],["title/interfaces/ErrorResponse.html",[0,1.317,421,2.267]],["body/interfaces/ErrorResponse.html",[0,2.231,2,0.274,3,0.274,4,0.19,6,4.045,7,0.394,8,1.856,9,6.152,10,1.648,11,0.679,12,0.017,13,0.245,14,3.013,15,0.014,16,0.014,100,2.499,421,3.842,422,4.524]],["title/components/HomeComponent.html",[17,0.796,102,1.317]],["body/components/HomeComponent.html",[2,0.197,3,0.197,4,0.137,7,0.284,12,0.017,13,0.177,15,0.012,16,0.012,17,1.397,18,1.388,19,1.695,20,1.695,21,1.695,23,1.503,24,2.631,25,1.695,26,3.34,27,3.34,29,2.311,31,2.311,33,0.902,38,2.826,39,1.026,50,0.774,53,0.658,57,0.568,58,1.573,61,0.33,62,0.403,70,0.24,86,1.264,87,2.195,88,2.311,89,2.311,90,2.826,91,1.695,92,1.695,93,1.264,94,1.153,95,2.311,96,1.388,97,1.609,98,2.311,99,1.324,100,1.324,101,1.695,102,2.208,103,1.695,104,1.388,105,1.695,106,1.695,107,1.264,108,1.324,109,1.695,110,1.264,111,1.695,112,1.388,113,1.053,114,1.695,115,1.388,116,1.695,117,1.695,266,4.447,423,3.26,424,5.161,425,5.161,426,3.784,427,3.784]],["title/modules/HomeModule.html",[118,1.096,428,2.643]],["body/modules/HomeModule.html",[2,0.204,3,0.204,4,0.141,12,0.018,13,0.246,15,0.012,16,0.012,61,0.639,62,0.416,70,0.334,76,0.948,77,0.906,78,0.948,86,1.304,102,2.407,112,2.524,118,1.535,120,2.068,121,3.596,122,2.068,123,2.068,131,3.644,132,3.878,138,3.176,139,2.352,140,2.201,152,2.793,190,2.741,207,3.007,248,2.068,310,3.702,311,2.529,313,4.061,318,2.741,428,5.291,429,3.363,430,3.363,431,3.363,432,4.456,433,3.904,434,3.363,435,3.904,436,3.007,437,3.904,438,3.904]],["title/modules/HomeRoutingModule.html",[118,1.096,432,2.438]],["body/modules/HomeRoutingModule.html",[2,0.244,3,0.244,4,0.17,12,0.018,13,0.278,15,0.013,16,0.013,17,1.257,61,0.617,62,0.499,70,0.376,76,1.138,77,1.087,78,1.138,79,1.365,102,2.08,108,2.08,118,1.365,152,3.148,159,3.58,160,2.099,248,2.483,251,3.58,259,4.578,262,4.038,263,3.611,269,3.611,432,3.849,434,4.038,439,4.687,440,4.687,441,4.687,442,4.687]],["title/interceptors/JsonHeaderInterceptor.html",[134,2.643,327,1.778]],["body/interceptors/JsonHeaderInterceptor.html",[2,0.183,3,0.183,4,0.127,7,0.262,8,1.424,10,1.249,11,0.65,12,0.018,13,0.164,15,0.011,16,0.011,23,1.019,33,0.854,37,1.296,39,0.854,50,0.846,52,0.854,53,0.623,54,0.854,57,0.846,61,0.532,62,0.373,70,0.222,71,1.947,76,1.188,77,1.49,78,1.188,79,1.424,134,3.434,150,1.488,285,0.659,327,1.654,330,3.652,333,3.168,334,3.234,337,2.267,338,3.869,339,3.954,341,2.947,342,2.664,343,2.267,344,3.168,345,1.568,346,2.267,347,2.267,348,2.109,349,2.109,350,3.016,357,4.214,359,3.016,360,3.016,366,2.267,367,3.016,368,3.016,443,6.104,444,3.5,445,6.104,446,3.5,447,4.891,448,3.5,449,2.458,450,2.458,451,4.891,452,4.891,453,3.5,454,4.891,455,3.5,456,3.5,457,3.5,458,3.016]],["title/interfaces/JwtPayload.html",[0,1.317,459,2.643]],["body/interfaces/JwtPayload.html",[0,2.231,2,0.274,3,0.274,4,0.19,7,0.394,8,1.856,10,1.648,11,0.679,12,0.017,13,0.245,14,3.013,15,0.014,16,0.014,53,0.91,459,4.477,460,4.524,461,4.045,462,3.568]],["title/components/LangSwitchComponent.html",[17,0.796,104,1.381]],["body/components/LangSwitchComponent.html",[2,0.167,3,0.167,4,0.116,7,0.241,10,1.191,11,0.49,12,0.017,13,0.15,15,0.01,16,0.01,17,1.315,18,1.178,19,1.438,20,1.438,21,1.438,23,1.339,24,2.408,25,1.438,26,3.252,27,3.252,29,2.06,31,2.06,33,0.804,37,1.305,38,2.63,39,0.561,48,3.963,49,5.059,50,0.807,52,0.804,53,0.748,54,0.804,57,0.69,58,1.789,61,0.401,62,0.342,65,1.072,67,1.934,70,0.203,86,1.072,87,1.956,88,2.06,89,2.06,90,2.63,91,1.438,92,1.438,93,1.072,94,0.978,95,2.06,96,1.178,97,1.365,98,2.06,99,1.123,100,1.123,101,1.438,102,1.123,103,1.438,104,2.155,105,3.051,106,1.438,107,1.072,108,1.123,109,1.438,110,1.072,111,1.438,112,1.178,113,0.893,114,1.438,115,1.178,116,1.438,117,1.438,300,1.701,383,4.523,463,5.059,464,2.765,465,3.963,466,4.6,467,4.6,468,4.6,469,3.21,470,3.21,471,3.21,472,4.6,473,3.21,474,3.21,475,4.6,476,4.6]],["title/modules/LayoutModule.html",[118,1.096,132,2.121]],["body/modules/LayoutModule.html",[2,0.187,3,0.187,4,0.13,12,0.018,13,0.233,15,0.011,16,0.011,61,0.645,62,0.383,65,1.2,67,2.165,70,0.315,76,0.872,77,0.833,78,0.872,86,1.2,93,2.241,96,2.461,99,2.348,108,2.348,115,2.461,118,1.45,120,1.904,121,3.445,122,1.904,123,1.904,131,3.554,132,4.241,138,3.001,139,2.165,140,2.025,152,2.639,159,3.001,160,1.609,169,3.837,190,2.523,248,1.904,310,3.498,311,2.328,313,3.837,315,4.291,318,2.523,370,2.768,477,3.096,478,3.096,479,3.593,480,3.593,481,3.593,482,3.593,483,3.593,484,3.593,485,3.593,486,3.593]],["title/interceptors/LogRequestInterceptor.html",[135,2.643,327,1.778]],["body/interceptors/LogRequestInterceptor.html",[2,0.206,3,0.206,4,0.143,7,0.296,11,0.566,12,0.018,13,0.185,15,0.012,16,0.012,23,1.15,33,0.928,37,1.352,39,0.928,44,2.655,45,2.472,50,0.797,52,0.928,53,0.677,54,0.928,57,0.901,61,0.584,62,0.421,70,0.25,71,1.695,77,1.393,135,3.731,150,1.679,285,0.716,327,1.866,330,3.889,333,3.889,334,3.402,337,2.558,338,3.869,339,4.16,341,3.201,342,2.837,343,2.558,344,3.442,345,1.769,346,2.558,347,2.558,348,2.379,349,2.379,366,3.442,407,2.558,411,2.558,487,5.173,488,3.949,489,3.949,490,3.949,491,3.042,492,3.949]],["title/interceptors/LogResponseInterceptor.html",[136,2.643,327,1.778]],["body/interceptors/LogResponseInterceptor.html",[2,0.194,3,0.194,4,0.134,7,0.278,11,0.543,12,0.018,13,0.173,15,0.012,16,0.012,23,1.08,33,0.89,37,1.324,39,0.89,44,2.545,45,2.41,50,0.764,52,0.89,53,0.649,54,0.89,57,0.939,61,0.591,62,0.395,70,0.235,71,1.625,76,0.901,77,1.452,78,0.901,136,3.576,150,1.578,285,0.686,327,1.754,330,3.767,333,3.767,334,3.316,337,2.404,338,3.771,339,4.054,341,3.069,342,2.748,343,3.299,344,3.299,345,1.662,346,2.404,347,2.404,348,2.236,349,2.236,366,2.404,407,2.404,411,2.404,487,5.01,491,2.859,493,3.711,494,3.711,495,3.711,496,4.388,497,2.859,498,3.197,499,3.197,500,3.197,501,2.606,502,3.197,503,3.711]],["title/injectables/LogService.html",[202,2.643,285,0.507]],["body/injectables/LogService.html",[2,0.189,3,0.189,4,0.131,7,0.272,10,1.272,11,0.693,12,0.018,13,0.169,15,0.011,16,0.011,33,0.875,39,0.633,45,1.928,50,0.975,52,1.136,53,0.828,54,1.136,57,0.929,58,2.141,61,0.501,62,0.386,65,1.21,70,0.229,76,1.394,77,1.332,78,1.394,79,1.054,100,1.753,180,2.543,202,3.517,285,0.774,300,1.919,411,2.346,504,3.12,505,4.315,506,3.858,507,4.315,508,3.622,509,6.194,510,3.622,511,5.009,512,4.315,513,3.622,514,4.946,515,4.315,516,3.622,517,4.315,518,3.622,519,5.009,520,3.622,521,5.009,522,5.009,523,3.622,524,3.622,525,3.622,526,3.622,527,3.622,528,3.622,529,3.622,530,3.622,531,3.622]],["title/classes/LogServiceAbstract.html",[45,1.449,70,0.238]],["body/classes/LogServiceAbstract.html",[2,0.189,3,0.189,4,0.131,7,0.272,10,1.274,11,0.693,12,0.018,13,0.17,15,0.011,16,0.011,33,0.877,37,1.513,45,1.932,50,0.976,52,1.137,53,0.829,54,1.137,57,1.01,58,2.201,61,0.317,70,0.318,76,1.218,77,1.164,78,1.218,100,1.756,183,2.55,184,3.129,224,3.129,348,2.188,349,2.188,505,4.323,506,3.865,507,4.323,512,4.323,514,4.953,515,4.323,517,4.323,532,3.129,533,7.412,534,5.018,535,3.632,536,5.018,537,3.632,538,3.129,539,3.632,540,3.632,541,5.018,542,3.632,543,3.632,544,3.632,545,3.632]],["title/injectables/LoginFormFactory.html",[285,0.507,546,2.643]],["body/injectables/LoginFormFactory.html",[2,0.232,3,0.232,4,0.161,7,0.333,11,0.473,12,0.018,13,0.208,15,0.013,16,0.013,28,1.71,33,1.003,37,1.284,39,0.776,50,0.861,52,0.776,53,0.566,54,0.776,57,0.861,61,0.555,62,0.473,70,0.281,155,2.504,176,2.219,285,0.857,287,1.796,300,2.353,462,2.219,546,4.031,547,3.826,548,5.794,549,3.826,550,5.794,551,4.441,552,4.946,553,4.441,554,4.467,555,3.719,556,3.826,557,3.826,558,4.946,559,3.826,560,4.946,561,2.353,562,3.826]],["title/components/LoginPageComponent.html",[17,0.796,107,1.257]],["body/components/LoginPageComponent.html",[2,0.114,3,0.114,4,0.079,7,0.163,8,1,11,0.453,12,0.018,13,0.102,15,0.01,16,0.008,17,1.111,18,0.799,19,0.975,20,0.975,21,0.975,23,1,24,1.904,25,0.975,26,3.004,27,3.004,29,1.538,31,1.538,33,0.6,34,2.636,37,1.257,38,2.161,39,0.6,44,2.124,45,1.858,50,0.876,52,0.6,53,0.615,54,0.6,57,0.788,58,1.943,61,0.528,62,0.232,65,0.727,69,1.312,70,0.138,71,1.78,76,0.529,77,0.505,78,0.529,86,0.727,87,1.46,88,1.538,89,1.538,90,2.161,91,0.975,92,0.975,93,0.727,94,1.046,95,1.538,96,0.799,97,0.926,98,1.538,99,0.762,100,1.202,101,0.975,102,0.762,103,0.975,104,0.799,105,2.789,106,0.975,107,1.612,108,0.762,109,0.975,110,0.727,111,0.975,112,0.799,113,0.606,114,0.975,115,0.799,116,0.975,117,0.975,155,1.228,160,0.975,176,1.088,177,1.228,182,1.312,277,1.529,278,3.126,282,2.411,304,3.145,324,3.362,325,1.529,351,4.25,372,2.959,373,2.959,462,2.411,546,3.389,554,3.389,555,2.225,561,2.557,563,1.876,564,4.158,565,2.645,566,4.158,567,4.826,568,3.663,569,4.252,570,3.389,571,3.275,572,3.718,573,3.275,574,3.389,575,3.434,576,3.434,577,2.178,578,2.178,579,2.178,580,2.178,581,2.178,582,2.178,583,2.178,584,1.876,585,1.876,586,1.876,587,2.178,588,2.178,589,2.178,590,1.678,591,1.876,592,1.678,593,2.178,594,2.178,595,2.178,596,2.178,597,1.678,598,3.434,599,4.158,600,2.645,601,2.959,602,2.959,603,4.158,604,2.959,605,2.959,606,2.959,607,3.434,608,3.434]],["title/interfaces/LoginResult.html",[0,1.317,609,2.438]],["body/interfaces/LoginResult.html",[0,2.231,2,0.274,3,0.274,4,0.19,7,0.394,8,1.856,10,1.648,11,0.679,12,0.017,13,0.245,14,3.013,15,0.014,16,0.014,364,6.152,609,4.13,610,4.524,611,4.524,612,5.501]],["title/injectables/LoginService.html",[285,0.507,570,2.643]],["body/injectables/LoginService.html",[2,0.155,3,0.155,4,0.108,7,0.223,8,1.266,10,1.508,11,0.603,12,0.018,13,0.139,15,0.012,16,0.01,28,1.144,33,0.76,34,2.976,35,3.412,37,1.038,39,0.76,42,3.1,43,3,44,2.571,45,2.18,50,0.904,52,0.899,53,0.656,54,0.899,57,0.904,58,1.325,61,0.603,62,0.317,65,0.992,66,1.484,69,1.79,70,0.188,71,2.128,73,1.79,76,0.721,77,0.689,78,0.721,79,1.266,80,1.574,81,1.79,94,0.905,176,1.484,177,1.675,277,2.086,278,3.669,282,3.054,285,0.693,287,1.201,324,3.1,342,2.848,345,1.33,462,2.173,561,3,570,3.054,609,3.669,613,2.559,614,5.663,615,4.349,616,3.963,617,3.412,618,4.433,619,3.669,620,4.349,621,2.971,622,4.349,623,2.971,624,4.349,625,2.971,626,2.559,627,2.288,628,2.971,629,2.559,630,2.571,631,2.288,632,2.288,633,2.971,634,4.349,635,2.971,636,2.971,637,2.971,638,2.971,639,2.971,640,2.971,641,2.971]],["title/injectables/LogoutService.html",[280,2.438,285,0.507]],["body/injectables/LogoutService.html",[1,2.017,2,0.162,3,0.162,4,0.113,7,0.234,8,1.31,10,1.171,11,0.48,12,0.018,13,0.146,15,0.01,16,0.01,28,1.199,33,0.786,34,3.025,35,3.489,37,1.067,39,0.786,42,3.185,43,3.068,50,0.921,52,0.544,53,0.397,54,0.544,57,0.793,58,1.951,61,0.617,62,0.332,65,1.503,66,1.556,70,0.197,71,2.156,73,1.876,76,0.756,77,0.722,78,0.756,79,0.907,80,1.65,81,1.876,94,0.949,148,4.066,150,1.324,160,1.395,176,1.556,177,1.755,182,1.876,277,2.187,278,3.751,280,2.916,282,3.161,285,0.712,287,1.259,324,1.876,342,1.471,345,1.395,421,1.876,497,2.399,571,4.072,572,4.46,574,2.187,584,2.683,590,2.399,597,2.399,618,4.554,619,3.751,627,2.399,642,2.683,643,5.791,644,5.791,645,4.46,646,4.072,647,4.501,648,3.114,649,3.114,650,3.114,651,3.114,652,3.114,653,3.878,654,3.114,655,3.114,656,3.114,657,3.114,658,3.114,659,3.114,660,3.114,661,3.114,662,2.399,663,4.501]],["title/components/MainLayoutComponent.html",[17,0.796,108,1.317]],["body/components/MainLayoutComponent.html",[2,0.195,3,0.195,4,0.135,7,0.28,12,0.017,13,0.174,15,0.012,16,0.012,17,1.39,18,1.369,19,1.671,20,1.671,21,1.671,23,1.488,24,2.612,25,1.671,26,3.333,27,3.333,29,2.29,31,2.29,33,0.893,37,1.177,38,2.809,39,1.019,50,0.767,53,0.651,57,0.56,58,1.558,61,0.325,62,0.398,70,0.236,86,1.246,87,2.174,88,2.29,89,2.29,90,2.809,91,1.671,92,1.671,93,1.246,94,1.137,95,2.29,96,1.369,97,1.587,98,2.29,99,1.306,100,1.306,101,1.671,102,1.306,103,1.671,104,1.369,105,1.671,106,1.671,107,1.246,108,2.195,109,2.612,110,1.246,111,1.671,112,1.369,113,1.038,114,1.671,115,1.369,116,1.671,117,1.671,292,4.405,664,3.215,665,5.113,666,5.113,667,3.732,668,3.732]],["title/injectables/RegisterFormFactory.html",[285,0.507,669,2.643]],["body/injectables/RegisterFormFactory.html",[2,0.215,3,0.215,4,0.149,7,0.31,11,0.44,12,0.018,13,0.193,15,0.012,16,0.012,28,1.59,33,0.956,37,1.239,39,0.721,50,0.821,52,0.721,53,0.697,54,0.721,57,0.821,61,0.535,62,0.44,70,0.262,79,1.594,155,2.328,176,2.063,285,0.827,287,1.67,300,2.188,462,2.063,548,5.633,549,3.558,550,5.633,552,4.716,554,4.312,555,3.546,556,3.558,557,3.558,558,5.29,559,3.558,560,5.633,561,2.188,562,4.716,662,3.181,669,3.844,670,3.558,671,4.13,672,4.13,673,6.14,674,5.474,675,5.474,676,4.13,677,4.13,678,4.13]],["title/components/RegisterPageComponent.html",[17,0.796,110,1.257]],["body/components/RegisterPageComponent.html",[2,0.095,3,0.095,4,0.066,7,0.137,8,0.868,10,0.966,11,0.465,12,0.018,13,0.085,15,0.007,16,0.012,17,1.016,18,0.67,19,0.818,20,0.818,21,0.818,23,0.868,24,1.692,25,0.818,26,2.873,27,2.873,29,1.335,31,1.335,33,0.521,34,2.773,37,1.184,38,1.953,39,0.521,44,1.887,45,1.679,50,0.851,52,0.66,53,0.748,54,0.66,57,0.816,58,1.839,61,0.526,62,0.195,65,0.61,69,1.1,70,0.116,71,1.644,79,0.531,86,0.61,87,1.267,88,1.335,89,1.335,90,1.953,91,0.818,92,0.818,93,0.61,94,0.556,95,1.335,96,0.67,97,0.776,98,1.335,99,0.639,100,0.639,101,0.818,102,0.639,103,0.818,104,0.67,105,3.077,106,0.818,107,0.61,108,0.639,109,0.818,110,1.456,111,0.818,112,0.67,113,0.508,114,0.818,115,0.67,116,0.818,117,0.818,150,0.776,155,1.029,160,0.818,182,1.1,304,2.906,324,1.796,325,3.62,351,4.783,421,1.796,462,2.178,554,3.062,555,1.931,561,3.198,564,3.756,565,2.296,566,3.756,568,2.568,571,2.91,572,3.359,573,2.91,574,3.062,585,1.573,586,1.573,590,1.406,591,1.573,592,1.406,597,2.296,599,4.887,600,3.359,601,2.568,602,2.568,603,4.441,604,2.568,605,3.756,606,3.756,616,2.91,617,2.627,630,1.887,631,1.406,632,1.406,669,3.062,679,1.573,680,2.981,681,2.981,682,2.981,683,4.36,684,1.826,685,3.777,686,3.062,687,2.981,688,2.568,689,4.686,690,1.826,691,2.981,692,1.826,693,1.826,694,1.826,695,1.826,696,1.826,697,1.826,698,1.826,699,1.826,700,1.826,701,1.573,702,1.826,703,1.826,704,1.573,705,1.826,706,1.826,707,1.826,708,3.777,709,1.826,710,1.826,711,2.981,712,2.981,713,1.826,714,2.981,715,1.826,716,2.981,717,2.981,718,2.981,719,1.826,720,2.981,721,2.981,722,1.826,723,1.826,724,1.826]],["title/injectables/RegisterService.html",[285,0.507,686,2.643]],["body/injectables/RegisterService.html",[1,2.291,2,0.184,3,0.184,4,0.128,7,0.265,8,1.434,10,1.256,11,0.604,12,0.018,13,0.165,15,0.011,16,0.011,28,1.362,33,0.861,34,2.679,35,3.694,37,1.144,39,0.861,42,2.968,43,3.248,50,0.92,52,0.861,53,0.628,54,0.861,57,0.85,58,1.501,61,0.597,62,0.377,65,1.181,66,1.767,70,0.224,71,2.129,73,2.131,76,0.859,77,0.82,78,0.859,79,1.03,80,1.874,81,2.131,148,4.305,150,1.504,285,0.764,287,1.43,296,2.725,325,3.459,342,2.679,345,1.584,616,4.367,617,3.694,630,3.221,631,2.725,632,2.725,646,4.367,653,3.047,686,3.459,701,4.244,725,3.047,726,6.131,727,4.927,728,3.537,729,3.537,730,3.537,731,4.927,732,3.537,733,3.537,734,3.537]],["title/injectables/RequestInspectorService.html",[285,0.507,334,1.994]],["body/injectables/RequestInspectorService.html",[2,0.198,3,0.198,4,0.137,7,0.285,11,0.627,12,0.018,13,0.177,15,0.012,16,0.012,28,1.461,33,0.903,37,1.377,39,0.903,43,3.347,50,0.882,52,1.028,53,0.75,54,1.028,57,1.023,61,0.513,62,0.404,65,1.267,66,1.896,70,0.24,71,1.21,76,1.256,77,1.199,78,1.256,79,1.105,150,1.614,284,5.442,285,0.793,287,1.534,290,3.983,331,3.269,332,5.442,334,2.74,336,4.455,338,4.205,341,3.116,735,5.442,736,3.269,737,5.171,738,5.171,739,3.794,740,5.171,741,3.794,742,5.171,743,3.794,744,3.794,745,3.794,746,3.794,747,3.269,748,3.794]],["title/injectables/SetSporks.html",[285,0.507,749,2.643]],["body/injectables/SetSporks.html",[2,0.217,3,0.217,4,0.151,7,0.313,8,1.603,10,1.454,11,0.773,12,0.018,13,0.288,14,2.914,15,0.012,16,0.012,23,1.213,37,1.111,39,0.728,50,0.925,52,0.728,53,0.531,54,0.728,61,0.538,62,0.444,70,0.264,76,1.337,77,1.278,78,1.012,79,1.213,113,1.989,162,2.7,285,0.831,449,2.927,450,2.927,749,4.331,750,2.927,751,5.878,752,4.168,753,5.508,754,4.168,755,4.752,756,4.331,757,2.927,758,4.168,759,4.168,760,3.591,761,4.168,762,4.168,763,4.168]],["title/classes/Spork.html",[70,0.238,113,1.047]],["body/classes/Spork.html",[2,0.215,3,0.215,4,0.149,7,0.31,8,1.594,10,1.58,11,0.654,12,0.017,13,0.193,14,3.303,15,0.012,16,0.012,39,0.721,50,1.02,52,0.721,53,0.526,54,0.721,57,0.821,61,0.36,70,0.347,71,2.23,113,1.523,764,3.558,765,6.538,766,6.538,767,4.716,768,4.777,769,5.494,770,5.474,771,5.147,772,5.474,773,4.13,774,4.13,775,4.13,776,4.13,777,4.13,778,2.9,779,5.474,780,5.474]],["title/injectables/SporkFactory.html",[285,0.507,781,2.643]],["body/injectables/SporkFactory.html",[2,0.205,3,0.205,4,0.143,7,0.295,10,1.328,11,0.565,12,0.018,13,0.184,15,0.012,16,0.012,28,1.516,33,0.926,37,1.392,39,1.047,50,0.899,52,0.926,53,0.676,54,0.926,57,0.962,61,0.559,62,0.42,70,0.249,79,1.544,113,1.993,210,2.551,285,0.808,287,1.592,757,2.765,768,2.765,769,4.941,771,4.701,778,2.765,781,3.723,782,3.393,783,4.568,784,4.568,785,3.938,786,5.303,787,4.337,788,3.938,789,5.303,790,5.303,791,3.938,792,3.393,793,3.938,794,3.938,795,3.938,796,3.938,797,3.938,798,3.938]],["title/components/SporkListComponent.html",[17,0.796,112,1.381]],["body/components/SporkListComponent.html",[2,0.133,3,0.133,4,0.093,7,0.192,8,1.132,11,0.501,12,0.018,13,0.119,15,0.009,16,0.009,17,1.196,18,0.938,19,1.145,20,1.145,21,1.145,23,1.132,24,2.107,25,1.145,26,3.113,27,3.113,29,1.741,31,1.741,33,0.679,34,2.223,37,1.202,38,2.354,39,0.679,44,1.942,45,2.024,50,0.789,52,0.679,53,0.67,54,0.679,57,0.583,58,1.602,61,0.581,62,0.272,65,0.854,69,1.54,70,0.162,71,1.677,86,0.854,87,1.653,88,1.741,89,1.741,90,2.354,91,1.145,92,1.145,93,0.854,94,0.779,95,1.741,96,0.938,97,1.087,98,1.741,99,0.894,100,0.894,101,1.145,102,0.894,103,1.145,104,0.938,105,1.145,106,1.145,107,0.854,108,0.894,109,1.145,110,0.854,111,1.145,112,1.929,113,1.954,114,1.145,115,0.938,116,1.145,117,1.145,150,1.087,162,1.656,182,1.54,237,3.349,272,1.795,342,2.484,345,1.145,407,1.656,421,1.54,436,4.356,565,2.995,573,3.624,574,3.691,592,1.969,688,3.349,689,4.529,704,2.202,757,1.795,799,4.872,800,2.202,801,3.887,802,3.349,803,3.887,804,3.887,805,3.887,806,4.704,807,3.691,808,4.704,809,4.529,810,3.887,811,2.556,812,2.556,813,2.556,814,2.556,815,2.556,816,2.556,817,2.556,818,2.556,819,2.556,820,2.556,821,2.556,822,2.556,823,2.556,824,2.556,825,2.556,826,3.887,827,2.556,828,2.556]],["title/interfaces/SporkPayload.html",[0,1.317,787,2.438]],["body/interfaces/SporkPayload.html",[0,2.237,2,0.275,3,0.275,4,0.191,7,0.395,8,1.861,10,1.524,11,0.681,12,0.017,13,0.246,14,3.02,15,0.014,16,0.014,768,5.021,769,5.508,787,4.14,829,4.541,830,5.926]],["title/injectables/SporkService.html",[285,0.507,807,2.643]],["body/injectables/SporkService.html",[2,0.176,3,0.176,4,0.122,7,0.253,8,1.389,10,1.225,11,0.589,12,0.018,13,0.158,15,0.011,16,0.011,28,1.301,33,0.833,34,3.108,35,3.62,37,1.116,39,0.833,42,2.874,43,3.183,50,0.951,52,0.833,53,0.608,54,0.833,57,0.951,58,1.453,61,0.602,62,0.36,65,1.128,66,1.688,70,0.214,71,2.098,73,2.035,76,0.82,77,0.784,78,0.82,79,0.983,80,1.79,81,2.035,113,1.539,148,4.219,150,1.436,285,0.745,287,1.366,296,2.602,342,2.613,345,1.513,626,2.91,627,2.602,646,4.26,757,2.372,781,4.219,784,5.177,787,3.892,792,2.91,807,3.35,831,2.91,832,6.009,833,4.771,834,5.53,835,4.771,836,3.378,837,4.771,838,3.378,839,3.378,840,3.378,841,3.378,842,3.378,843,3.378,844,3.378,845,3.378]],["title/interceptors/TimingInterceptor.html",[137,2.643,327,1.778]],["body/interceptors/TimingInterceptor.html",[2,0.185,3,0.185,4,0.128,7,0.266,11,0.526,12,0.018,13,0.166,15,0.011,16,0.011,23,1.032,33,0.862,37,1.302,39,0.862,44,2.466,45,2.363,50,0.74,52,0.862,53,0.629,54,0.862,57,0.968,61,0.582,62,0.378,70,0.225,71,1.574,76,0.861,77,1.424,78,0.861,79,1.437,137,3.466,150,1.508,285,0.665,327,1.676,330,3.678,333,3.678,334,3.252,337,2.297,338,3.698,339,3.976,341,2.974,342,2.682,343,3.197,344,3.197,345,1.588,346,2.297,347,2.297,348,2.137,349,2.137,366,2.297,407,2.297,411,2.297,491,2.732,496,4.252,497,2.732,498,3.055,499,3.055,500,3.055,501,3.986,502,3.055,830,4.252,846,3.546,847,3.546,848,3.546,849,3.802,850,4.936,851,4.936,852,3.546,853,3.546,854,3.546,855,3.546,856,3.546]],["title/components/TopnavComponent.html",[17,0.796,115,1.381]],["body/components/TopnavComponent.html",[2,0.174,3,0.174,4,0.12,7,0.25,11,0.355,12,0.018,13,0.156,15,0.011,16,0.011,17,1.333,18,1.221,19,1.491,20,1.491,21,1.491,23,1.374,24,2.457,25,1.491,26,3.272,27,3.272,29,2.114,31,2.114,33,0.825,37,1.321,38,2.673,39,0.581,50,0.823,52,0.581,53,0.699,54,0.581,57,0.708,58,1.819,61,0.412,62,0.355,70,0.211,86,1.112,87,2.007,88,2.114,89,2.114,90,2.673,91,1.491,92,1.491,93,1.112,94,1.014,95,2.114,96,1.221,97,1.415,98,2.114,99,1.165,100,1.165,101,1.491,102,1.165,103,1.491,104,1.221,105,1.491,106,1.491,107,1.112,108,1.165,109,1.491,110,1.112,111,1.491,112,1.221,113,0.926,114,1.491,115,2.19,116,2.457,117,1.491,279,4.067,280,3.867,289,2.867,300,1.763,303,4.067,304,2.661,645,5.043,857,2.867,858,4.721,859,4.721,860,3.328,861,3.328,862,3.328,863,3.328,864,3.328,865,4.721]],["title/classes/User.html",[70,0.238,630,1.88]],["body/classes/User.html",[2,0.166,3,0.166,4,0.115,7,0.238,8,1.33,10,1.674,11,0.66,12,0.018,13,0.149,14,3.395,15,0.01,16,0.01,39,0.798,50,1.038,52,0.555,53,0.866,54,1.082,57,0.877,61,0.277,70,0.289,71,2.292,392,5.117,462,3.221,561,3.519,612,5.117,630,2.283,767,3.937,866,2.74,867,5.847,868,5.847,869,5.847,870,5.847,871,3.18,872,4.569,873,3.937,874,5.847,875,6.922,876,3.18,877,3.18,878,3.18,879,3.18,880,3.18,881,3.18,882,3.18,883,3.18,884,3.18,885,3.18,886,3.18,887,2.449,888,4.569,889,4.569,890,4.569,891,4.569]],["title/injectables/UserFactory.html",[285,0.507,617,2.267]],["body/injectables/UserFactory.html",[2,0.158,3,0.158,4,0.109,7,0.227,10,1.514,11,0.647,12,0.018,13,0.141,15,0.01,16,0.01,28,1.164,33,0.77,37,1.436,39,0.528,50,0.911,52,1.06,53,0.885,54,1.06,57,1.006,61,0.57,62,0.322,70,0.191,79,0.88,210,1.959,285,0.7,287,1.223,300,1.602,385,4.01,392,4.004,459,3.094,462,2.597,561,3.216,609,3.7,612,4.399,617,2.655,629,2.605,630,3.516,662,3.394,751,2.605,783,3.796,873,2.605,892,2.605,893,4.406,894,4.406,895,4.478,896,3.024,897,3.024,898,4.406,899,4.406,900,4.45,901,3.024,902,3.024,903,4.406,904,3.024,905,4.406,906,3.024,907,3.024,908,3.024,909,3.024,910,2.329,911,2.605,912,3.024,913,4.406,914,3.024,915,3.024,916,2.605,917,3.024,918,3.024,919,3.024,920,3.024,921,3.024,922,3.024,923,3.024,924,3.024,925,3.024,926,3.024,927,3.024,928,3.024,929,3.024,930,3.024,931,3.024,932,3.024]],["title/interfaces/UserPayload.html",[0,1.317,900,2.643]],["body/interfaces/UserPayload.html",[0,2.18,2,0.264,3,0.264,4,0.183,7,0.379,8,1.814,10,1.685,11,0.719,12,0.017,13,0.236,14,3.191,15,0.014,16,0.014,53,0.898,461,3.894,462,3.522,561,3.734,900,4.374,933,4.355]],["title/injectables/UserService.html",[285,0.507,619,2.438]],["body/injectables/UserService.html",[2,0.209,3,0.209,4,0.145,7,0.301,8,1.562,10,1.34,11,0.572,12,0.018,13,0.187,15,0.012,16,0.012,28,1.543,33,0.937,37,1.47,50,0.969,52,0.7,53,0.511,54,0.7,57,0.969,58,1.968,61,0.527,62,0.427,70,0.254,71,1.929,285,0.815,287,1.621,449,2.814,450,2.814,619,3.476,630,3.64,887,3.087,895,5.566,916,3.453,934,3.453,935,6.46,936,6.46,937,5.366,938,4.008,939,4.008,940,5.366,941,4.008,942,4.008,943,4.008,944,4.008,945,4.008,946,4.008,947,4.008,948,4.008]],["title/coverage.html",[949,3.961]],["body/coverage.html",[0,2.204,1,1.741,4,0.097,5,2.316,6,3.111,11,0.286,12,0.018,15,0.009,16,0.009,17,1.45,18,0.986,22,2.316,45,1.035,70,0.307,80,1.424,93,0.898,96,0.986,99,0.941,102,0.941,104,0.986,107,0.898,108,0.941,110,0.898,112,0.986,113,0.748,115,0.986,141,3.111,183,2.835,188,2.07,191,1.887,202,1.887,204,2.07,208,3.142,210,1.741,220,2.07,245,2.07,272,1.887,273,2.316,280,1.741,285,0.956,291,2.316,334,1.424,369,2.316,370,2.07,371,2.316,383,2.07,385,1.887,386,2.316,387,2.316,404,2.316,405,2.316,414,2.316,421,1.619,422,2.316,423,2.316,436,2.07,459,1.887,460,2.316,461,3.111,463,2.316,464,2.316,504,2.316,532,2.316,546,1.887,547,2.316,563,2.316,570,1.887,609,1.741,610,2.316,611,2.316,613,2.316,617,1.619,619,1.741,630,1.343,642,2.316,664,2.316,669,1.887,670,2.316,679,2.316,686,1.887,725,2.316,735,2.316,736,2.316,749,1.887,750,2.835,755,2.07,764,2.316,781,1.887,782,2.316,787,1.741,799,2.316,800,2.316,807,1.887,829,2.316,831,2.316,857,2.316,866,2.316,892,2.316,900,1.887,933,2.316,934,2.316,949,2.07,950,2.07,951,2.688,952,2.688,953,7.751,954,5.781,955,6.48,956,4.85,957,2.688,958,2.688,959,6.857,960,6.298,961,3.479,962,4.453,963,6.298,964,2.316,965,2.316,966,2.316,967,2.688,968,2.688]],["title/dependencies.html",[120,2.399,969,2.705]],["body/dependencies.html",[12,0.018,15,0.011,16,0.011,62,0.391,63,3.894,64,3.275,65,2.256,66,1.834,67,2.212,94,1.119,120,1.945,122,1.945,143,2.578,144,2.578,145,2.828,146,2.828,155,2.069,160,1.644,162,2.378,166,2.828,167,3.894,172,3.163,174,2.828,176,2.526,177,2.069,180,2.578,182,2.212,311,2.378,318,2.578,345,1.644,393,3.163,555,2.378,771,2.578,778,3.55,887,2.828,910,2.828,911,3.163,970,3.671,971,3.671,972,7.311,973,3.671,974,5.055,975,3.671,976,3.671,977,3.671,978,3.671,979,3.671,980,3.671,981,5.055,982,3.671,983,3.671,984,3.671,985,3.671,986,3.671,987,3.671,988,3.671,989,3.671,990,3.671,991,3.671,992,3.163,993,3.671,994,3.671,995,3.671,996,3.671,997,3.671,998,3.671,999,3.671,1000,3.671,1001,3.671,1002,3.163,1003,3.671,1004,3.671,1005,3.671,1006,3.671,1007,3.671,1008,3.671,1009,3.671,1010,3.671,1011,3.671,1012,3.671,1013,3.671,1014,3.671,1015,3.163,1016,3.671,1017,3.671,1018,3.671]],["title/miscellaneous/functions.html",[208,2.933,1019,1.892]],["body/miscellaneous/functions.html",[7,0.389,12,0.017,15,0.014,16,0.014,52,1.193,53,0.87,54,1.193,141,3.998,204,4.877,208,3.362,209,4.472,213,4.472,220,4.877,245,4.877,756,4.446,964,4.472,1019,3.127,1020,6.331,1021,5.19,1022,7.113,1023,6.331,1024,5.19,1025,5.19]],["title/index.html",[7,0.235,849,2.419,1026,2.419]],["body/index.html",[4,0.11,12,0.013,15,0.01,16,0.01,23,0.884,34,1.435,64,1.967,65,1.741,87,1.292,94,0.925,97,1.292,100,1.824,113,1.23,118,0.884,122,1.609,123,2.761,143,4.019,144,3.104,162,1.967,166,2.34,167,2.34,174,2.34,180,2.133,208,1.967,216,2.617,263,2.34,304,2.492,351,2.133,465,2.617,501,2.133,506,3.405,538,3.808,600,2.34,630,1.517,645,2.34,768,2.133,771,2.133,778,2.133,802,2.617,809,2.617,910,3.405,949,2.34,950,2.34,969,2.617,992,2.617,1002,2.617,1015,2.617,1026,2.34,1027,4.42,1028,5.211,1029,4.42,1030,4.42,1031,3.037,1032,3.037,1033,3.037,1034,3.037,1035,3.037,1036,3.037,1037,3.037,1038,3.037,1039,3.808,1040,5.211,1041,5.211,1042,4.42,1043,4.42,1044,3.037,1045,5.211,1046,3.037,1047,3.037,1048,3.037,1049,3.037,1050,3.037,1051,3.037,1052,3.037,1053,3.037,1054,2.617,1055,3.037,1056,3.037,1057,5.211,1058,3.037,1059,3.037,1060,4.42,1061,4.42,1062,2.617,1063,3.037,1064,3.037,1065,3.037,1066,3.037,1067,3.037,1068,5.468,1069,5.211,1070,4.42,1071,3.037,1072,4.42,1073,5.211,1074,5.211,1075,3.037,1076,3.037,1077,4.42,1078,4.42,1079,4.42,1080,3.037,1081,3.037,1082,3.037,1083,3.037,1084,3.037,1085,3.037,1086,3.037,1087,3.037,1088,3.037,1089,3.037,1090,3.037,1091,4.42,1092,3.037,1093,3.037,1094,3.037,1095,5.211,1096,3.037,1097,3.037,1098,3.037,1099,3.037,1100,3.037,1101,3.037,1102,3.037,1103,4.42,1104,3.037,1105,3.037,1106,3.037,1107,3.037,1108,3.037,1109,3.037,1110,3.037,1111,3.037,1112,3.037,1113,3.037,1114,4.42,1115,3.037,1116,3.037,1117,3.037,1118,4.42,1119,3.037,1120,4.42,1121,3.037,1122,3.037,1123,3.037,1124,4.42,1125,3.037,1126,3.037,1127,5.211,1128,3.037,1129,3.037,1130,3.037,1131,4.42,1132,3.037,1133,3.037,1134,3.037,1135,3.037,1136,3.037,1137,3.037,1138,3.037,1139,3.037,1140,3.037,1141,3.037,1142,3.037]],["title/license.html",[849,2.419,1026,2.419,1143,2.705]],["body/license.html",[4,0.155,12,0.013,15,0.013,16,0.013,123,2.271,140,2.417,242,3.693,356,3.693,361,3.693,501,3.01,756,3.01,950,3.302,1039,3.693,1062,3.693,1068,4.833,1143,3.693,1144,4.287,1145,6.254,1146,4.287,1147,4.287,1148,4.287,1149,4.287,1150,5.61,1151,4.287,1152,4.287,1153,4.287,1154,4.287,1155,5.61,1156,4.287,1157,6.634,1158,7.383,1159,4.287,1160,5.61,1161,6.254,1162,4.287,1163,6.254,1164,5.61,1165,4.287,1166,4.287,1167,4.287,1168,4.287,1169,4.287,1170,4.287,1171,4.287,1172,4.287,1173,4.287,1174,4.287,1175,4.287,1176,5.61,1177,5.61,1178,4.287,1179,4.287,1180,5.61,1181,4.287,1182,4.287,1183,4.287,1184,4.287,1185,4.287,1186,4.287,1187,4.287,1188,4.287,1189,4.287,1190,4.287,1191,4.287,1192,4.287,1193,4.287,1194,4.287,1195,4.287,1196,4.287,1197,4.287,1198,4.287]],["title/modules.html",[118,1.497]],["body/modules.html",[12,0.014,15,0.014,16,0.014,64,4.725,118,1.511,119,3.645,129,3.362,130,3.362,131,2.75,132,2.926,308,3.362,428,3.645,432,3.362,1054,5.886,1199,7.293,1200,7.293,1201,7.581,1202,6.832]],["title/overview.html",[1203,4.43]],["body/overview.html",[0,1.095,12,0.018,13,0.146,15,0.01,16,0.01,17,0.662,18,2.425,70,0.198,86,1.045,93,1.77,96,1.944,99,1.855,102,1.855,104,2.425,107,1.77,108,1.855,110,1.77,112,1.944,115,1.944,118,1.315,119,5.329,120,1.657,121,1.885,122,1.657,123,1.657,124,2.695,125,2.695,126,2.695,127,2.695,128,2.695,129,3.433,130,4.683,131,3.652,132,4.183,133,3.721,134,3.721,135,3.721,136,3.721,137,3.721,138,2.721,139,1.885,140,1.764,251,1.885,275,2.41,285,0.422,305,2.695,306,2.695,307,2.695,308,3.433,378,2.695,379,2.695,380,2.695,428,5.03,429,2.695,430,2.695,431,2.695,432,3.433,458,2.695,477,2.695,478,2.695,747,2.695,1203,2.695,1204,3.128,1205,3.128,1206,3.128,1207,3.128,1208,3.128]],["title/routes.html",[251,3.098]],["body/routes.html",[12,0.016,15,0.016,16,0.016,251,3.644]],["title/miscellaneous/typealiases.html",[1019,1.892,1209,4.528]],["body/miscellaneous/typealiases.html",[7,0.436,11,0.619,12,0.015,15,0.015,16,0.015,749,4.082,750,4.082,756,5.034,1019,3.503,1210,5.814,1211,5.009]],["title/miscellaneous/variables.html",[962,3.488,1019,1.892]],["body/miscellaneous/variables.html",[7,0.346,10,1.302,11,0.75,12,0.018,15,0.013,16,0.013,80,3.429,113,1.282,183,5.057,188,4.986,234,3.549,290,3.549,449,4.946,450,4.946,750,3.235,755,4.986,760,3.97,961,3.97,962,3.549,965,3.97,966,3.97,1019,2.776,1211,3.97,1212,5.878,1213,4.608,1214,4.608,1215,4.608,1216,4.608,1217,4.608,1218,4.608,1219,4.608,1220,5.878]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["0.1.18",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":747,"title":{},"body":{"injectables/RequestInspectorService.html":{},"overview.html":{}}}],["1.1.0",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["1.10.1",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1204,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1208,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1205,"title":{},"body":{"overview.html":{}}}],["2",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/SporkListComponent.html":{}}}],["2.0.6",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":1147,"title":{},"body":{"license.html":{}}}],["255",{"_index":605,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["3",{"_index":1206,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":714,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["4",{"_index":1037,"title":{},"body":{"index.html":{}}}],["4.1.3",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1027,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1207,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":458,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["87",{"_index":1125,"title":{},"body":{"index.html":{}}}],["9.0.0",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["_angulartics2googletagmanag",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["_authservic",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["_completehandl",{"_index":644,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_configservic",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_configur",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_configuretransl",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["_datehelp",{"_index":898,"title":{},"body":{"injectables/UserFactory.html":{}}}],["_email",{"_index":867,"title":{},"body":{"classes/User.html":{}}}],["_errorhandl",{"_index":565,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_errorhandler(errorrespons",{"_index":688,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_errorhandler(result",{"_index":576,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_formbuild",{"_index":552,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["_formfactori",{"_index":568,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_geterrorlist",{"_index":682,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_geterrorlist(errorrespons",{"_index":691,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_getresult",{"_index":833,"title":{},"body":{"injectables/SporkService.html":{}}}],["_getresult(resultpayload",{"_index":837,"title":{},"body":{"injectables/SporkService.html":{}}}],["_geturi",{"_index":832,"title":{},"body":{"injectables/SporkService.html":{}}}],["_http",{"_index":646,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_imageuri",{"_index":765,"title":{},"body":{"classes/Spork.html":{}}}],["_injector",{"_index":336,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"injectables/RequestInspectorService.html":{}}}],["_jsonencodeverb",{"_index":445,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["_key",{"_index":935,"title":{},"body":{"injectables/UserService.html":{}}}],["_lastlogin",{"_index":868,"title":{},"body":{"classes/User.html":{}}}],["_logger",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["_loginservic",{"_index":569,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_loginuri",{"_index":614,"title":{},"body":{"injectables/LoginService.html":{}}}],["_logoutservic",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"components/TopnavComponent.html":{}}}],["_logouturi",{"_index":643,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_name",{"_index":869,"title":{},"body":{"classes/User.html":{}}}],["_ngxlogger",{"_index":511,"title":{},"body":{"injectables/LogService.html":{}}}],["_password",{"_index":870,"title":{},"body":{"classes/User.html":{}}}],["_price",{"_index":766,"title":{},"body":{"classes/Spork.html":{}}}],["_registerservic",{"_index":685,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_registeruri",{"_index":726,"title":{},"body":{"injectables/RegisterService.html":{}}}],["_requestinspector",{"_index":333,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_router",{"_index":571,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["_setus",{"_index":615,"title":{},"body":{"injectables/LoginService.html":{}}}],["_setuser(result",{"_index":622,"title":{},"body":{"injectables/LoginService.html":{}}}],["_sporkfactori",{"_index":834,"title":{},"body":{"injectables/SporkService.html":{}}}],["_sporkservic",{"_index":806,"title":{},"body":{"components/SporkListComponent.html":{}}}],["_store",{"_index":808,"title":{},"body":{"components/SporkListComponent.html":{}}}],["_successhandl",{"_index":566,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_titleservic",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["_toastr",{"_index":573,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_translateservic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/LangSwitchComponent.html":{}}}],["_userfactori",{"_index":616,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["_userservic",{"_index":618,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["abov",{"_index":1175,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":533,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["accept",{"_index":453,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["accessor",{"_index":767,"title":{},"body":{"classes/Spork.html":{},"classes/User.html":{}}}],["action",{"_index":756,"title":{},"body":{"injectables/SetSporks.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["actual_compon",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["add",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["address",{"_index":602,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["against",{"_index":1070,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1210,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["analyt",{"_index":1098,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1169,"title":{},"body":{"license.html":{}}}],["angular",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compil",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular2",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["angulartics2",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":1060,"title":{},"body":{"index.html":{}}}],["apibaseuri",{"_index":543,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["apirespons",{"_index":1,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["app.compon",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing.modul",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["app.stat",{"_index":814,"title":{},"body":{"components/SporkListComponent.html":{}}}],["appcompon",{"_index":18,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":1058,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":454,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["appmodul",{"_index":119,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":129,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstat",{"_index":272,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/SporkListComponent.html":{},"coverage.html":{}}}],["aris",{"_index":1197,"title":{},"body":{"license.html":{}}}],["arithmet",{"_index":1093,"title":{},"body":{"index.html":{}}}],["around",{"_index":353,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["assets/config.json",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lang",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["associ",{"_index":1159,"title":{},"body":{"license.html":{}}}],["auth",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"dependencies.html":{},"index.html":{}}}],["auth.component.html",{"_index":294,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.component.scss",{"_index":293,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.routing.modul",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.modul",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module#authmodul",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/login/login.compon",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/register/register.compon",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/login",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout.servic",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authconfig",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":1069,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":254,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authlayoutcompon",{"_index":93,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":130,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":361,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["authreq",{"_index":367,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["authrout",{"_index":323,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authroutingmodul",{"_index":308,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["authservice.gettoken",{"_index":365,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authtokeninterceptor",{"_index":133,"title":{"interceptors/AuthTokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"overview.html":{}}}],["autoseri",{"_index":875,"title":{},"body":{"classes/User.html":{}}}],["avail",{"_index":1054,"title":{},"body":{"index.html":{},"modules.html":{}}}],["aw",{"_index":1043,"title":{},"body":{"index.html":{}}}],["back",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["backend",{"_index":1057,"title":{},"body":{"index.html":{}}}],["backtologincompon",{"_index":96,"title":{"components/BackToLoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["baseurl",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beanstalk",{"_index":1074,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":354,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["below",{"_index":717,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["blacklist",{"_index":1075,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RequestInspectorService.html":{}}}],["bootstrap",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["brows",{"_index":1201,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":1109,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1132,"title":{},"body":{"index.html":{}}}],["burkindin",{"_index":1149,"title":{},"body":{"license.html":{}}}],["c",{"_index":1146,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":1094,"title":{},"body":{"index.html":{}}}],["call",{"_index":1071,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cart",{"_index":1085,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":651,"title":{},"body":{"injectables/LogoutService.html":{}}}],["cerial",{"_index":887,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["changedetect",{"_index":801,"title":{},"body":{"components/SporkListComponent.html":{}}}],["changedetectionstrategi",{"_index":813,"title":{},"body":{"components/SporkListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":802,"title":{},"body":{"components/SporkListComponent.html":{},"index.html":{}}}],["charact",{"_index":606,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["charg",{"_index":1154,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":457,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["checkout",{"_index":1086,"title":{},"body":{"index.html":{}}}],["children",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["chromedriv",{"_index":1137,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1139,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":1042,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1190,"title":{},"body":{"license.html":{}}}],["class",{"_index":70,"title":{"classes/LogServiceAbstract.html":{},"classes/Spork.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["cleanreq",{"_index":358,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["clearus",{"_index":936,"title":{},"body":{"injectables/UserService.html":{}}}],["close",{"_index":599,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["cluster_appmodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":378,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":379,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":380,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodul",{"_index":429,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":430,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_import",{"_index":431,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutmodul",{"_index":477,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declar",{"_index":478,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_import",{"_index":479,"title":{},"body":{"modules/LayoutModule.html":{}}}],["code",{"_index":1104,"title":{},"body":{"index.html":{}}}],["codepipline/codebuild",{"_index":1105,"title":{},"body":{"index.html":{}}}],["collect",{"_index":1082,"title":{},"body":{"index.html":{}}}],["combin",{"_index":1066,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1118,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["compodoc",{"_index":1099,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":17,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component/auth/auth.compon",{"_index":481,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/back",{"_index":482,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/error/error.compon",{"_index":484,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/home/home.compon",{"_index":434,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["component/lang",{"_index":382,"title":{},"body":{"modules/CoreModule.html":{}}}],["component/login/login.compon",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/main/main.compon",{"_index":485,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/register/register.compon",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/spork",{"_index":435,"title":{},"body":{"modules/HomeModule.html":{}}}],["component/topnav/topnav.compon",{"_index":486,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component_templ",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["compos",{"_index":1036,"title":{},"body":{"index.html":{}}}],["condit",{"_index":1174,"title":{},"body":{"license.html":{}}}],["config",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.auth.heroimageuri",{"_index":302,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["config.core.apibaseuri",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.core.apibaseuri}${config.auth.loginuri",{"_index":635,"title":{},"body":{"injectables/LoginService.html":{}}}],["config.core.apibaseuri}${config.auth.logouturi",{"_index":657,"title":{},"body":{"injectables/LogoutService.html":{}}}],["config.core.apibaseuri}${config.auth.registeruri",{"_index":732,"title":{},"body":{"injectables/RegisterService.html":{}}}],["config.core.apibaseuri}${config.logging.logerroruri",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["config.core.apibaseuri}${config.spork.geturi",{"_index":843,"title":{},"body":{"injectables/SporkService.html":{}}}],["config.core.apibaseuri}/auth/login",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.json",{"_index":1131,"title":{},"body":{"index.html":{}}}],["config/auth.config",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["config/cor",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkService.html":{},"dependencies.html":{}}}],["config/http",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["configfactori",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configfactory(http",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["confighttpload",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["confighttploader(http",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["configload",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodul",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["configservic",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkService.html":{}}}],["configur",{"_index":1092,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":718,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["confirmpassword",{"_index":678,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["confirmpasswordcontrol",{"_index":675,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["connect",{"_index":1198,"title":{},"body":{"license.html":{}}}],["consol",{"_index":544,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["console.log(data",{"_index":545,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["const",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["constructor(_angulartics2googletagmanag",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_authservic",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["constructor(_configservic",{"_index":296,"title":{},"body":{"components/AuthLayoutComponent.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["constructor(_datehelp",{"_index":896,"title":{},"body":{"injectables/UserFactory.html":{}}}],["constructor(_formbuild",{"_index":549,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["constructor(_formfactori",{"_index":684,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["constructor(_injector",{"_index":331,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"injectables/RequestInspectorService.html":{}}}],["constructor(_logg",{"_index":407,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_logoutservic",{"_index":860,"title":{},"body":{"components/TopnavComponent.html":{}}}],["constructor(_ngxlogg",{"_index":508,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(_requestinspector",{"_index":446,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["constructor(_translateservic",{"_index":469,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["constructor(email",{"_index":871,"title":{},"body":{"classes/User.html":{}}}],["constructor(payload",{"_index":752,"title":{},"body":{"injectables/SetSporks.html":{}}}],["constructor(pric",{"_index":770,"title":{},"body":{"classes/Spork.html":{}}}],["constructor(priv",{"_index":300,"title":{},"body":{"components/AuthLayoutComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{}}}],["constructor(publ",{"_index":763,"title":{},"body":{"injectables/SetSporks.html":{}}}],["contract",{"_index":1194,"title":{},"body":{"license.html":{}}}],["convent",{"_index":759,"title":{},"body":{"injectables/SetSporks.html":{}}}],["copi",{"_index":1157,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1145,"title":{},"body":{"license.html":{}}}],["core",{"_index":992,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["core/core.modul",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["core/interface/service/log.service.abstract",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["core/model/payload/api",{"_index":730,"title":{},"body":{"injectables/RegisterService.html":{}}}],["core/model/payload/login",{"_index":628,"title":{},"body":{"injectables/LoginService.html":{}}}],["core/model/user.model",{"_index":631,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/auth/logout.servic",{"_index":864,"title":{},"body":{"components/TopnavComponent.html":{}}}],["core/service/error",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/factory/user.factori",{"_index":632,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/guard/auth.guard",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/service/interceptor/auth",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/json",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/log",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/timing.interceptor.servic",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/log.servic",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/user.servic",{"_index":633,"title":{},"body":{"injectables/LoginService.html":{}}}],["coremodul",{"_index":131,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":1121,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":949,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtranslateload",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":1032,"title":{},"body":{"index.html":{}}}],["custom",{"_index":1081,"title":{},"body":{"index.html":{}}}],["customvalid",{"_index":556,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.email",{"_index":559,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.equalto(newpasswordcontrol",{"_index":677,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["d3",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["damag",{"_index":1191,"title":{},"body":{"license.html":{}}}],["data",{"_index":538,"title":{},"body":{"classes/LogServiceAbstract.html":{},"index.html":{}}}],["date",{"_index":392,"title":{},"body":{"injectables/DateHelperService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["date.now",{"_index":850,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["datehelperservic",{"_index":385,"title":{"injectables/DateHelperService.html":{}},"body":{"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["day",{"_index":1045,"title":{},"body":{"index.html":{}}}],["ddthh:mm:ssza').tod",{"_index":397,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["deal",{"_index":1160,"title":{},"body":{"license.html":{}}}],["debug",{"_index":505,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["debug(messag",{"_index":512,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["declar",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["decod",{"_index":911,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":925,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.email",{"_index":928,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.nam",{"_index":929,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decor",{"_index":874,"title":{},"body":{"classes/User.html":{}}}],["default",{"_index":449,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"injectables/SetSporks.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["demo",{"_index":1029,"title":{},"body":{"index.html":{}}}],["demo.s3.amazonaws.com/index.html",{"_index":1056,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":1031,"title":{},"body":{"index.html":{}}}],["dep",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":120,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1041,"title":{},"body":{"index.html":{}}}],["deseri",{"_index":943,"title":{},"body":{"injectables/UserService.html":{}}}],["deserialize(sessionstorage.getitem(this._key",{"_index":945,"title":{},"body":{"injectables/UserService.html":{}}}],["devlog",{"_index":534,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["devlog(data",{"_index":536,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["direct",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["disabl",{"_index":1135,"title":{},"body":{"index.html":{}}}],["disabletimeout",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":1167,"title":{},"body":{"license.html":{}}}],["document",{"_index":950,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":715,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["doesn\\'t",{"_index":723,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["dom",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["don't",{"_index":719,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["don\\'t",{"_index":724,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["done",{"_index":1052,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":1134,"title":{},"body":{"index.html":{}}}],["ec2",{"_index":1107,"title":{},"body":{"index.html":{}}}],["effort",{"_index":1128,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":851,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["elast",{"_index":1073,"title":{},"body":{"index.html":{}}}],["element",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["email",{"_index":462,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["employ",{"_index":1087,"title":{},"body":{"index.html":{}}}],["en",{"_index":475,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["enablehtml",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":1079,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1096,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":1114,"title":{},"body":{"index.html":{}}}],["enter",{"_index":601,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["environ",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["environments/environ",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["error",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["error(`provid",{"_index":400,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["error(messag",{"_index":515,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["error.component.html",{"_index":417,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error.component.scss",{"_index":416,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error:${this._geterrorlist(errorrespons",{"_index":707,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorhandl",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":191,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errorlist",{"_index":708,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorlist}${error",{"_index":710,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorpagecompon",{"_index":99,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorrespons",{"_index":421,"title":{"interfaces/ErrorResponse.html":{}},"body":{"interfaces/ErrorResponse.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"coverage.html":{}}}],["es",{"_index":476,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["es6",{"_index":1113,"title":{},"body":{"index.html":{}}}],["event",{"_index":501,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{},"license.html":{}}}],["exce",{"_index":604,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["expect",{"_index":401,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["expos",{"_index":1061,"title":{},"body":{"index.html":{}}}],["express",{"_index":1039,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":523,"title":{},"body":{"injectables/LogService.html":{}}}],["extensions/password",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["factory/spork.factori",{"_index":841,"title":{},"body":{"injectables/SporkService.html":{}}}],["fals",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RequestInspectorService.html":{},"miscellaneous/variables.html":{}}}],["fast_rewind",{"_index":376,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["feed",{"_index":1095,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fit",{"_index":1184,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1173,"title":{},"body":{"license.html":{}}}],["fontawesome5",{"_index":1038,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1065,"title":{},"body":{"index.html":{}}}],["form",{"_index":564,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["form.get('password').value?.length",{"_index":713,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["form.get(\\'password\\').value?.length",{"_index":722,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["format",{"_index":403,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["formbuild",{"_index":550,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["formcontrol",{"_index":673,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["formdata",{"_index":902,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.nam",{"_index":923,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.password",{"_index":924,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formgroup",{"_index":554,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{}}}],["formsmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["free",{"_index":1153,"title":{},"body":{"license.html":{}}}],["front",{"_index":1078,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1077,"title":{},"body":{"index.html":{}}}],["full",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"index.html":{}}}],["function",{"_index":208,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":1171,"title":{},"body":{"license.html":{}}}],["get",{"_index":1026,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdatefromutcstr",{"_index":388,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getdatefromutcstring(utcdatestr",{"_index":389,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getemail",{"_index":879,"title":{},"body":{"classes/User.html":{}}}],["getform",{"_index":548,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["getfromformdata",{"_index":893,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfromformdata(formdata",{"_index":899,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload",{"_index":783,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/UserFactory.html":{}}}],["getfrompayload(payload",{"_index":903,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload(sporkspayload",{"_index":786,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["getimageuri",{"_index":776,"title":{},"body":{"classes/Spork.html":{}}}],["getlastlogin",{"_index":881,"title":{},"body":{"classes/User.html":{}}}],["getnam",{"_index":883,"title":{},"body":{"classes/User.html":{}}}],["getpassword",{"_index":885,"title":{},"body":{"classes/User.html":{}}}],["getpayload",{"_index":894,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getpayload(us",{"_index":905,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getpric",{"_index":774,"title":{},"body":{"classes/Spork.html":{}}}],["getspork",{"_index":784,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{}}}],["getspork(pric",{"_index":790,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["getus",{"_index":895,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["getuser(email",{"_index":907,"title":{},"body":{"injectables/UserFactory.html":{}}}],["gitignor",{"_index":1142,"title":{},"body":{"index.html":{}}}],["googl",{"_index":1097,"title":{},"body":{"index.html":{}}}],["gotologin",{"_index":683,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["gotosignup",{"_index":567,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["gotten",{"_index":1084,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1152,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1202,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":275,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["hack",{"_index":1046,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":406,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":409,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.servic",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":405,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":410,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:8",{"_index":408,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["haven't",{"_index":1083,"title":{},"body":{"index.html":{}}}],["header",{"_index":357,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.servic",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["header.interceptor.service.t",{"_index":444,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:13",{"_index":447,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:20",{"_index":448,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["headers['cont",{"_index":456,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["helper.servic",{"_index":918,"title":{},"body":{"injectables/UserFactory.html":{}}}],["helper.service.t",{"_index":387,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:8",{"_index":390,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["helper/d",{"_index":917,"title":{},"body":{"injectables/UserFactory.html":{}}}],["herebi",{"_index":1151,"title":{},"body":{"license.html":{}}}],["heroimageuri",{"_index":295,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["holder",{"_index":1188,"title":{},"body":{"license.html":{}}}],["home",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["home.component.html",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.routing.modul",{"_index":438,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/home.module#homemodul",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home/model/spork.model",{"_index":274,"title":{},"body":{"interfaces/AppState.html":{}}}],["home/state/reducer/spork.reduc",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["homecompon",{"_index":102,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodul",{"_index":428,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homerout",{"_index":441,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["homeroutingmodul",{"_index":432,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["http",{"_index":1023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http/request",{"_index":346,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["http_interceptor",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["httpclientmodul",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":689,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["httpevent",{"_index":343,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httphandler",{"_index":339,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":344,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":338,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprespons",{"_index":496,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["https://angular6",{"_index":1055,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["imageuri",{"_index":769,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{}}}],["immut",{"_index":1122,"title":{},"body":{"index.html":{}}}],["implement",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/SetSporks.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["impli",{"_index":1182,"title":{},"body":{"license.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["includ",{"_index":1163,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":285,"title":{"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":332,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"injectables/RequestInspectorService.html":{}}}],["inspector.servic",{"_index":347,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["inspector.service.t",{"_index":736,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["inspector.service.ts:12",{"_index":741,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["inspector.service.ts:27",{"_index":743,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["inspector.service.ts:6",{"_index":739,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["instanceof",{"_index":502,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["instruct",{"_index":1140,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":330,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":337,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interceptor",{"_index":327,"title":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiResponse.html":{},"interfaces/AppState.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/SporkPayload.html":{},"interfaces/UserPayload.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/AppState.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/SporkPayload.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interface/service/log.service.abstract",{"_index":411,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["isapirequest",{"_index":737,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isapirequest(req",{"_index":740,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest",{"_index":738,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest(req",{"_index":742,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isnan(date.gettim",{"_index":398,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["issu",{"_index":1136,"title":{},"body":{"index.html":{}}}],["it'",{"_index":1063,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":778,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["json.stringify(serialize(us",{"_index":947,"title":{},"body":{"injectables/UserService.html":{}}}],["jsonheaderinterceptor",{"_index":134,"title":{"interceptors/JsonHeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["jwt",{"_index":910,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{},"index.html":{}}}],["jwtdecod",{"_index":909,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtdecode(payload.token",{"_index":926,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtpayload",{"_index":459,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["keyword",{"_index":762,"title":{},"body":{"injectables/SetSporks.html":{}}}],["kind",{"_index":1181,"title":{},"body":{"license.html":{}}}],["lang",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["langswitchcompon",{"_index":104,"title":{"components/LangSwitchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lastlogin",{"_index":612,"title":{},"body":{"interfaces/LoginResult.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["layout",{"_index":292,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["layout/component/auth/auth.compon",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["layout/component/error/error.compon",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout/component/main/main.compon",{"_index":440,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["layout/layout.modul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{}}}],["layoutmodul",{"_index":132,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"overview.html":{}}}],["level",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["liabil",{"_index":1192,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1189,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1143,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1164,"title":{},"body":{"license.html":{}}}],["line",{"_index":1120,"title":{},"body":{"index.html":{}}}],["line:nam",{"_index":758,"title":{},"body":{"injectables/SetSporks.html":{}}}],["line:no",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["lint",{"_index":1002,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["list",{"_index":803,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list'},{'nam",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["list.compon",{"_index":437,"title":{},"body":{"modules/HomeModule.html":{}}}],["list.component.html",{"_index":805,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.scss",{"_index":804,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.t",{"_index":800,"title":{},"body":{"components/SporkListComponent.html":{},"coverage.html":{}}}],["list.component.ts:20",{"_index":810,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.ts:29",{"_index":812,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.ts:36",{"_index":811,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list/spork",{"_index":436,"title":{},"body":{"modules/HomeModule.html":{},"components/SporkListComponent.html":{},"coverage.html":{}}}],["live",{"_index":1053,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["lock.json",{"_index":1141,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":506,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"index.html":{}}}],["log(messag",{"_index":517,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["logerroruri",{"_index":521,"title":{},"body":{"injectables/LogService.html":{}}}],["logger",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["loggerconfig",{"_index":522,"title":{},"body":{"injectables/LogService.html":{}}}],["loggermodul",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":324,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["login'},{'nam",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["login(email",{"_index":624,"title":{},"body":{"injectables/LoginService.html":{}}}],["login(this.form.value.email",{"_index":588,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login.compon",{"_index":483,"title":{},"body":{"modules/LayoutModule.html":{}}}],["login.component.html",{"_index":373,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.scss",{"_index":372,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.t",{"_index":371,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:11",{"_index":375,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login.component.ts:8",{"_index":374,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login/back",{"_index":370,"title":{},"body":{"components/BackToLoginComponent.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["loginformfactori",{"_index":546,"title":{"injectables/LoginFormFactory.html":{}},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecompon",{"_index":107,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginresult",{"_index":609,"title":{"interfaces/LoginResult.html":{}},"body":{"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["loginservic",{"_index":570,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":645,"title":{},"body":{"injectables/LogoutService.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["logoutservic",{"_index":280,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/LogoutService.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["logrequestinterceptor",{"_index":135,"title":{"interceptors/LogRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"overview.html":{}}}],["logresponseinterceptor",{"_index":136,"title":{"interceptors/LogResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogResponseInterceptor.html":{},"overview.html":{}}}],["logservic",{"_index":202,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logserviceabstract",{"_index":45,"title":{"classes/LogServiceAbstract.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["lot",{"_index":1051,"title":{},"body":{"index.html":{}}}],["made",{"_index":1129,"title":{},"body":{"index.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["main.component.html",{"_index":666,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["main.component.scss",{"_index":665,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["mainlayoutcompon",{"_index":108,"title":{"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":626,"title":{},"body":{"injectables/LoginService.html":{},"injectables/SporkService.html":{}}}],["matbuttonmodul",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["matcardmodul",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["match",{"_index":16,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["matformfieldmodul",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{}}}],["maticonmodul",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["matinputmodul",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["matpasswordstrengthmodul",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["matpasswordstrengthmodule.forroot",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["max",{"_index":1119,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":1088,"title":{},"body":{"index.html":{}}}],["maxopen",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":1035,"title":{},"body":{"index.html":{}}}],["measur",{"_index":1116,"title":{},"body":{"index.html":{}}}],["menu",{"_index":865,"title":{},"body":{"components/TopnavComponent.html":{}}}],["merchant",{"_index":1183,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1165,"title":{},"body":{"license.html":{}}}],["messag",{"_index":514,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":1019,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1144,"title":{},"body":{"license.html":{}}}],["mm",{"_index":396,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["model/payload/api",{"_index":652,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/error",{"_index":654,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/jwt",{"_index":912,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/login",{"_index":914,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/spork.payload",{"_index":792,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{}}}],["model/payload/us",{"_index":915,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/spork.model",{"_index":757,"title":{},"body":{"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{}}}],["model/user.model",{"_index":916,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["modifi",{"_index":356,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["modul",{"_index":118,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":393,"title":{},"body":{"injectables/DateHelperService.html":{},"dependencies.html":{}}}],["moment(utcdatestr",{"_index":394,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["money",{"_index":771,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"dependencies.html":{},"index.html":{}}}],["money.fromdecimal(sporkpayload.pric",{"_index":795,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["mongodb",{"_index":1040,"title":{},"body":{"index.html":{}}}],["more",{"_index":712,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["mostli",{"_index":1126,"title":{},"body":{"index.html":{}}}],["ms",{"_index":856,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["msg",{"_index":9,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{}}}],["multi",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nav.backtologin",{"_index":377,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["nav.errorpag",{"_index":420,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["new",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"injectables/DateHelperService.html":{},"injectables/SporkFactory.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["newpasswordcontrol",{"_index":674,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["next",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(authreq",{"_index":368,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["next.handle(cleanreq",{"_index":362,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["next.handle(req",{"_index":366,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req).pip",{"_index":499,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["ng2",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"dependencies.html":{}}}],["ng2uiauthmodul",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["ng2uiauthmodule.forroot(authconfig",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["nginx",{"_index":1106,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["ngrx/effect",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"injectables/SetSporks.html":{},"components/SporkListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"injectables/LogService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":509,"title":{},"body":{"injectables/LogService.html":{}}}],["ngxloggerlevel",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.off",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.trac",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":1187,"title":{},"body":{"license.html":{}}}],["note",{"_index":1127,"title":{},"body":{"index.html":{}}}],["notic",{"_index":1176,"title":{},"body":{"license.html":{}}}],["null",{"_index":662,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/UserFactory.html":{}}}],["number",{"_index":830,"title":{},"body":{"interfaces/SporkPayload.html":{},"interceptors/TimingInterceptor.html":{}}}],["number:'.2",{"_index":827,"title":{},"body":{"components/SporkListComponent.html":{}}}],["number:\\'.2",{"_index":828,"title":{},"body":{"components/SporkListComponent.html":{}}}],["object.values(errorresponse.error).foreach((error",{"_index":709,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["observ",{"_index":342,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["obtain",{"_index":1156,"title":{},"body":{"license.html":{}}}],["of(us",{"_index":641,"title":{},"body":{"injectables/LoginService.html":{}}}],["old",{"_index":1102,"title":{},"body":{"index.html":{}}}],["onactivatetick",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":1196,"title":{},"body":{"license.html":{}}}],["out",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"license.html":{},"overview.html":{}}}],["outdatedbrows",{"_index":1100,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1203,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":969,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":415,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page'},{'nam",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["pages.login.loginbutton",{"_index":607,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.registerlink",{"_index":608,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.titl",{"_index":598,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.register.loginlink",{"_index":721,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.registerbutton",{"_index":720,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.titl",{"_index":711,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["paramet",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1185,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1067,"title":{},"body":{"index.html":{}}}],["password",{"_index":561,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["path",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pattern",{"_index":1033,"title":{},"body":{"index.html":{}}}],["payload",{"_index":751,"title":{},"body":{"injectables/SetSporks.html":{},"injectables/UserFactory.html":{}}}],["payload.lastlogin",{"_index":930,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model",{"_index":913,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model.t",{"_index":461,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["permiss",{"_index":1150,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1170,"title":{},"body":{"license.html":{}}}],["person",{"_index":1155,"title":{},"body":{"license.html":{}}}],["pete",{"_index":1148,"title":{},"body":{"license.html":{}}}],["pipe(map(this._setuser.bind(thi",{"_index":637,"title":{},"body":{"injectables/LoginService.html":{}}}],["pipelin",{"_index":1103,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":600,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["popper.j",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":1179,"title":{},"body":{"license.html":{}}}],["positionclass",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":451,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["post(this._logouturi",{"_index":661,"title":{},"body":{"injectables/LogoutService.html":{}}}],["pre",{"_index":1117,"title":{},"body":{"index.html":{}}}],["preloadallmodul",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategi",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":1080,"title":{},"body":{"index.html":{}}}],["price",{"_index":768,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"index.html":{}}}],["privat",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["problem",{"_index":824,"title":{},"body":{"components/SporkListComponent.html":{}}}],["product",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1030,"title":{},"body":{"index.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/AppState.html":{},"components/AuthLayoutComponent.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["protect",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"index.html":{}}}],["provid",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["public",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["publish",{"_index":1166,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1186,"title":{},"body":{"license.html":{}}}],["put",{"_index":452,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["qualiti",{"_index":1115,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["readonli",{"_index":14,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/AppState.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"interfaces/SporkPayload.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{}}}],["recaptcha",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["redi",{"_index":1076,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":1101,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(st",{"_index":1024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regist",{"_index":325,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["register'},{'nam",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["register(us",{"_index":701,"title":{},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["register.component.html",{"_index":681,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["register.component.scss",{"_index":680,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["registerformfactori",{"_index":669,"title":{"injectables/RegisterFormFactory.html":{}},"body":{"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["registerpagecompon",{"_index":110,"title":{"components/RegisterPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerservic",{"_index":686,"title":{"injectables/RegisterService.html":{}},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registr",{"_index":706,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["repositori",{"_index":1133,"title":{},"body":{"index.html":{}}}],["req",{"_index":341,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clon",{"_index":359,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["req.url.endswith('/assets/config.json",{"_index":748,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.url.indexof(configservice.getsettings().core.apibaseuri",{"_index":746,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.urlwithparam",{"_index":854,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":853,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request.interceptor.servic",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["request.interceptor.service.t",{"_index":488,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:14",{"_index":489,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:21",{"_index":490,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["requestinspectorservic",{"_index":334,"title":{"injectables/RequestInspectorService.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["requir",{"_index":603,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["require('../../assets/config.json",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reserv",{"_index":761,"title":{},"body":{"injectables/SetSporks.html":{}}}],["reset",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["response.interceptor.servic",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.service.t",{"_index":493,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:16",{"_index":494,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:23",{"_index":495,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.model",{"_index":653,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["response.model.t",{"_index":6,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["rest",{"_index":1059,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":1162,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.model",{"_index":629,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserFactory.html":{}}}],["result.model.t",{"_index":611,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["resultpayload",{"_index":839,"title":{},"body":{"injectables/SporkService.html":{}}}],["retriev",{"_index":825,"title":{},"body":{"components/SporkListComponent.html":{}}}],["return",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["right",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["root",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["root'},{'nam",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["rout",{"_index":251,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":572,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["routermodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["routermodule.forchild(authrout",{"_index":326,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(homerout",{"_index":442,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rule",{"_index":716,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["run",{"_index":1138,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":1091,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":345,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/internal/oper",{"_index":627,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/SporkService.html":{}}}],["rxjs/oper",{"_index":498,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["s3",{"_index":1108,"title":{},"body":{"index.html":{}}}],["scss",{"_index":1112,"title":{},"body":{"index.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["sell",{"_index":1062,"title":{},"body":{"index.html":{},"license.html":{}}}],["serial",{"_index":944,"title":{},"body":{"injectables/UserService.html":{}}}],["serverloglevel",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["service/factory/form/login.form.factori",{"_index":582,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/factory/form/register.form.factori",{"_index":697,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["service/login.servic",{"_index":583,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/register.servic",{"_index":698,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["service/spork.servic",{"_index":815,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sessionstorage.removeitem(this._key",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["sessionstorage.setitem(this._key",{"_index":946,"title":{},"body":{"injectables/UserService.html":{}}}],["set_spork",{"_index":755,"title":{},"body":{"injectables/SetSporks.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setcollect",{"_index":760,"title":{},"body":{"injectables/SetSporks.html":{},"miscellaneous/variables.html":{}}}],["sethead",{"_index":360,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["setlang",{"_index":468,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["setlang(lang",{"_index":472,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["setspork",{"_index":749,"title":{"injectables/SetSporks.html":{}},"body":{"injectables/SetSporks.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["setus",{"_index":937,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(us",{"_index":940,"title":{},"body":{"injectables/UserService.html":{}}}],["shall",{"_index":1177,"title":{},"body":{"license.html":{}}}],["shim",{"_index":352,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["showcas",{"_index":1048,"title":{},"body":{"index.html":{}}}],["sitetitl",{"_index":303,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/TopnavComponent.html":{}}}],["softwar",{"_index":1158,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["speed",{"_index":1089,"title":{},"body":{"index.html":{}}}],["spoon",{"_index":1064,"title":{},"body":{"index.html":{}}}],["spork",{"_index":113,"title":{"classes/Spork.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["spork(pric",{"_index":798,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["spork.price.tostr",{"_index":826,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sporkact",{"_index":816,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sporkactions.setsporks(spork",{"_index":822,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sporkfactori",{"_index":781,"title":{"injectables/SporkFactory.html":{}},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporklistcompon",{"_index":112,"title":{"components/SporkListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sporkpayload",{"_index":787,"title":{"interfaces/SporkPayload.html":{}},"body":{"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporkpayload.imageuri",{"_index":797,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["sporkreduc",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["sporks.push",{"_index":793,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["sporkservic",{"_index":807,"title":{"injectables/SporkService.html":{}},"body":{"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporkspayload",{"_index":789,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/.../app.module.t",{"_index":1020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.config.t",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../spork.actions.t",{"_index":1211,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../spork.reducer.t",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.routing.module.t",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.state.t",{"_index":273,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{}}}],["src/app/auth/auth.module.t",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.module.t",{"_index":322,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/component/login/login.component.t",{"_index":563,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/login/login.component.ts:17",{"_index":575,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:28",{"_index":581,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:33",{"_index":580,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:42",{"_index":578,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:48",{"_index":577,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:53",{"_index":579,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/register/register.component.t",{"_index":679,"title":{},"body":{"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/register/register.component.ts:19",{"_index":687,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:29",{"_index":695,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:33",{"_index":696,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:44",{"_index":693,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:49",{"_index":690,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:57",{"_index":692,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:66",{"_index":694,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.t",{"_index":547,"title":{},"body":{"injectables/LoginFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:11",{"_index":553,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:8",{"_index":551,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.t",{"_index":670,"title":{},"body":{"injectables/RegisterFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:13",{"_index":671,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:16",{"_index":672,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/login.service.t",{"_index":613,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/auth/service/login.service.ts:17",{"_index":620,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:29",{"_index":621,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:36",{"_index":625,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:42",{"_index":623,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/register.service.t",{"_index":725,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{}}}],["src/app/auth/service/register.service.ts:14",{"_index":727,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:24",{"_index":728,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:31",{"_index":729,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/config/auth.config.t",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/component/lang",{"_index":463,"title":{},"body":{"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.t",{"_index":381,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/interface/service/log.service.abstract.t",{"_index":532,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:10",{"_index":542,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:13",{"_index":537,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:5",{"_index":535,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:6",{"_index":539,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:7",{"_index":540,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/model/payload/api",{"_index":5,"title":{},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/error",{"_index":422,"title":{},"body":{"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/jwt",{"_index":460,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/app/core/model/payload/login",{"_index":610,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["src/app/core/model/payload/us",{"_index":933,"title":{},"body":{"interfaces/UserPayload.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.t",{"_index":866,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:11",{"_index":872,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:25",{"_index":880,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:29",{"_index":882,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:33",{"_index":884,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:37",{"_index":886,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:5",{"_index":876,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:7",{"_index":877,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:9",{"_index":878,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/service/auth/logout.service.t",{"_index":642,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{}}}],["src/app/core/service/auth/logout.service.ts:17",{"_index":647,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:29",{"_index":649,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:36",{"_index":650,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:49",{"_index":648,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/error",{"_index":404,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.t",{"_index":892,"title":{},"body":{"injectables/UserFactory.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.ts:13",{"_index":897,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:16",{"_index":906,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:24",{"_index":901,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:28",{"_index":904,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:40",{"_index":908,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/guard/auth.guard.t",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:10",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:16",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/helper/d",{"_index":386,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["src/app/core/service/http/request",{"_index":735,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["src/app/core/service/interceptor/auth",{"_index":328,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["src/app/core/service/interceptor/json",{"_index":443,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["src/app/core/service/interceptor/log",{"_index":487,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.t",{"_index":846,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:16",{"_index":847,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:23",{"_index":848,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/log.service.t",{"_index":504,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/core/service/log.service.ts:13",{"_index":513,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:18",{"_index":516,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:23",{"_index":518,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:27",{"_index":520,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:7",{"_index":510,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/user.service.t",{"_index":934,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/service/user.service.ts:10",{"_index":942,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:12",{"_index":939,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:16",{"_index":941,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:20",{"_index":938,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/home/component/home/home.component.t",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/component/home/home.component.ts:11",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/home/home.component.ts:8",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/spork",{"_index":799,"title":{},"body":{"components/SporkListComponent.html":{},"coverage.html":{}}}],["src/app/home/home.module.t",{"_index":433,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routing.module.t",{"_index":439,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/home/model/payload/spork.payload.t",{"_index":829,"title":{},"body":{"interfaces/SporkPayload.html":{},"coverage.html":{}}}],["src/app/home/model/spork.model.t",{"_index":764,"title":{},"body":{"classes/Spork.html":{},"coverage.html":{}}}],["src/app/home/model/spork.model.ts:12",{"_index":775,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:16",{"_index":777,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:4",{"_index":773,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:5",{"_index":772,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/service/factory/spork.factory.t",{"_index":782,"title":{},"body":{"injectables/SporkFactory.html":{},"coverage.html":{}}}],["src/app/home/service/factory/spork.factory.ts:10",{"_index":785,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/factory/spork.factory.ts:13",{"_index":788,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/factory/spork.factory.ts:28",{"_index":791,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/spork.service.t",{"_index":831,"title":{},"body":{"injectables/SporkService.html":{},"coverage.html":{}}}],["src/app/home/service/spork.service.ts:15",{"_index":835,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:25",{"_index":836,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:32",{"_index":840,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:36",{"_index":838,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/state/action/spork.actions.t",{"_index":750,"title":{},"body":{"injectables/SetSporks.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/state/action/spork.actions.ts:12",{"_index":753,"title":{},"body":{"injectables/SetSporks.html":{}}}],["src/app/home/state/action/spork.actions.ts:14",{"_index":754,"title":{},"body":{"injectables/SetSporks.html":{}}}],["src/app/home/state/reducer/spork.reducer.t",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/layout/component/auth/auth.component.t",{"_index":291,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/auth/auth.component.ts:10",{"_index":297,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:16",{"_index":298,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:23",{"_index":299,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/back",{"_index":369,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.t",{"_index":414,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.ts:11",{"_index":419,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/error/error.component.ts:8",{"_index":418,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/main/main.component.t",{"_index":664,"title":{},"body":{"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/main/main.component.ts:11",{"_index":668,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["src/app/layout/component/main/main.component.ts:8",{"_index":667,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.t",{"_index":857,"title":{},"body":{"components/TopnavComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:10",{"_index":861,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:13",{"_index":863,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:15",{"_index":862,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/layout.module.t",{"_index":480,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/environments/environment.prod.t",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabil",{"_index":1090,"title":{},"body":{"index.html":{}}}],["stack",{"_index":1028,"title":{},"body":{"index.html":{}}}],["stage",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":849,"title":{"index.html":{},"license.html":{}},"body":{"interceptors/TimingInterceptor.html":{}}}],["state",{"_index":1025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state/action/spork.act",{"_index":817,"title":{},"body":{"components/SporkListComponent.html":{}}}],["statement",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":1050,"title":{},"body":{"index.html":{}}}],["store",{"_index":809,"title":{},"body":{"components/SporkListComponent.html":{},"index.html":{}}}],["storemodul",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["strength",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["strict",{"_index":1110,"title":{},"body":{"index.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["subject",{"_index":1172,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1168,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":590,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["substanti",{"_index":1178,"title":{},"body":{"license.html":{}}}],["success",{"_index":703,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["super",{"_index":524,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":1199,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1200,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":465,"title":{},"body":{"components/LangSwitchComponent.html":{},"index.html":{}}}],["switch'},{'nam",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["switch.compon",{"_index":384,"title":{},"body":{"modules/CoreModule.html":{}}}],["switch.component.html",{"_index":467,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.scss",{"_index":466,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.t",{"_index":464,"title":{},"body":{"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:12",{"_index":471,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.ts:14",{"_index":473,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.ts:9",{"_index":470,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch/lang",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{},"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["tabl",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":497,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((ev",{"_index":500,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["taptodismiss",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["templat",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["test",{"_index":1124,"title":{},"body":{"index.html":{}}}],["this._authservic",{"_index":636,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._authservice.isauthent",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._authservice.logout",{"_index":584,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{}}}],["this._authservice.removetoken",{"_index":658,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._completehandler.bind(thi",{"_index":663,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._configservice.getset",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["this._configur",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["this._configuretransl",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["this._datehelper.getdatefromutcstring(payload.lastlogin",{"_index":931,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this._email",{"_index":888,"title":{},"body":{"classes/User.html":{}}}],["this._errorhandler.bind(thi",{"_index":592,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["this._formbuilder.control",{"_index":676,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.control(nul",{"_index":558,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.group",{"_index":557,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formfactory.getform",{"_index":586,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._geturi",{"_index":842,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._http",{"_index":660,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._http.get(this._geturi).pipe(map(this._getresult.bind(thi",{"_index":844,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._http.post",{"_index":733,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._imageuri",{"_index":780,"title":{},"body":{"classes/Spork.html":{}}}],["this._injector.get",{"_index":363,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["this._injector.get(configservic",{"_index":745,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["this._jsonencodeverbs.includes(req.method.touppercas",{"_index":455,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["this._lastlogin",{"_index":889,"title":{},"body":{"classes/User.html":{}}}],["this._logger.devlog",{"_index":852,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["this._logger.devlog(error",{"_index":412,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.devlog(errorresponse.error",{"_index":704,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["this._logger.devlog(ev",{"_index":503,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["this._logger.devlog(req",{"_index":492,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["this._logger.devlog(result",{"_index":595,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._logger.devlog(us",{"_index":639,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logger.error(error",{"_index":413,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.updateloggeruri",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this._loginservic",{"_index":587,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._loginuri",{"_index":634,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logoutservice.logout",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{},"components/TopnavComponent.html":{}}}],["this._logouturi",{"_index":656,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._nam",{"_index":890,"title":{},"body":{"classes/User.html":{}}}],["this._ngxlogger.debug(messag",{"_index":525,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.error(messag",{"_index":526,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.getconfigsnapshot",{"_index":529,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.log(messag",{"_index":527,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.updateconfig(updatedconfig",{"_index":531,"title":{},"body":{"injectables/LogService.html":{}}}],["this._password",{"_index":891,"title":{},"body":{"classes/User.html":{}}}],["this._pric",{"_index":779,"title":{},"body":{"classes/Spork.html":{}}}],["this._registerservic",{"_index":700,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._registeruri",{"_index":731,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._requestinspector.isapirequest(req",{"_index":350,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["this._requestinspector.isconfigfilerequest(req",{"_index":491,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["this._router.navigate(['auth",{"_index":597,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["this._router.navigate(['hom",{"_index":594,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._sporkfactory.getfrompayload(resultpayload",{"_index":845,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._sporkservice.getsporks().subscribe((spork",{"_index":820,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._store.dispatch(new",{"_index":821,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._store.select('spork",{"_index":819,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._successhandler.bind(thi",{"_index":591,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._titleservice.settitle(sitetitl",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastr.error",{"_index":705,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._toastr.error('login",{"_index":596,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.error('ther",{"_index":823,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._toastr.success('log",{"_index":593,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.success('register",{"_index":702,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._translateservice.get('sitetitle').subscribe((sitetitl",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.setdefaultlang('en",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use('en",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use(lang",{"_index":474,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["this._userfactory.getfromformdata(this.form.valu",{"_index":699,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._userfactory.getfrompayload(result",{"_index":638,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._userfactory.getpayload(us",{"_index":734,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._userservice.clearus",{"_index":659,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._userservice.setuser(us",{"_index":640,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.form",{"_index":585,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this.form.value.password",{"_index":589,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.getspork",{"_index":794,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["this.getus",{"_index":927,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.getuser(formdata.email",{"_index":922,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.heroimageuri",{"_index":301,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["this.isconfigfilerequest(req",{"_index":744,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["this.spork",{"_index":818,"title":{},"body":{"components/SporkListComponent.html":{}}}],["thon",{"_index":1047,"title":{},"body":{"index.html":{}}}],["throw",{"_index":399,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["time",{"_index":1130,"title":{},"body":{"index.html":{}}}],["timinginterceptor",{"_index":137,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["titl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservic",{"_index":574,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["todo",{"_index":351,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["token",{"_index":364,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interfaces/LoginResult.html":{}}}],["token.interceptor.servic",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["token.interceptor.service.t",{"_index":329,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:13",{"_index":335,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:20",{"_index":340,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["took",{"_index":855,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["toolbox",{"_index":1049,"title":{},"body":{"index.html":{}}}],["topnav",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["topnav.component.html",{"_index":859,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav.component.scss",{"_index":858,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnavcompon",{"_index":115,"title":{"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tort",{"_index":1195,"title":{},"body":{"license.html":{}}}],["translat",{"_index":304,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["translate/cor",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["translatemodule.forroot",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["translatepip",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/LangSwitchComponent.html":{}}}],["tree",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["tri",{"_index":355,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["true",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:disable:no",{"_index":348,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:enable:no",{"_index":349,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["two",{"_index":1044,"title":{},"body":{"index.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1209,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":1111,"title":{},"body":{"index.html":{}}}],["ui",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["undefin",{"_index":1022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":1034,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1123,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["updatedconfig",{"_index":528,"title":{},"body":{"injectables/LogService.html":{}}}],["updatedconfig.serverloggingurl",{"_index":530,"title":{},"body":{"injectables/LogService.html":{}}}],["updateloggeruri",{"_index":507,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(apibaseuri",{"_index":541,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(logerroruri",{"_index":519,"title":{},"body":{"injectables/LogService.html":{}}}],["us",{"_index":1068,"title":{},"body":{"index.html":{},"license.html":{}}}],["usd",{"_index":796,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["useclass",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":630,"title":{"classes/User.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user(email",{"_index":932,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.email",{"_index":920,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.nam",{"_index":919,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.password",{"_index":921,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.servic",{"_index":655,"title":{},"body":{"injectables/LogoutService.html":{}}}],["userfactori",{"_index":617,"title":{"injectables/UserFactory.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["userpayload",{"_index":900,"title":{"interfaces/UserPayload.html":{}},"body":{"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["userservic",{"_index":619,"title":{"injectables/UserService.html":{}},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["utc",{"_index":402,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["utcdatestr",{"_index":391,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["valid",{"_index":555,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["validators.maxlength(255",{"_index":562,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["validators.requir",{"_index":560,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["valu",{"_index":450,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"injectables/SetSporks.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["variabl",{"_index":962,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{}}}],["warranti",{"_index":1180,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1193,"title":{},"body":{"license.html":{}}}],["winston",{"_index":1072,"title":{},"body":{"index.html":{}}}],["without",{"_index":1161,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":1015,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ye",{"_index":873,"title":{},"body":{"classes/User.html":{},"injectables/UserFactory.html":{}}}],["yyyi",{"_index":395,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["zone.j",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/api-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  readonly msg: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _configureTranslation\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_angulartics2GoogleTagManager: Angulartics2GoogleTagManager, _configService: ConfigService, _logger: LogServiceAbstract, _titleService: Title, _translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _angulartics2GoogleTagManager\n                                                  \n                                                        \n                                                                    Angulartics2GoogleTagManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configureTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configureTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ConfigService } from '@ngx-config/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private _angulartics2GoogleTagManager: Angulartics2GoogleTagManager,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _titleService: Title,\n    private _translateService: TranslateService\n  ) {\n    this._configureTranslation();\n  }\n\n  public ngOnInit(): void {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    this._translateService.get('siteTitle').subscribe((siteTitle: string) => {\n      this._titleService.setTitle(siteTitle);\n    });\n\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logger.updateLoggerUri(\n      `${config.core.apiBaseUri}${config.logging.logErrorUri}`\n    );\n  }\n\n  protected _configureTranslation(): void {\n    this._translateService.setDefaultLang('en');\n    this._translateService.use('en');\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthTokenInterceptor\n                            \n                            \n                                     JsonHeaderInterceptor\n                            \n                            \n                                     LogRequestInterceptor\n                            \n                            \n                                     LogResponseInterceptor\n                            \n                            \n                                     TimingInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport { ConfigLoader, ConfigModule, ConfigService } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { Ng2UiAuthModule } from 'ng2-ui-auth';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthConfig } from './config/auth.config';\nimport { CoreModule } from './core/core.module';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\nimport { ErrorHandlerService } from './core/service/error-handler.service';\nimport { AuthTokenInterceptor } from './core/service/interceptor/auth-token.interceptor.service';\nimport { JsonHeaderInterceptor } from './core/service/interceptor/json-header.interceptor.service';\nimport { LogRequestInterceptor } from './core/service/interceptor/log-request.interceptor.service';\nimport { LogResponseInterceptor } from './core/service/interceptor/log-response.interceptor.service';\nimport { TimingInterceptor } from './core/service/interceptor/timing.interceptor.service';\nimport { LogService } from './core/service/log.service';\nimport { reducer as sporkReducer } from './home/state/reducer/spork.reducer';\nimport { LayoutModule } from './layout/layout.module';\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  return new ConfigHttpLoader(http, './assets/config.json');\n}\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AppRoutingModule,\n    AuthModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient],\n    }),\n    CoreModule,\n    FormsModule,\n    HttpClientModule,\n    LayoutModule,\n    LoggerModule.forRoot({\n      level: environment.production ? NgxLoggerLevel.OFF : NgxLoggerLevel.TRACE,\n      serverLogLevel: NgxLoggerLevel.ERROR,\n    }),\n    MatPasswordStrengthModule.forRoot(),\n    Ng2UiAuthModule.forRoot(AuthConfig),\n    ReactiveFormsModule,\n    RouterModule,\n    StoreModule.forRoot({\n      spork: sporkReducer,\n    }),\n    ToastrModule.forRoot({\n      enableHtml: true,\n      disableTimeOut: true,\n      maxOpened: 2,\n      onActivateTick: true,\n      positionClass: 'toast-bottom-right',\n      tapToDismiss: true,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  declarations: [AppComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TimingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JsonHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogRequestInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n\n    {\n      provide: ErrorHandler,\n      useClass: ErrorHandlerService,\n    },\n\n    ConfigService,\n    TranslatePipe,\n\n    {\n      provide: LogServiceAbstract,\n      useClass: LogService,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { LoginPageComponent } from './auth/component/login/login.component';\nimport { RegisterPageComponent } from './auth/component/register/register.component';\nimport { AuthGuard } from './core/service/guard/auth.guard';\nimport { AuthLayoutComponent } from './layout/component/auth/auth.component';\nimport { ErrorPageComponent } from './layout/component/error/error.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: './auth/auth.module#AuthModule',\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/auth/login',\n  },\n  {\n    path: 'home',\n    canActivate: [AuthGuard],\n    loadChildren: './home/home.module#HomeModule',\n  },\n  {\n    path: '**',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: '**',\n        component: ErrorPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sporks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sporks\n                                    \n                                \n                                \n                                    \n                                        sporks:     Spork[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Spork[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Spork } from './home/model/spork.model';\n\nexport interface AppState {\n  readonly sporks: Spork[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/service/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_authService: AuthService, _logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/guard/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        canActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/guard/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\n\nimport { LogoutService } from '../auth/logout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  public constructor(\n    private _authService: AuthService,\n    private _logoutService: LogoutService\n  ) {}\n\n  public canActivate(): boolean {\n    if (this._authService.isAuthenticated()) {\n      return true;\n    }\n\n    this._logoutService.logout();\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n            \n                styleUrls\n                auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                heroImageUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heroImageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heroImageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthLayoutComponent implements OnInit {\n  public heroImageUri: string;\n\n  constructor(private _configService: ConfigService) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this.heroImageUri = `${config.auth.heroImageUri}`;\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      {{ 'siteTitle' | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'siteTitle\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAuthModule -->\n\nCoreModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginPageComponent\n                            \n                            \n                                RegisterPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { AuthRoutingModule } from './auth.routing.module';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\n@NgModule({\n  imports: [\n    AuthRoutingModule,\n    CommonModule,\n    CoreModule,\n    FormsModule,\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPasswordStrengthModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [LoginPageComponent, RegisterPageComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthLayoutComponent } from '../layout/component/auth/auth.component';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\nconst authRoutes: Routes = [\n  {\n    path: '',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginPageComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(authRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthTokenInterceptor.html":{"url":"interceptors/AuthTokenInterceptor.html","title":"interceptor - AuthTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/auth-token.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_injector: Injector, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable } from 'rxjs';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  public constructor(\n    private _injector: Injector,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (!this._requestInspector.isApiRequest(req)) {\n      // TODO this is a shim around the behavior of the AuthService, which tries to modify and inject this header\n      // tslint:disable-next-line:no-any\n      const cleanReq: HttpRequest = req.clone({\n        setHeaders: { Authorization: '' },\n      });\n\n      return next.handle(cleanReq);\n    }\n\n    const authService: AuthService = this._injector.get(\n      AuthService\n    );\n    const token: string = authService.getToken();\n    if (!token) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: { Authorization: token },\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackToLoginComponent.html":{"url":"components/BackToLoginComponent.html","title":"component - BackToLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BackToLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/back-to-login/back-to-login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-to-login\n            \n\n            \n                styleUrls\n                back-to-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./back-to-login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-back-to-login',\n  templateUrl: './back-to-login.component.html',\n  styleUrls: ['./back-to-login.component.scss'],\n})\nexport class BackToLoginComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      fast_rewind{{ 'nav.backToLogin' | translate }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              fast_rewind{{ \\'nav.backToLogin\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackToLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nLangSwitchComponent\n\nLangSwitchComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLangSwitchComponent->CoreModule\n\n\n\n\n\nLangSwitchComponent \n\nLangSwitchComponent \n\nLangSwitchComponent  -->\n\nCoreModule->LangSwitchComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LangSwitchComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LangSwitchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LangSwitchComponent } from './component/lang-switch/lang-switch.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LangSwitchComponent],\n  exports: [LangSwitchComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateHelperService.html":{"url":"injectables/DateHelperService.html","title":"injectable - DateHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DateHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/helper/date-helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDateFromUtcString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDateFromUtcString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDateFromUtcString(utcDateString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/helper/date-helper.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utcDateString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateHelperService {\n  public getDateFromUtcString(utcDateString: string): Date {\n    const date: Date = moment(utcDateString, 'YYYY-MM-DDTHH:mm:ssZa').toDate();\n\n    if (isNaN(date.getTime())) {\n      throw new Error(`Provided date string is not in expected UTC format`);\n    }\n\n    return date;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/error-handler.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-handler.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(private _logger: LogServiceAbstract) {}\n\n  // tslint:disable-next-line:no-any\n  handleError(error: any): void {\n    this._logger.devLog(error);\n    this._logger.error(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/error/error.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ 'nav.errorPage' | translate }}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'nav.errorPage\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorResponse.html":{"url":"interfaces/ErrorResponse.html","title":"interface - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/error-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errors\n                                \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorResponse {\n  readonly msg: string;\n  readonly errors: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/home/home.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSporkListComponent\n\nSporkListComponent\n\nHomeModule -->\n\nSporkListComponent->HomeModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                            \n                                SporkListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    HomeRoutingModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material';\n\nimport { CoreModule } from '../core/core.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { HomeComponent } from './component/home/home.component';\nimport { SporkListComponent } from './component/spork-list/spork-list.component';\nimport { HomeRoutingModule } from './home.routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    HomeRoutingModule,\n    LayoutModule,\n    MatCardModule,\n  ],\n  declarations: [HomeComponent, SporkListComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MainLayoutComponent } from '../layout/component/main/main.component';\nimport { HomeComponent } from './component/home/home.component';\n\nconst homeRoutes: Routes = [\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        component: HomeComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(homeRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JsonHeaderInterceptor.html":{"url":"interceptors/JsonHeaderInterceptor.html","title":"interceptor - JsonHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JsonHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/json-header.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonEncodeVerbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jsonEncodeVerbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _jsonEncodeVerbs:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['POST', 'PUT']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class JsonHeaderInterceptor implements HttpInterceptor {\n  private _jsonEncodeVerbs: string[] = ['POST', 'PUT'];\n\n  public constructor(\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (!this._requestInspector.isApiRequest(req)) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const headers: any = {\n      Accept: 'application/json',\n    };\n\n    if (this._jsonEncodeVerbs.includes(req.method.toUpperCase())) {\n      headers['Content-Type'] = 'application/json; charset=utf-8';\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: headers,\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/jwt-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  readonly email: string;\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LangSwitchComponent.html":{"url":"components/LangSwitchComponent.html","title":"component - LangSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LangSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/component/lang-switch/lang-switch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lang-switch\n            \n\n            \n                styleUrls\n                lang-switch.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./lang-switch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/component/lang-switch/lang-switch.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/component/lang-switch/lang-switch.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/component/lang-switch/lang-switch.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-lang-switch',\n  templateUrl: './lang-switch.component.html',\n  styleUrls: ['./lang-switch.component.scss'],\n})\nexport class LangSwitchComponent implements OnInit {\n  constructor(private _translateService: TranslateService) {}\n\n  public ngOnInit(): void {}\n\n  public setLang(lang: string): void {\n    this._translateService.use(lang);\n  }\n}\n\n    \n\n    \n        \n  en |\n  es\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  en |  es'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LangSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_imports\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nLayoutModule -->\n\nMainLayoutComponent->LayoutModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nLayoutModule -->\n\nTopnavComponent->LayoutModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthLayoutComponent\n                            \n                            \n                                BackToLoginComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                MainLayoutComponent\n                            \n                            \n                                TopnavComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule, MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { AuthLayoutComponent } from './component/auth/auth.component';\nimport { BackToLoginComponent } from './component/back-to-login/back-to-login.component';\nimport { ErrorPageComponent } from './component/error/error.component';\nimport { MainLayoutComponent } from './component/main/main.component';\nimport { TopnavComponent } from './component/topnav/topnav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatCardModule,\n    MatIconModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [\n    AuthLayoutComponent,\n    BackToLoginComponent,\n    ErrorPageComponent,\n    MainLayoutComponent,\n    TopnavComponent,\n  ],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class LayoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogRequestInterceptor.html":{"url":"interceptors/LogRequestInterceptor.html","title":"interceptor - LogRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-request.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogRequestInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    this._logger.devLog(req);\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogResponseInterceptor.html":{"url":"interceptors/LogResponseInterceptor.html","title":"interceptor - LogResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-response.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        this._logger.devLog(event);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/log.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxLogger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxLogger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateLoggerUri(logErrorUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logErrorUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerConfig, NGXLogger } from 'ngx-logger';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable()\nexport class LogService extends LogServiceAbstract {\n  constructor(private _ngxLogger: NGXLogger) {\n    super();\n  }\n\n  // tslint:disable-next-line:no-any\n  debug(message: any): void {\n    this._ngxLogger.debug(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  error(message: any): void {\n    this._ngxLogger.error(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  log(message: any): void {\n    this._ngxLogger.log(message);\n  }\n\n  updateLoggerUri(logErrorUri: string): void {\n    const updatedConfig: LoggerConfig = this._ngxLogger.getConfigSnapshot();\n    updatedConfig.serverLoggingUrl = logErrorUri;\n\n    this._ngxLogger.updateConfig(updatedConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogServiceAbstract.html":{"url":"classes/LogServiceAbstract.html","title":"class - LogServiceAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogServiceAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interface/service/log.service.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                devLog\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        devLog(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLoggerUri(apiBaseUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiBaseUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../../environments/environment';\n\nexport abstract class LogServiceAbstract {\n  // tslint:disable:no-any\n  public abstract debug(message: any): void;\n  public abstract error(message: any): void;\n  public abstract log(message: any): void;\n  // tslint:enable:no-any\n\n  public abstract updateLoggerUri(apiBaseUri: string): void;\n\n  // tslint:disable-next-line:no-any\n  public devLog(data: any): void {\n    if (environment.production) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginFormFactory.html":{"url":"injectables/LoginFormFactory.html","title":"injectable - LoginFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/login.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/login.form.factory.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/login.form.factory.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      password: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToSignUp\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _formFactory: LoginFormFactory, _loginService: LoginService, _logger: LogServiceAbstract, _router: Router, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    LoginFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _loginService\n                                                  \n                                                        \n                                                                    LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(result: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { LoginFormFactory } from '../../service/factory/form/login.form.factory';\nimport { LoginService } from '../../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(\n    private _authService: AuthService,\n    private _formFactory: LoginFormFactory,\n    private _loginService: LoginService,\n    private _logger: LogServiceAbstract,\n    private _router: Router,\n    private _toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this._authService.logout();\n    this.form = this._formFactory.getForm();\n  }\n\n  public login(): void {\n    this._loginService\n      .login(this.form.value.email, this.form.value.password)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Logged in...');\n    this._router.navigate(['home']);\n  }\n\n  // tslint:disable-next-line:no-any\n  protected _errorHandler(result: any): void {\n    this._logger.devLog(result);\n    this._toastr.error('Login error');\n  }\n\n  public goToSignUp(): void {\n    this._router.navigate(['auth', 'register']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.login.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.login.loginButton' | translate }}\n  \n\n\n  {{ 'pages.login.registerLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.login.title\\' | translate }}                                        close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                          {{ \\'pages.login.loginButton\\' | translate }}    {{ \\'pages.login.registerLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResult.html":{"url":"interfaces/LoginResult.html","title":"interface - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/login-result.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastLogin\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResult {\n  readonly token: string;\n  readonly lastLogin: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/login.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loginUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _setUser\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _logger: LogServiceAbstract, _userFactory: UserFactory, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _setUser(result: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loginUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _loginUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { LogServiceAbstract } from '../../core/interface/service/log.service.abstract';\nimport { LoginResult } from '../../core/model/payload/login-result.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\nimport { UserService } from '../../core/service/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private _loginUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _userFactory: UserFactory,\n    private _userService: UserService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._loginUri = `${config.core.apiBaseUri}${config.auth.loginUri}`;\n  }\n\n  public login(email: string, password: string): Observable {\n    return this._authService\n      .login({ email, password }, this._loginUri)\n      .pipe(map(this._setUser.bind(this)));\n  }\n\n  protected _setUser(result: LoginResult): Observable {\n    const user: User = this._userFactory.getFromPayload(result);\n    this._logger.devLog(user);\n    this._userService.setUser(user);\n\n    return of(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/auth/logout.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logoutUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _completeHandler\n                            \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _http: HttpClient, _router: Router, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _completeHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _completeHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _logoutUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _logoutUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/internal/operators';\nimport { ApiResponse } from '../../model/payload/api-response.model';\nimport { ErrorResponse } from '../../model/payload/error-response.model';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutService {\n  private _logoutUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logoutUri = `${config.core.apiBaseUri}${config.auth.logoutUri}`;\n  }\n\n  public logout(): void {\n    this._authService.logout();\n    this._authService.removeToken();\n    this._userService.clearUser();\n\n    this._http\n      .post(this._logoutUri, null)\n      .subscribe(\n        this._completeHandler.bind(this),\n        this._completeHandler.bind(this)\n      );\n  }\n\n  protected _completeHandler(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainLayoutComponent.html":{"url":"components/MainLayoutComponent.html","title":"component - MainLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-layout\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/main/main.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/main/main.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainLayoutComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterFormFactory.html":{"url":"injectables/RegisterFormFactory.html","title":"injectable - RegisterFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/register.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/register.form.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/register.form.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    const newPasswordControl: FormControl = this._formBuilder.control(null, [\n      Validators.required,\n      Validators.maxLength(255),\n    ]);\n\n    const confirmPasswordControl: FormControl = this._formBuilder.control(\n      null,\n      [Validators.required, CustomValidators.equalTo(newPasswordControl)]\n    );\n\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      name: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n      password: newPasswordControl,\n      confirmPassword: confirmPasswordControl,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPageComponent.html":{"url":"components/RegisterPageComponent.html","title":"component - RegisterPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _getErrorList\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_formFactory: RegisterFormFactory, _logger: LogServiceAbstract, _registerService: RegisterService, _router: Router, _toastr: ToastrService, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    RegisterFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _registerService\n                                                  \n                                                        \n                                                                    RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _getErrorList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getErrorList(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { User } from '../../../core/model/user.model';\nimport { UserFactory } from '../../../core/service/factory/user.factory';\nimport { RegisterFormFactory } from '../../service/factory/form/register.form.factory';\nimport { RegisterService } from '../../service/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterPageComponent implements OnInit {\n  public form: FormGroup;\n  constructor(\n    private _formFactory: RegisterFormFactory,\n    private _logger: LogServiceAbstract,\n    private _registerService: RegisterService,\n    private _router: Router,\n    private _toastr: ToastrService,\n    private _userFactory: UserFactory\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this._formFactory.getForm();\n  }\n\n  public register(): void {\n    const user: User = this._userFactory.getFromFormData(this.form.value);\n\n    this._registerService\n      .register(user)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Registeration successful!');\n    this._router.navigate(['auth', 'login']);\n  }\n\n  protected _errorHandler(errorResponse: HttpErrorResponse): void {\n    this._logger.devLog(errorResponse.error);\n\n    this._toastr.error(\n      `Registration error:${this._getErrorList(errorResponse)}`\n    );\n  }\n\n  protected _getErrorList(errorResponse: HttpErrorResponse): string {\n    let errorList: string = '';\n    Object.values(errorResponse.error).forEach((error: string) => {\n      errorList = `${errorList}${error}`;\n    });\n\n    return `${errorList}`;\n  }\n\n  public goToLogin(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.register.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Your name cannot be more than 255 characters - TODO lang\n        \n        \n          Name is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          {{ form.get('password').value?.length }} / 32\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n        \n        \n          Your password doesn't match the rules below yet - TODO lang\n          \n          \n        \n      \n      \n      \n\n      \n        \n        \n          close\n        \n        \n          Please confirm password - TODO lang\n        \n        \n          Passwords don't match - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.register.registerButton' | translate }}\n  \n\n\n  {{ 'pages.register.loginLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.register.title\\' | translate }}                                        close                          Your name cannot be more than 255 characters - TODO lang                          Name is required - TODO lang                                              close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          {{ form.get(\\'password\\').value?.length }} / 32                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                                  Your password doesn\\'t match the rules below yet - TODO lang                                                                              close                          Please confirm password - TODO lang                          Passwords don\\'t match - TODO lang                          {{ \\'pages.register.registerButton\\' | translate }}    {{ \\'pages.register.loginLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/register.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _http: HttpClient, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _registerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _registerUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiResponse } from '../../core/model/payload/api-response.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterService {\n  private _registerUri: string;\n\n  constructor(\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _userFactory: UserFactory\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._registerUri = `${config.core.apiBaseUri}${config.auth.registerUri}`;\n  }\n\n  public register(user: User): Observable {\n    return this._http.post(\n      this._registerUri,\n      this._userFactory.getPayload(user)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInspectorService.html":{"url":"injectables/RequestInspectorService.html","title":"injectable - RequestInspectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestInspectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/http/request-inspector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isApiRequest\n                            \n                            \n                                    Public\n                                isConfigFileRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/http/request-inspector.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isApiRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isApiRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/http/request-inspector.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isConfigFileRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isConfigFileRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/http/request-inspector.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\n\n@Injectable({ providedIn: 'root' })\nexport class RequestInspectorService {\n  constructor(\n    private _injector: Injector,\n  ) {}\n\n  // tslint:disable-next-line:no-any\n  public isApiRequest(req: HttpRequest): boolean {\n    if (this.isConfigFileRequest(req)) {\n      return false;\n    }\n\n    const configService: ConfigService = this._injector.get(ConfigService);\n\n    if (!configService) {\n      return false;\n    }\n\n    return req.url.indexOf(configService.getSettings().core.apiBaseUri) !== -1;\n  }\n\n  // tslint:disable-next-line:no-any\n  public isConfigFileRequest(req: HttpRequest): boolean {\n    return req.url.endsWith('/assets/config.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetSporks.html":{"url":"injectables/SetSporks.html","title":"injectable - SetSporks","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SetSporks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/state/action/spork.actions.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Spork[])\n                    \n                \n                        \n                            \n                                Defined in src/app/home/state/action/spork.actions.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Spork[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Spork[]\n\n                    \n                \n                    \n                        \n                            Type :     Spork[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/state/action/spork.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SET_SPORKS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/state/action/spork.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action } from '@ngrx/store';\n\nimport { Spork } from '../../model/spork.model';\n\n// tslint:disable-next-line:naming-convention\nexport const SET_SPORKS: string = '[SPORK] SetCollection';\n\n@Injectable()\nexport class SetSporks implements Action {\n  // tslint:disable-next-line:no-reserved-keywords\n  readonly type: string = SET_SPORKS;\n\n  constructor(public payload: Spork[]) {}\n}\n\nexport type Actions = SetSporks;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Spork.html":{"url":"classes/Spork.html","title":"class - Spork","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Spork\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/model/spork.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _imageUri\n                            \n                            \n                                    Private\n                                    Readonly\n                                _price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    price\n                                \n                                \n                                    imageUri\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(price: Money, imageUri: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/model/spork.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        price\n                                                  \n                                                        \n                                                                    Money\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageUri\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _imageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _imageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/model/spork.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _price\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _price:     Money\n\n                    \n                \n                    \n                        \n                            Type :     Money\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/model/spork.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        price\n                    \n                \n\n                \n                    \n                        getprice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/home/model/spork.model.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imageUri\n                    \n                \n\n                \n                    \n                        getimageUri()\n                    \n                \n                            \n                                \n                                    Defined in src/app/home/model/spork.model.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as Money from 'js-money';\n\nexport class Spork {\n  private readonly _price: Money;\n  private readonly _imageUri: string;\n\n  constructor(price: Money, imageUri: string) {\n    this._price = price;\n    this._imageUri = imageUri;\n  }\n\n  get price(): Money {\n    return this._price;\n  }\n\n  get imageUri(): string {\n    return this._imageUri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SporkFactory.html":{"url":"injectables/SporkFactory.html","title":"injectable - SporkFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SporkFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/service/factory/spork.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getSpork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/service/factory/spork.factory.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(sporksPayload: SporkPayload[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/factory/spork.factory.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sporksPayload\n                                                        \n                                                                    SporkPayload[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSpork\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSpork(price: Money, imageUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/factory/spork.factory.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        price\n                                                        \n                                                                    Money\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        imageUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as Money from 'js-money';\n\nimport { SporkPayload } from '../../model/payload/spork.payload';\nimport { Spork } from '../../model/spork.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SporkFactory {\n  constructor() {}\n\n  public getFromPayload(sporksPayload: SporkPayload[]): Spork[] {\n    const sporks: Spork[] = [];\n\n    for (const sporkPayload of sporksPayload) {\n      sporks.push(\n        this.getSpork(\n          Money.fromDecimal(sporkPayload.price, 'USD'),\n          sporkPayload.imageUri\n        )\n      );\n    }\n\n    return sporks;\n  }\n\n  public getSpork(price: Money, imageUri: string): Spork {\n    return new Spork(price, imageUri);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SporkListComponent.html":{"url":"components/SporkListComponent.html","title":"component - SporkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SporkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/spork-list/spork-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spork-list\n            \n\n            \n                styleUrls\n                spork-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spork-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sporks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract, _sporkService: SporkService, _toastr: ToastrService, _store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/spork-list/spork-list.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sporkService\n                                                  \n                                                        \n                                                                    SporkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sporks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sporks:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\n\nimport { AppState } from '../../../app.state';\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { Spork } from '../../model/spork.model';\nimport { SporkService } from '../../service/spork.service';\nimport * as SporkActions from '../../state/action/spork.actions';\n\n@Component({\n  selector: 'app-spork-list',\n  templateUrl: './spork-list.component.html',\n  styleUrls: ['./spork-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SporkListComponent implements OnInit {\n  public sporks: Observable;\n\n  constructor(\n    private _logger: LogServiceAbstract,\n    private _sporkService: SporkService,\n    private _toastr: ToastrService,\n    private _store: Store\n  ) {}\n\n  public ngOnInit(): void {\n    this.sporks = this._store.select('spork');\n    this._sporkService.getSporks().subscribe((sporks: Spork[]) => {\n      this._store.dispatch(new SporkActions.SetSporks(sporks));\n    }, this._errorHandler.bind(this));\n  }\n\n  protected _errorHandler(errorResponse: HttpErrorResponse): void {\n    this._logger.devLog(errorResponse.error);\n    this._toastr.error('There was a problem retrieving the sporks.');\n  }\n}\n\n    \n\n    \n        \n  \n    \n    ${{ spork.price.toString() | number:'.2-2' }}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ${{ spork.price.toString() | number:\\'.2-2\\' }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SporkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SporkPayload.html":{"url":"interfaces/SporkPayload.html","title":"interface - SporkPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SporkPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/model/payload/spork.payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        imageUri\n                                \n                                \n                                        price\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageUri\n                                    \n                                \n                                \n                                    \n                                        imageUri:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SporkPayload {\n  readonly imageUri: string;\n  readonly price: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SporkService.html":{"url":"injectables/SporkService.html","title":"injectable - SporkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SporkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/service/spork.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _getResult\n                            \n                            \n                                    Public\n                                getSporks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _http: HttpClient, _sporkFactory: SporkFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/service/spork.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sporkFactory\n                                                  \n                                                        \n                                                                    SporkFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _getResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getResult(resultPayload: SporkPayload[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resultPayload\n                                                        \n                                                                    SporkPayload[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSporks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSporks()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _getUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { SporkPayload } from '../model/payload/spork.payload';\nimport { Spork } from '../model/spork.model';\nimport { SporkFactory } from './factory/spork.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SporkService {\n  private _getUri: string;\n\n  constructor(\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _sporkFactory: SporkFactory\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._getUri = `${config.core.apiBaseUri}${config.spork.getUri}`;\n  }\n\n  public getSporks(): Observable {\n    return this._http.get(this._getUri).pipe(map(this._getResult.bind(this)));\n  }\n\n  protected _getResult(resultPayload: SporkPayload[]): Spork[] {\n    return this._sporkFactory.getFromPayload(resultPayload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/timing.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    const started: number = Date.now();\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return event;\n        }\n\n        const elapsed: number = Date.now() - started;\n        this._logger.devLog(\n          `Request for ${req.urlWithParams} took ${elapsed} ms.`\n        );\n\n        return event;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopnavComponent.html":{"url":"components/TopnavComponent.html","title":"component - TopnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/topnav/topnav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topnav\n            \n\n            \n                styleUrls\n                topnav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topnav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/topnav/topnav.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/topnav/topnav.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/topnav/topnav.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { LogoutService } from '../../../core/service/auth/logout.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.scss'],\n})\nexport class TopnavComponent implements OnInit {\n  constructor(private _logoutService: LogoutService) {}\n\n  public ngOnInit(): void {}\n\n  public logout(): void {\n    this._logoutService.logout();\n  }\n}\n\n    \n\n    \n        \n  {{ 'siteTitle' | translate }}\n  \n  \n    menu\n  \n\n  \n    \n      \n        Logout\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'siteTitle\\' | translate }}        menu                      Logout            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _email\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _lastLogin\n                            \n                            \n                                    Private\n                                    Readonly\n                                _name\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    lastLogin\n                                \n                                \n                                    name\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, name: string, lastLogin?: Date, password?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastLogin\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _lastLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _lastLogin:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastLogin\n                    \n                \n\n                \n                    \n                        getlastLogin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { autoserialize } from 'cerialize';\n\nexport class User {\n  @autoserialize\n  private readonly _email: string;\n  @autoserialize\n  private readonly _lastLogin?: Date;\n  @autoserialize\n  private readonly _name: string;\n  @autoserialize\n  private readonly _password?: string;\n\n  constructor(\n    email: string,\n    name: string,\n    lastLogin?: Date,\n    password?: string\n  ) {\n    this._email = email;\n    this._lastLogin = lastLogin;\n    this._name = name;\n    this._password = password;\n  }\n\n  get email(): string {\n    return this._email;\n  }\n\n  get lastLogin(): Date {\n    return this._lastLogin;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get password(): string {\n    return this._password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFactory.html":{"url":"injectables/UserFactory.html","title":"injectable - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/factory/user.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromFormData\n                            \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getPayload\n                            \n                            \n                                    Public\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dateHelper: DateHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/factory/user.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dateHelper\n                                                  \n                                                        \n                                                                    DateHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromFormData(formData: UserPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formData\n                                                        \n                                                                    UserPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(payload: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPayload(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     UserPayload\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser(email: string, name: string, lastLogin: Date, password?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastLogin\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as jwtDecode from 'jwt-decode';\n\nimport { JwtPayload } from '../../model/payload/jwt-payload.model';\nimport { LoginResult } from '../../model/payload/login-result.model';\nimport { UserPayload } from '../../model/payload/user-payload.model';\nimport { User } from '../../model/user.model';\nimport { DateHelperService } from '../helper/date-helper.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFactory {\n  constructor(private _dateHelper: DateHelperService) {}\n\n  public getPayload(user: User): UserPayload {\n    return {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n    };\n  }\n\n  public getFromFormData(formData: UserPayload): User {\n    return this.getUser(formData.email, formData.name, null, formData.password);\n  }\n\n  public getFromPayload(payload: LoginResult): User {\n    const decodedToken: JwtPayload = jwtDecode(payload.token);\n\n    return this.getUser(\n      decodedToken.email,\n      decodedToken.name,\n      payload.lastLogin\n        ? this._dateHelper.getDateFromUtcString(payload.lastLogin)\n        : null\n    );\n  }\n\n  public getUser(\n    email: string,\n    name: string,\n    lastLogin: Date,\n    password?: string\n  ): User {\n    return new User(email, name, lastLogin, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/user-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPayload {\n  readonly name: string;\n  readonly email: string;\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _key\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Deserialize, Serialize } from 'cerialize';\n\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private _key: string = 'user';\n\n  public getUser(): User {\n    return Deserialize(sessionStorage.getItem(this._key));\n  }\n\n  public setUser(user: User): void {\n    sessionStorage.setItem(this._key, JSON.stringify(Serialize(user)));\n  }\n\n  public clearUser(): void {\n    sessionStorage.removeItem(this._key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                configFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.state.ts\n            \n            \n                interface\n            \n            \n                AppState\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/component/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginPageComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/component/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterPageComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/login.form.factory.ts\n            \n            \n                injectable\n            \n            \n                LoginFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/register.form.factory.ts\n            \n            \n                injectable\n            \n            \n                RegisterFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/login.service.ts\n            \n            \n                injectable\n            \n            \n                LoginService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/service/register.service.ts\n            \n            \n                injectable\n            \n            \n                RegisterService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                AuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/component/lang-switch/lang-switch.component.ts\n            \n            \n                component\n            \n            \n                LangSwitchComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interface/service/log.service.abstract.ts\n            \n            \n                class\n            \n            \n                LogServiceAbstract\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/api-response.model.ts\n            \n            \n                interface\n            \n            \n                ApiResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/error-response.model.ts\n            \n            \n                interface\n            \n            \n                ErrorResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/jwt-payload.model.ts\n            \n            \n                interface\n            \n            \n                JwtPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/login-result.model.ts\n            \n            \n                interface\n            \n            \n                LoginResult\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/user-payload.model.ts\n            \n            \n                interface\n            \n            \n                UserPayload\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/auth/logout.service.ts\n            \n            \n                injectable\n            \n            \n                LogoutService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/service/factory/user.factory.ts\n            \n            \n                injectable\n            \n            \n                UserFactory\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/helper/date-helper.service.ts\n            \n            \n                injectable\n            \n            \n                DateHelperService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/http/request-inspector.service.ts\n            \n            \n                injectable\n            \n            \n                RequestInspectorService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/service/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/component/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/component/spork-list/spork-list.component.ts\n            \n            \n                component\n            \n            \n                SporkListComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/model/payload/spork.payload.ts\n            \n            \n                interface\n            \n            \n                SporkPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/model/spork.model.ts\n            \n            \n                class\n            \n            \n                Spork\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/service/factory/spork.factory.ts\n            \n            \n                injectable\n            \n            \n                SporkFactory\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/service/spork.service.ts\n            \n            \n                injectable\n            \n            \n                SporkService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/home/state/action/spork.actions.ts\n            \n            \n                injectable\n            \n            \n                SetSporks\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/state/action/spork.actions.ts\n            \n            \n                variable\n            \n            \n                SET_SPORKS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/state/reducer/spork.reducer.ts\n            \n            \n                function\n            \n            \n                reducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/component/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthLayoutComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/component/back-to-login/back-to-login.component.ts\n            \n            \n                component\n            \n            \n                BackToLoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainLayoutComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/topnav/topnav.component.ts\n            \n            \n                component\n            \n            \n                TopnavComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-extensions/password-strength : ^3.2.0\n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngx-config/core : ^6.0.0\n        \n            @ngx-config/http-loader : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            add : ^2.0.6\n        \n            angular2-recaptcha : ^1.1.0\n        \n            angulartics2 : ^6.3.0\n        \n            bootstrap : ^4.1.3\n        \n            cerialize : ^0.1.18\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-money : ^0.6.3\n        \n            jwt-decode : ^2.2.0\n        \n            lint-staged : ^7.3.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.22.2\n        \n            ng2-ui-auth : ^9.0.0\n        \n            ng2-validation : ^4.2.0\n        \n            ngx-logger : ^3.3.2\n        \n            ngx-toastr : ^9.1.0\n        \n            popper.js : ^1.14.4\n        \n            rxjs : ~6.2.0\n        \n            yarn : ^1.10.1\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            reducer   (src/.../spork.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/home/state/reducer/spork.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 6 Full-Stack Demo\nIn this project I am demonstrating my current patterns and understanding in the\nMEAN stack composed of Angular 6, Angular Material, Bootstrap 4, FontAwesome5, express,\nand MongoDB.  Deployment is CI/CD to AWS.\nThis is a two-day hack-a-thon to showcase my day-to-day toolbox, so still a lot to be done!\nThe live demo is available at https://angular6-demo.s3.amazonaws.com/index.html\nBackend\nIn this application, an express REST API backed by MongoDB exposes a store\nselling sporks (It's a spoon and fork combined!).\nPassport and JWT are used for authentication against MongoDB and call authentication.\nWinston logs error data to Elastic Beanstalk.\nTODO is JWT blacklisting and logout since Redis is not in the stack\nFrontend\nAn Angular Material front-end presents the customer with authentication functionality and a collection of sporks.\n(I haven't gotten to the cart and checkout yet)\n@ngrx/store and ChangeDetectionStrategy.OnPush are employed to provide maximum speed and stability\nngx-translate and ngx-config/http-loader provide runtime translation switching and configuration.\njs-money protects against arithmetic errors in price calculation.\nngx-logger feeds errors and events to an API endpoint, where winston feeds them to the Elastic Beanstalk logs\nangulartics2 feeds data to Google Analytics.  Compodoc provides documentation.\nOutdatedBrowser is used to redirect users of old browsers.\nPipeline\nCode is deployed CI/CD using AWS CodePipline/CodeBuild.\nThe backend is deployed to an nginx EC2 using Elastic Beanstalk, and the frontend\nis exposed in an S3 bucket.\nStrict linting of TypeScript, SCSS, JSON and HTML on the front-end\nand ES6 in the backend enforce quality measures at pre-commit and in the pipeline.\nno-any, max-file-line-count, and immutability are enforced.\nUnit test coverage is at 87% lines, mostly in the core and auth modules.\nNOTE: There is no effort made at this time to implement a config.json builder;\nruntime config.json is committed to the repository\nNOTE: e2e tests are disabled because of issues getting ChromeDriver to run in CI\nInstructions for Use\n** Please note that this project uses yarn and that package-lock.json is in\nthe .gitignore **\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Pete Burkindine\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAuthModule -->\n\nCoreModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\nLangSwitchComponent \n\nLangSwitchComponent \n\nLangSwitchComponent  -->\n\nCoreModule->LangSwitchComponent \n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nLangSwitchComponent\n\nLangSwitchComponent\n\nCoreModule -->\n\nLangSwitchComponent->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSporkListComponent\n\nSporkListComponent\n\nHomeModule -->\n\nSporkListComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nLayoutModule -->\n\nMainLayoutComponent->LayoutModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nLayoutModule -->\n\nTopnavComponent->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Actions   (src/.../spork.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/state/action/spork.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     SetSporks\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthConfig   (src/.../auth.config.ts)\n                        \n                        \n                            config   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            SET_SPORKS   (src/.../spork.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/config/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthConfig:     ɵa\n\n                    \n                \n                    \n                        \n                            Type :     ɵa\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: config.core.apiBaseUri,\n  loginUrl: `${config.core.apiBaseUri}/auth/login`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : require('../../assets/config.json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/state/action/spork.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SET_SPORKS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SET_SPORKS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[SPORK] SetCollection'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
