var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiResponse.html",[0,1.393,1,2.38]],["body/interfaces/ApiResponse.html",[0,2.424,1,4.14,2,0.27,3,0.27,4,0.179,5,4.632,6,4.133,7,0.435,8,1.992,9,6.135,10,1.599,11,0.62,12,0.018,13,0.239,14,2.819,15,0.016,16,0.016]],["title/components/AppComponent.html",[17,0.742,18,1.325]],["body/components/AppComponent.html",[2,0.139,3,0.139,4,0.092,7,0.224,10,0.644,11,0.319,12,0.019,13,0.123,15,0.01,16,0.01,17,1.165,18,1.948,19,1.221,20,1.221,21,1.221,22,2.386,23,1.215,24,2.163,25,1.221,26,3.076,27,3.076,28,1.551,29,1.814,30,4.121,31,1.814,32,4.121,33,0.672,34,2.833,35,3.248,36,5.441,37,0.985,38,2.394,39,0.746,40,2.775,41,4.677,42,2.934,43,3.034,44,2.422,45,2.048,46,4.916,47,5.441,48,4.226,49,4.677,50,0.795,51,2.775,52,0.477,53,0.602,54,0.477,55,4.121,56,2.775,57,0.679,58,1.796,59,2.775,60,2.775,61,0.531,62,0.28,63,2.129,64,1.784,65,1.405,66,1.452,67,1.657,68,2.386,69,1.657,70,0.155,71,1.981,72,2.775,73,1.657,74,2.775,75,2.775,76,0.676,77,0.644,78,0.676,79,0.859,80,1.367,81,1.657,82,2.775,83,2.775,84,2.775,85,2.775,86,0.901,87,1.719,88,1.814,89,1.814,90,2.394,91,1.221,92,1.221,93,0.901,94,0.859,95,1.814,96,0.994,97,1.158,98,1.814,99,0.946,100,0.946,101,1.221,102,0.946,103,1.221,104,0.994,105,1.221,106,1.221,107,0.901,108,0.946,109,1.221,110,0.901,111,1.221,112,0.994,113,0.901,114,1.221,115,0.994,116,1.221,117,1.221]],["title/modules/AppModule.html",[118,1.092,119,2.584]],["body/modules/AppModule.html",[2,0.1,3,0.1,4,0.067,12,0.019,13,0.203,15,0.008,16,0.008,18,2.292,41,1.719,43,1.785,45,1.204,57,0.442,61,0.64,62,0.202,63,2.455,64,1.286,65,1.818,66,1.046,67,1.194,68,1.719,69,1.194,70,0.179,76,0.487,77,0.464,78,0.487,86,0.649,94,0.619,118,0.944,119,4.987,120,1.046,121,2.388,122,2.093,123,3.349,124,1.719,125,1.719,126,1.719,127,1.719,128,1.719,129,3.429,130,3.429,131,2.791,132,2.974,133,3.724,134,3.724,135,3.724,136,3.724,137,3.724,138,1.91,139,1.194,140,1.115,141,1.534,142,1.719,143,1.396,144,1.396,145,1.534,146,1.534,147,5.335,148,3.491,149,3.201,150,0.834,151,2.751,152,1.674,153,2.751,154,2.751,155,1.115,156,3.201,157,3.201,158,2,159,1.91,160,0.88,161,4.001,162,2,163,2,164,1.719,165,3.439,166,3.201,167,1.534,168,3.201,169,3.201,170,1.719,171,2,172,1.534,173,2,174,0.985,175,1.115,176,2,177,2,178,1.396,179,2,180,1.194,181,1.396,182,1.719,183,2,184,2,185,2,186,1.534,187,2,188,1.396,189,2.234,190,2,191,2,192,2,193,2,194,2,195,2,196,3.201,197,2,198,2,199,2,200,2.234,201,2,202,1.534,203,2.057,204,1.719,205,2.057,206,2,207,2,208,1.719,209,2,210,2,211,1.719,212,2,213,2,214,3.201,215,1.534,216,3.201,217,2,218,2,219,1.719,220,2,221,2,222,2,223,2,224,2,225,2,226,2,227,2,228,4.604,229,2,230,2,231,1.719,232,2,233,2,234,2,235,2,236,1.719,237,2,238,2,239,1.534,240,5.601,241,5.001,242,1.046]],["title/modules/AppRoutingModule.html",[118,1.092,129,2.38]],["body/modules/AppRoutingModule.html",[2,0.202,3,0.202,4,0.134,12,0.019,13,0.238,15,0.013,16,0.013,17,1.076,61,0.622,62,0.407,70,0.3,76,0.984,77,0.938,78,0.984,79,1.25,93,1.743,94,1.25,99,1.83,107,1.311,110,1.311,118,1.191,129,3.451,152,2.809,159,3.205,160,1.778,242,2.113,243,4.039,244,5.369,245,3.205,246,4.039,247,4.039,248,4.118,249,4.039,250,3.472,251,4.039,252,4.039,253,5.132,254,5.369,255,4.039,256,3.472,257,3.099,258,4.039,259,4.039,260,3.472,261,3.472,262,4.039,263,3.099,264,4.039,265,4.039]],["title/guards/AuthGuard.html",[248,2.84,266,2.84]],["body/guards/AuthGuard.html",[2,0.213,3,0.213,4,0.141,7,0.342,11,0.489,12,0.019,13,0.188,15,0.013,16,0.013,23,1.252,28,1.597,33,0.904,37,1.362,39,1.004,50,0.81,52,0.73,53,0.52,54,0.73,57,0.853,61,0.572,62,0.428,70,0.238,71,1.89,94,1.313,160,1.868,174,2.091,175,2.366,228,3.256,248,4.255,261,5.994,266,3.256,267,4.244,268,2.962,269,4.212,270,5.311,271,4.212,272,4.244,273,3.872,274,4.244,275,4.768,276,0.766,277,4.244,278,1.681,279,4.244,280,3.648,281,3.648]],["title/components/AuthLayoutComponent.html",[17,0.742,93,1.202]],["body/components/AuthLayoutComponent.html",[2,0.156,3,0.156,4,0.103,7,0.25,8,1.384,10,1.217,11,0.515,12,0.019,13,0.138,15,0.011,16,0.011,17,1.219,18,1.111,19,1.366,20,1.366,21,1.366,23,1.319,24,2.307,25,1.366,26,3.14,27,3.14,29,1.968,31,1.968,33,0.729,34,2.438,35,3.425,37,1.051,38,2.525,39,0.562,42,2.67,43,3.199,50,0.838,52,0.533,53,0.643,54,0.533,57,0.617,58,1.692,61,0.39,62,0.313,65,1.058,66,1.624,70,0.174,73,1.852,76,0.756,77,0.72,78,0.756,79,0.96,80,1.529,81,1.852,86,1.007,87,1.866,88,1.968,89,1.968,90,2.525,91,1.366,92,1.366,93,1.863,94,1.622,95,1.968,96,1.111,97,1.295,98,1.968,99,1.058,100,1.058,101,1.366,102,1.058,103,1.366,104,1.111,105,1.366,106,1.366,107,1.007,108,1.058,109,1.366,110,1.007,111,1.366,112,1.111,113,1.007,114,1.366,115,1.111,116,1.366,117,1.366,282,2.668,283,3.844,284,4.472,285,4.472,286,5.738,287,2.381,288,4.472,289,3.103,290,3.103,291,1.529,292,3.103,293,3.103,294,3.844,295,2.494]],["title/modules/AuthModule.html",[118,1.092,130,2.38]],["body/modules/AuthModule.html",[2,0.174,3,0.174,4,0.116,12,0.019,13,0.215,15,0.012,16,0.012,61,0.639,62,0.35,65,1.184,67,2.073,70,0.271,76,0.846,77,0.806,78,0.846,86,1.128,107,2.134,110,2.134,118,1.429,120,1.817,121,3.33,122,1.817,123,1.817,130,4.706,131,3.439,132,3.665,138,2.892,139,2.073,140,1.937,142,4.164,143,2.425,144,2.425,145,2.665,146,2.665,152,2.534,153,4.164,154,4.164,155,1.937,159,2.892,160,1.529,167,3.716,188,2.425,202,2.665,242,1.817,296,2.986,297,2.986,298,2.986,299,4.226,300,3.474,301,3.381,302,2.233,303,4.845,304,3.716,305,4.845,306,4.164,307,4.845,308,4.845,309,2.425,310,3.474,311,2.986,312,2.986]],["title/modules/AuthRoutingModule.html",[118,1.092,299,2.38]],["body/modules/AuthRoutingModule.html",[2,0.225,3,0.225,4,0.149,12,0.019,13,0.255,15,0.014,16,0.014,17,1.271,61,0.618,62,0.452,70,0.322,76,1.093,77,1.041,78,1.093,79,1.388,93,1.866,107,1.866,110,1.866,118,1.323,152,3.008,159,3.432,160,1.974,242,2.347,245,3.432,250,3.856,253,4.867,263,3.441,299,3.696,311,3.856,312,3.856,313,4.486,314,4.486,315,2.678,316,3.131,317,4.486]],["title/interceptors/AuthTokenInterceptor.html",[133,2.584,318,1.722]],["body/interceptors/AuthTokenInterceptor.html",[2,0.188,3,0.188,4,0.125,7,0.302,10,0.869,11,0.587,12,0.019,13,0.166,15,0.012,16,0.012,23,1.105,33,0.832,37,1.307,39,0.678,50,0.746,52,0.877,53,0.625,54,0.877,57,0.801,61,0.544,62,0.378,70,0.21,76,0.912,77,1.447,78,0.912,79,1.795,94,1.159,133,3.562,150,1.562,174,1.845,175,2.088,269,4.006,276,0.704,291,1.845,318,1.742,319,5.804,320,3.746,321,3.731,322,3.746,323,6.232,324,3.746,325,5.103,326,2.408,327,3.892,328,4.006,329,3.746,330,3.046,331,2.859,332,2.408,333,3.28,334,1.742,335,2.236,336,2.236,337,3.746,338,4.989,339,3.746,340,2.614,341,3.22,342,3.22,343,3.22,344,3.22,345,3.22]],["title/components/BackToLoginComponent.html",[17,0.742,96,1.325]],["body/components/BackToLoginComponent.html",[2,0.175,3,0.175,4,0.116,7,0.281,12,0.018,13,0.155,15,0.012,16,0.012,17,1.273,18,1.247,19,1.533,20,1.533,21,1.533,23,1.431,24,2.458,25,1.533,26,3.202,27,3.202,29,2.136,31,2.136,33,0.791,37,1.119,38,2.659,39,1.011,50,0.709,53,0.595,57,0.481,58,1.431,61,0.304,62,0.351,70,0.195,86,1.131,87,2.024,88,2.136,89,2.136,90,2.659,91,1.533,92,1.533,93,1.131,94,1.077,95,2.136,96,2.163,97,2.816,98,2.136,99,1.187,100,1.187,101,1.533,102,1.187,103,1.533,104,1.247,105,1.533,106,1.533,107,1.131,108,1.187,109,1.533,110,1.131,111,1.533,112,1.247,113,1.131,114,1.533,115,1.247,116,1.533,117,1.533,295,2.706,315,2.897,346,4.802,347,4.285,348,2.994,349,4.172,350,4.172,351,3.483,352,3.483,353,4.853,354,4.853]],["title/modules/CoreModule.html",[118,1.092,131,1.937]],["body/modules/CoreModule.html",[2,0.226,3,0.226,4,0.15,12,0.018,13,0.298,15,0.014,16,0.014,61,0.585,62,0.455,70,0.323,76,1.1,77,1.048,78,1.1,86,1.466,104,2.692,118,1.703,120,2.363,121,3.799,122,2.363,123,2.363,131,3.771,138,3.446,139,2.696,140,2.518,152,3.021,242,2.363,301,4.03,302,2.903,355,3.882,356,3.882,357,3.882,358,4.516,359,4.516,360,3.464,361,4.516]],["title/injectables/DateHelperService.html",[276,0.511,362,2.584]],["body/injectables/DateHelperService.html",[2,0.226,3,0.226,4,0.15,7,0.363,10,1.555,11,0.518,12,0.018,13,0.2,15,0.014,16,0.014,28,1.694,33,0.939,37,1.273,50,0.658,52,0.774,53,0.552,54,0.774,57,0.795,61,0.503,62,0.454,70,0.252,79,1.392,205,2.893,276,0.877,278,1.782,362,4.021,363,4.952,364,3.869,365,5.761,366,5.761,367,4.501,368,4.501,369,5.434,370,4.952,371,4.501,372,4.501,373,4.501,374,4.501,375,4.501,376,4.501,377,4.501,378,4.501,379,4.501,380,4.501]],["title/injectables/ErrorHandlerService.html",[189,2.584,276,0.511]],["body/injectables/ErrorHandlerService.html",[2,0.226,3,0.226,4,0.15,7,0.363,11,0.663,12,0.018,13,0.2,15,0.014,16,0.014,23,1.327,28,1.694,33,0.939,39,0.815,44,2.838,45,2.521,50,0.842,52,0.99,53,0.706,54,0.99,57,0.621,58,1.699,61,0.503,62,0.454,70,0.252,76,1.096,77,1.045,78,1.096,100,1.534,151,4.952,189,4.021,276,0.877,278,1.782,291,2.217,381,5.462,382,3.869,383,5.761,384,2.893,385,4.501,386,5.761,387,4.501,388,2.893,389,4.501,390,4.501]],["title/components/ErrorPageComponent.html",[17,0.742,99,1.262]],["body/components/ErrorPageComponent.html",[2,0.182,3,0.182,4,0.121,7,0.292,12,0.018,13,0.161,15,0.012,16,0.012,17,1.291,18,1.297,19,1.595,20,1.595,21,1.595,23,1.471,24,2.51,25,1.595,26,3.222,27,3.222,29,2.195,31,2.195,33,0.813,38,2.705,39,1.033,50,0.729,53,0.611,57,0.5,58,1.471,61,0.316,62,0.365,70,0.203,86,1.176,87,2.081,88,2.195,89,2.195,90,2.705,91,1.595,92,1.595,93,1.176,94,1.121,95,2.195,96,1.297,97,1.512,98,2.195,99,2.095,100,1.944,101,1.595,102,1.235,103,1.595,104,1.297,105,1.595,106,1.595,107,1.176,108,1.235,109,1.595,110,1.176,111,1.595,112,1.297,113,1.176,114,1.595,115,1.297,116,1.595,117,1.595,295,2.782,391,3.115,392,4.989,393,4.989,394,4.989,395,3.624,396,3.624,397,4.989]],["title/interfaces/ErrorResponse.html",[0,1.393,398,2.21]],["body/interfaces/ErrorResponse.html",[0,2.367,2,0.26,3,0.26,4,0.172,6,3.973,7,0.418,8,1.945,9,6.054,10,1.703,11,0.724,12,0.018,13,0.23,14,3.29,15,0.015,16,0.015,100,2.4,398,3.754,399,4.452]],["title/components/HomeComponent.html",[17,0.742,102,1.262]],["body/components/HomeComponent.html",[2,0.187,3,0.187,4,0.124,7,0.301,12,0.018,13,0.166,15,0.012,16,0.012,17,1.305,18,1.337,19,1.644,20,1.644,21,1.644,23,1.502,24,2.55,25,1.644,26,3.237,27,3.237,29,2.241,31,2.241,33,0.83,38,2.739,39,1.049,50,0.744,53,0.624,57,0.516,58,1.502,61,0.326,62,0.377,70,0.209,86,1.213,87,2.125,88,2.241,89,2.241,90,2.739,91,1.644,92,1.644,93,1.213,94,1.155,95,2.241,96,1.337,97,1.558,98,2.241,99,1.273,100,1.273,101,1.644,102,2.121,103,1.644,104,1.337,105,1.644,106,1.644,107,1.213,108,1.273,109,1.644,110,1.213,111,1.644,112,1.337,113,1.213,114,1.644,115,1.337,116,1.644,117,1.644,260,4.378,400,3.211,401,5.093,402,5.093,403,3.735,404,3.735]],["title/modules/HomeModule.html",[118,1.092,405,2.584]],["body/modules/HomeModule.html",[2,0.193,3,0.193,4,0.128,12,0.019,13,0.231,15,0.013,16,0.013,61,0.63,62,0.389,70,0.291,76,0.939,77,0.894,78,0.939,86,1.251,102,2.312,112,2.429,118,1.534,120,2.016,121,3.515,122,2.016,123,2.016,131,3.55,132,3.783,138,3.105,139,2.3,140,2.148,152,2.721,188,2.69,202,2.956,242,2.016,301,3.631,302,2.477,304,3.99,309,2.69,405,5.187,406,3.312,407,3.312,408,3.312,409,4.362,410,3.853,411,3.312,412,3.853,413,3.853,414,2.956,415,3.853]],["title/modules/HomeRoutingModule.html",[118,1.092,409,2.38]],["body/modules/HomeRoutingModule.html",[2,0.232,3,0.232,4,0.154,12,0.019,13,0.26,15,0.014,16,0.014,17,1.175,61,0.609,62,0.466,70,0.328,76,1.127,77,1.074,78,1.127,79,1.431,102,1.998,108,1.998,118,1.364,152,3.067,159,3.499,160,2.035,242,2.42,245,3.499,253,4.497,256,3.976,257,3.548,263,3.548,409,3.768,411,3.976,416,4.625,417,4.625,418,4.625,419,4.625]],["title/interceptors/JsonHeaderInterceptor.html",[134,2.584,318,1.722]],["body/interceptors/JsonHeaderInterceptor.html",[2,0.184,3,0.184,4,0.122,7,0.296,8,1.558,10,1.334,11,0.661,12,0.019,13,0.163,15,0.012,16,0.012,23,1.083,33,0.821,37,1.298,39,1.04,50,0.84,52,0.632,53,0.45,54,0.632,57,0.695,61,0.501,62,0.37,70,0.206,71,1.958,76,1.227,77,1.503,78,1.227,79,1.558,134,3.515,150,1.532,276,0.695,318,1.708,321,3.694,326,2.362,327,3.866,328,3.974,330,3.006,331,2.83,332,2.362,333,3.237,334,1.708,335,2.193,336,2.193,341,3.158,342,3.158,343,3.158,345,3.158,420,6.182,421,3.674,422,6.182,423,5.036,424,3.674,425,2.818,426,2.818,427,5.036,428,5.036,429,5.036,430,3.674,431,5.036,432,3.674,433,3.674,434,3.674,435,3.158]],["title/interfaces/JwtPayload.html",[0,1.393,436,2.584]],["body/interfaces/JwtPayload.html",[0,2.367,2,0.26,3,0.26,4,0.172,7,0.418,8,1.945,10,1.703,11,0.724,12,0.018,13,0.23,14,3.29,15,0.015,16,0.015,53,0.863,436,4.39,437,4.452,438,3.973,439,3.469]],["title/components/LangSwitchComponent.html",[17,0.742,104,1.325]],["body/components/LangSwitchComponent.html",[2,0.159,3,0.159,4,0.105,7,0.256,10,1.232,11,0.523,12,0.018,13,0.141,15,0.011,16,0.011,17,1.229,18,1.135,19,1.395,20,1.395,21,1.395,23,1.339,24,2.335,25,1.395,26,3.152,27,3.152,29,1.998,31,1.998,33,0.74,37,1.279,38,2.55,39,0.574,48,3.903,49,4.98,50,0.775,52,0.781,53,0.71,54,0.781,57,0.627,58,1.708,61,0.396,62,0.32,65,1.08,67,1.892,70,0.177,86,1.029,87,1.894,88,1.998,89,1.998,90,2.55,91,1.395,92,1.395,93,1.029,94,0.98,95,1.998,96,1.135,97,1.322,98,1.998,99,1.08,100,1.08,101,1.395,102,1.08,103,1.395,104,2.074,105,2.958,106,1.395,107,1.029,108,1.08,109,1.395,110,1.029,111,1.395,112,1.135,113,1.029,114,1.395,115,1.135,116,1.395,117,1.395,291,1.561,360,4.444,440,4.98,441,2.724,442,4.541,443,4.541,444,4.541,445,4.541,446,3.17,447,3.17,448,3.17,449,4.541,450,3.17,451,3.17,452,4.541,453,4.541]],["title/modules/LayoutModule.html",[118,1.092,132,2.064]],["body/modules/LayoutModule.html",[2,0.178,3,0.178,4,0.118,12,0.019,13,0.218,15,0.012,16,0.012,61,0.637,62,0.358,65,1.209,67,2.117,70,0.275,76,0.864,77,0.823,78,0.864,86,1.152,93,2.148,96,2.369,99,2.255,108,2.255,115,2.369,118,1.45,120,1.856,121,3.367,122,1.856,123,1.856,131,3.462,132,4.137,138,2.934,139,2.117,140,1.978,152,2.572,159,2.934,160,1.561,167,3.771,188,2.476,242,1.856,301,3.431,302,2.28,304,3.771,306,4.225,309,2.476,347,2.721,454,3.049,455,3.049,456,3.547,457,3.547,458,3.547,459,3.547,460,3.547,461,3.547,462,3.547,463,3.547]],["title/interceptors/LogRequestInterceptor.html",[135,2.584,318,1.722]],["body/interceptors/LogRequestInterceptor.html",[2,0.195,3,0.195,4,0.13,7,0.315,11,0.603,12,0.019,13,0.173,15,0.013,16,0.013,23,1.15,33,0.855,37,1.325,39,0.949,44,2.582,45,2.384,50,0.766,52,0.901,53,0.642,54,0.901,57,0.818,61,0.577,62,0.393,70,0.218,71,1.787,77,1.375,135,3.659,150,1.626,276,0.724,318,1.813,321,3.808,326,2.506,327,3.781,328,4.072,330,3.129,331,2.918,332,2.506,333,3.37,334,1.813,335,2.327,336,2.327,340,3.659,384,2.506,388,2.506,464,5.092,465,3.898,466,4.544,467,3.781,468,3.898,469,3.898,470,2.99,471,2.99,472,2.99,473,3.898]],["title/interceptors/LogResponseInterceptor.html",[136,2.584,318,1.722]],["body/interceptors/LogResponseInterceptor.html",[2,0.184,3,0.184,4,0.122,7,0.296,11,0.579,12,0.019,13,0.163,15,0.012,16,0.012,23,1.08,33,0.819,37,1.296,39,0.91,44,2.476,45,2.324,50,0.734,52,0.864,53,0.616,54,0.864,57,0.852,61,0.583,62,0.369,70,0.205,71,1.713,76,0.892,77,1.433,78,0.892,136,3.508,150,1.528,276,0.694,318,1.704,321,3.688,326,2.355,327,3.686,328,3.969,330,3,331,2.826,332,3.231,333,3.231,334,1.704,335,2.187,336,2.187,340,2.557,384,2.355,388,2.355,464,4.932,466,4.401,467,3.686,470,2.81,471,2.81,472,2.81,474,3.664,475,3.664,476,3.664,477,4.32,478,2.81,479,3.149,480,3.149,481,3.149,482,2.557,483,3.149,484,3.664]],["title/injectables/LogService.html",[200,2.584,276,0.511]],["body/injectables/LogService.html",[2,0.179,3,0.179,4,0.119,7,0.289,10,1.315,11,0.738,12,0.019,13,0.159,15,0.012,16,0.012,33,0.806,39,0.647,45,1.86,50,0.937,52,1.103,53,0.786,54,1.103,57,0.844,58,2.044,61,0.494,62,0.361,65,1.219,70,0.2,76,1.38,77,1.315,78,1.38,79,1.106,100,1.685,178,2.496,200,3.45,276,0.782,291,1.761,388,2.299,485,3.074,486,4.249,487,3.792,488,4.249,489,3.576,490,6.111,491,3.576,492,4.943,493,4.249,494,3.576,495,4.869,496,4.249,497,3.576,498,4.249,499,3.576,500,4.943,501,3.576,502,4.943,503,4.943,504,3.576,505,3.576,506,3.576,507,3.576,508,3.576,509,3.576,510,3.576,511,3.576,512,3.576]],["title/classes/LogServiceAbstract.html",[45,1.393,70,0.207]],["body/classes/LogServiceAbstract.html",[2,0.18,3,0.18,4,0.119,7,0.289,10,1.317,11,0.739,12,0.018,13,0.159,15,0.012,16,0.012,33,0.807,37,1.482,45,1.864,50,0.938,52,1.104,53,0.787,54,1.104,57,0.916,58,2.101,61,0.313,70,0.277,76,1.206,77,1.149,78,1.206,100,1.688,181,2.502,182,3.082,219,3.082,335,2.14,336,2.14,486,4.257,487,3.799,488,4.257,493,4.257,495,4.876,496,4.257,498,4.257,513,3.082,514,7.31,515,4.952,516,3.585,517,4.952,518,3.585,519,3.082,520,3.585,521,3.585,522,4.952,523,3.585,524,3.585,525,3.585,526,3.585]],["title/injectables/LoginFormFactory.html",[276,0.511,527,2.584]],["body/injectables/LoginFormFactory.html",[2,0.22,3,0.22,4,0.146,7,0.354,11,0.505,12,0.019,13,0.195,15,0.014,16,0.014,28,1.649,33,0.923,37,1.257,39,0.794,50,0.828,52,0.753,53,0.537,54,0.753,57,0.782,61,0.547,62,0.442,70,0.245,155,2.444,174,2.159,276,0.866,278,1.736,291,2.159,439,2.159,527,3.953,528,3.768,529,5.702,530,3.768,531,5.702,532,4.383,533,4.869,534,4.383,535,4.38,536,3.641,537,3.768,538,3.768,539,4.869,540,3.768,541,4.869,542,2.293,543,3.768]],["title/components/LoginPageComponent.html",[17,0.742,107,1.202]],["body/components/LoginPageComponent.html",[2,0.108,3,0.108,4,0.072,7,0.174,8,1.049,11,0.483,12,0.019,13,0.096,15,0.01,16,0.008,17,1.039,18,0.77,19,0.947,20,0.947,21,0.947,23,1,24,1.847,25,0.947,26,2.912,27,2.912,29,1.492,31,1.492,33,0.553,34,2.561,37,1.231,38,2.096,39,0.614,44,2.067,45,1.793,50,0.842,52,0.583,53,0.584,54,0.583,57,0.715,58,1.855,61,0.521,62,0.217,65,0.733,69,1.284,70,0.12,71,1.877,76,0.524,77,0.499,78,0.524,86,0.698,87,1.414,88,1.492,89,1.492,90,2.096,91,0.947,92,0.947,93,0.698,94,1.049,95,1.492,96,0.77,97,0.897,98,1.492,99,0.733,100,1.156,101,0.947,102,0.733,103,0.947,104,0.77,105,2.704,106,0.947,107,1.546,108,0.733,109,0.947,110,0.698,111,0.947,112,0.77,113,0.698,114,0.947,115,0.77,116,0.947,117,0.947,155,1.199,160,0.947,174,1.06,175,1.199,180,1.284,268,1.502,269,3.062,273,2.367,295,3.07,315,3.287,316,1.502,349,2.915,350,2.915,439,2.346,527,3.325,535,3.325,536,2.18,542,2.492,544,1.849,545,4.095,546,2.601,547,4.095,548,4.764,549,3.608,550,4.197,551,3.325,552,3.22,553,3.654,554,3.22,555,3.325,556,3.391,557,3.391,558,2.151,559,2.151,560,2.151,561,2.151,562,2.151,563,2.151,564,2.151,565,1.849,566,1.849,567,1.849,568,2.151,569,2.151,570,2.151,571,1.65,572,1.849,573,1.65,574,2.151,575,2.151,576,2.151,577,2.151,578,1.65,579,3.391,580,4.095,581,2.601,582,2.915,583,2.915,584,4.581,585,4.095,586,2.915,587,2.915,588,2.915,589,3.391,590,3.391]],["title/interfaces/LoginResult.html",[0,1.393,591,2.38]],["body/interfaces/LoginResult.html",[0,2.367,2,0.26,3,0.26,4,0.172,7,0.418,8,1.945,10,1.703,11,0.724,12,0.018,13,0.23,14,3.29,15,0.015,16,0.015,338,6.054,591,4.043,592,4.452,593,4.452,594,5.403]],["title/injectables/LoginService.html",[276,0.511,551,2.584]],["body/injectables/LoginService.html",[2,0.147,3,0.147,4,0.098,7,0.237,8,1.328,10,1.558,11,0.643,12,0.019,13,0.13,15,0.012,16,0.01,28,1.104,33,0.7,34,2.889,35,3.336,37,1.017,39,0.777,42,3.031,43,3.116,44,2.501,45,2.103,50,0.869,52,0.873,53,0.622,54,0.873,57,0.821,58,1.266,61,0.595,62,0.296,65,1,66,1.535,69,1.751,70,0.164,71,2.243,73,1.751,76,0.715,77,0.681,78,0.715,79,1.328,80,1.445,81,1.751,94,0.907,174,1.445,175,1.636,268,2.048,269,3.592,273,2.997,276,0.701,278,1.162,315,3.031,331,2.929,334,1.364,439,2.115,542,2.924,551,2.997,591,3.592,595,2.522,596,5.588,597,4.293,598,3.895,599,3.336,600,4.365,601,3.592,602,4.293,603,2.933,604,4.293,605,2.933,606,4.293,607,2.933,608,2.522,609,2.25,610,2.933,611,2.522,612,2.501,613,2.25,614,2.25,615,2.933,616,4.293,617,2.933,618,2.933,619,2.933,620,2.933,621,2.933,622,2.933,623,2.933]],["title/injectables/LogoutService.html",[271,2.38,276,0.511]],["body/injectables/LogoutService.html",[1,1.977,2,0.154,3,0.154,4,0.102,7,0.248,8,1.374,10,1.211,11,0.511,12,0.019,13,0.137,15,0.011,16,0.011,28,1.157,33,0.724,34,2.937,35,3.41,37,1.045,39,0.804,42,3.114,43,3.186,50,0.885,52,0.529,53,0.377,54,0.529,57,0.72,58,1.862,61,0.609,62,0.31,65,1.514,66,1.609,70,0.172,71,2.272,73,1.835,76,0.749,77,0.714,78,0.749,79,0.951,80,1.515,81,1.835,94,0.951,148,3.988,150,1.283,160,1.353,174,1.515,175,1.714,180,1.835,268,2.146,269,3.673,271,2.856,273,3.101,276,0.72,278,1.218,315,1.835,331,1.515,334,1.43,398,1.835,478,2.359,552,4.001,553,4.383,555,2.146,565,2.643,571,2.359,578,2.359,600,4.484,601,3.673,609,2.359,624,2.643,625,5.714,626,5.714,627,4.383,628,4.001,629,4.443,630,3.075,631,3.075,632,3.075,633,3.075,634,3.075,635,3.819,636,3.075,637,3.075,638,3.075,639,3.075,640,3.075,641,3.075,642,3.075,643,3.075,644,2.359,645,4.443]],["title/components/MainLayoutComponent.html",[17,0.742,108,1.262]],["body/components/MainLayoutComponent.html",[2,0.185,3,0.185,4,0.123,7,0.297,12,0.018,13,0.164,15,0.012,16,0.012,17,1.299,18,1.319,19,1.621,20,1.621,21,1.621,23,1.488,24,2.532,25,1.621,26,3.23,27,3.23,29,2.22,31,2.22,33,0.823,37,1.153,38,2.723,39,1.042,50,0.737,53,0.618,57,0.508,58,1.488,61,0.321,62,0.371,70,0.206,86,1.196,87,2.104,88,2.22,89,2.22,90,2.723,91,1.621,92,1.621,93,1.196,94,1.14,95,2.22,96,1.319,97,1.537,98,2.22,99,1.255,100,1.255,101,1.621,102,1.255,103,1.621,104,1.319,105,1.621,106,1.621,107,1.196,108,2.109,109,2.532,110,1.196,111,1.621,112,1.319,113,1.196,114,1.621,115,1.319,116,1.621,117,1.621,283,4.337,646,3.167,647,5.045,648,5.045,649,3.684,650,3.684]],["title/injectables/RegisterFormFactory.html",[276,0.511,651,2.584]],["body/injectables/RegisterFormFactory.html",[2,0.204,3,0.204,4,0.136,7,0.329,11,0.469,12,0.019,13,0.181,15,0.013,16,0.013,28,1.534,33,0.881,37,1.214,39,0.738,50,0.789,52,0.701,53,0.662,54,0.701,57,0.746,61,0.528,62,0.411,70,0.228,79,1.671,155,2.273,174,2.008,276,0.836,278,1.614,291,2.008,439,2.008,529,5.544,530,3.504,531,5.544,533,4.643,535,4.228,536,3.472,537,3.504,538,3.504,539,5.207,540,3.504,541,5.544,542,2.132,543,4.643,644,3.127,651,3.77,652,3.504,653,4.076,654,4.076,655,6.058,656,5.401,657,5.401,658,4.076,659,4.076,660,4.076]],["title/components/RegisterPageComponent.html",[17,0.742,110,1.202]],["body/components/RegisterPageComponent.html",[2,0.09,3,0.09,4,0.06,7,0.146,8,0.911,10,0.999,11,0.495,12,0.019,13,0.08,15,0.007,16,0.012,17,0.95,18,0.646,19,0.794,20,0.794,21,0.794,23,0.868,24,1.641,25,0.794,26,2.785,27,2.785,29,1.295,31,1.295,33,0.48,34,2.693,37,1.16,38,1.894,39,0.533,44,1.837,45,1.62,50,0.818,52,0.641,53,0.71,54,0.641,57,0.741,58,1.756,61,0.52,62,0.182,65,0.615,69,1.077,70,0.101,71,1.734,79,0.558,86,0.586,87,1.228,88,1.295,89,1.295,90,1.894,91,0.794,92,0.794,93,0.586,94,0.558,95,1.295,96,0.646,97,0.752,98,1.295,99,0.615,100,0.615,101,0.794,102,0.615,103,0.794,104,0.646,105,2.982,106,0.794,107,0.586,108,0.615,109,0.794,110,1.397,111,0.794,112,0.646,113,0.586,114,0.794,115,0.646,116,0.794,117,0.794,150,0.752,155,1.006,160,0.794,180,1.077,295,2.837,315,1.757,316,3.551,398,1.757,439,2.12,535,3.004,536,1.892,542,3.116,545,3.7,546,2.258,547,3.7,549,2.53,552,2.861,553,3.302,554,2.861,555,3.004,566,1.55,567,1.55,571,1.384,572,1.55,573,1.384,578,2.258,580,4.812,581,3.302,582,2.53,583,2.53,584,5.154,585,4.374,586,2.53,587,3.7,588,3.7,598,2.861,599,2.569,612,1.837,613,1.384,614,1.384,651,3.004,661,1.55,662,2.944,663,2.944,664,2.944,665,4.304,666,1.804,667,3.73,668,3.004,669,2.944,670,2.53,671,4.614,672,1.804,673,2.944,674,1.804,675,1.804,676,1.804,677,1.804,678,1.804,679,1.804,680,1.804,681,1.804,682,1.804,683,1.55,684,1.804,685,1.804,686,1.55,687,1.804,688,1.804,689,1.804,690,3.73,691,1.804,692,1.804,693,2.944,694,2.944,695,1.804,696,2.944,697,1.804,698,2.944,699,2.944,700,2.944,701,1.804,702,2.944,703,2.944,704,1.804,705,1.804,706,1.804]],["title/injectables/RegisterService.html",[276,0.511,668,2.584]],["body/injectables/RegisterService.html",[1,2.245,2,0.175,3,0.175,4,0.116,7,0.282,8,1.504,10,1.298,11,0.644,12,0.019,13,0.155,15,0.012,16,0.012,28,1.314,33,0.793,34,2.601,35,3.611,37,1.121,39,0.88,42,2.902,43,3.373,50,0.884,52,0.836,53,0.596,54,0.836,57,0.772,58,1.434,61,0.589,62,0.352,65,1.19,66,1.827,70,0.195,71,2.244,73,2.084,76,0.851,77,0.811,78,0.851,79,1.08,80,1.72,81,2.084,148,4.222,150,1.457,276,0.772,278,1.383,287,2.678,316,3.394,331,2.755,334,1.624,598,4.291,599,3.611,612,3.133,613,2.678,614,2.678,628,4.291,635,3.001,668,3.394,683,4.179,707,3.001,708,6.049,709,4.862,710,3.492,711,3.492,712,3.492,713,4.862,714,3.492,715,3.492,716,3.492]],["title/injectables/RequestInspectorService.html",[276,0.511,467,2.21]],["body/injectables/RequestInspectorService.html",[2,0.237,3,0.237,4,0.157,7,0.381,11,0.544,12,0.018,13,0.21,15,0.014,16,0.014,28,1.777,33,0.968,37,1.302,50,0.69,52,0.812,53,0.579,54,0.812,57,0.82,61,0.518,62,0.476,70,0.264,76,1.15,77,1.096,78,1.15,150,1.97,275,5.106,276,0.897,278,1.87,327,4.07,330,2.819,467,3.546,717,5.106,718,4.06,719,5.94,720,5.94,721,4.723,722,4.723]],["title/classes/Spork.html",[70,0.207,113,1.202]],["body/classes/Spork.html",[2,0.204,3,0.204,4,0.136,7,0.329,8,1.671,10,1.633,11,0.697,12,0.018,13,0.181,14,3.607,15,0.013,16,0.013,39,0.738,50,0.98,52,0.701,53,0.499,54,0.701,57,0.746,61,0.356,70,0.302,71,2.35,113,1.753,723,3.504,724,6.45,725,6.45,726,4.643,727,4.683,728,5.396,729,5.401,730,5.046,731,5.401,732,4.076,733,4.076,734,4.076,735,4.076,736,4.076,737,2.845,738,5.401,739,5.401]],["title/injectables/SporkFactory.html",[276,0.511,740,2.584]],["body/injectables/SporkFactory.html",[2,0.195,3,0.195,4,0.129,7,0.314,10,1.373,11,0.602,12,0.019,13,0.173,15,0.013,16,0.013,28,1.463,33,0.853,37,1.363,39,1.071,50,0.864,52,0.9,53,0.641,54,0.9,57,0.873,61,0.552,62,0.392,70,0.218,79,1.619,113,2.294,205,2.499,276,0.816,278,1.539,727,2.713,728,4.854,730,4.61,737,2.713,740,3.652,741,3.341,742,4.498,743,4.498,744,3.887,745,5.233,746,4.245,747,3.887,748,5.233,749,5.233,750,3.887,751,3.341,752,2.982,753,3.887,754,3.887,755,3.887,756,3.887,757,3.887,758,3.887]],["title/components/SporkListComponent.html",[17,0.742,112,1.325]],["body/components/SporkListComponent.html",[2,0.135,3,0.135,4,0.09,7,0.217,8,1.246,11,0.556,12,0.019,13,0.119,15,0.01,16,0.01,17,1.15,18,0.964,19,1.184,20,1.184,21,1.184,23,1.188,24,2.124,25,1.184,26,3.058,27,3.058,29,1.773,31,1.773,33,0.657,34,2.245,37,1.207,38,2.358,39,0.729,44,1.984,45,2.017,50,0.783,52,0.693,53,0.657,54,0.693,57,0.556,58,1.58,61,0.525,62,0.271,65,0.917,69,1.607,70,0.151,71,1.645,86,0.874,87,1.68,88,1.773,89,1.773,90,2.358,91,1.184,92,1.184,93,0.874,94,0.833,95,1.773,96,0.964,97,1.123,98,1.773,99,0.917,100,0.917,101,1.184,102,0.917,103,1.184,104,0.964,105,1.184,106,1.184,107,0.874,108,0.917,109,1.184,110,0.874,111,1.184,112,1.919,113,2.341,114,1.184,115,0.964,116,1.184,117,1.184,150,1.123,180,1.607,231,3.463,384,1.73,398,1.607,414,4.402,546,3.09,554,3.703,555,3.741,573,2.065,670,3.463,671,4.607,686,2.314,752,2.065,759,4.932,760,2.314,761,4.029,762,4.029,763,4.029,764,4.828,765,3.741,766,4.029,767,2.692,768,2.692,769,2.692,770,2.692,771,2.692,772,2.692,773,2.692,774,2.692,775,4.029,776,2.692,777,2.692]],["title/interfaces/SporkPayload.html",[0,1.393,746,2.38]],["body/interfaces/SporkPayload.html",[0,2.372,2,0.261,3,0.261,4,0.173,7,0.42,8,1.95,10,1.575,11,0.726,12,0.018,13,0.231,14,3.298,15,0.015,16,0.015,727,4.922,728,5.41,746,4.052,778,4.47,779,5.831]],["title/injectables/SporkService.html",[276,0.511,765,2.584]],["body/injectables/SporkService.html",[2,0.167,3,0.167,4,0.111,7,0.269,8,1.456,10,1.267,11,0.628,12,0.019,13,0.148,15,0.011,16,0.011,28,1.255,33,0.768,34,3.018,35,3.539,37,1.093,39,0.853,42,2.81,43,3.305,50,0.914,52,0.809,53,0.577,54,0.809,57,0.863,58,1.388,61,0.594,62,0.336,65,1.137,66,1.745,70,0.187,71,2.212,73,1.991,76,0.812,77,0.774,78,0.812,79,1.032,80,1.643,81,1.991,113,1.772,148,4.138,150,1.391,276,0.753,278,1.321,287,2.558,331,2.688,334,1.551,608,2.867,609,2.558,628,4.186,740,4.138,743,5.096,746,3.811,751,2.867,752,2.558,765,3.286,780,2.867,781,5.929,782,4.708,783,5.457,784,4.708,785,3.335,786,4.708,787,3.335,788,3.335,789,3.335,790,3.335,791,3.335,792,3.335,793,3.335,794,3.335]],["title/interceptors/TimingInterceptor.html",[137,2.584,318,1.722]],["body/interceptors/TimingInterceptor.html",[2,0.175,3,0.175,4,0.117,7,0.283,11,0.561,12,0.019,13,0.155,15,0.012,16,0.012,23,1.032,33,0.794,37,1.275,39,0.882,44,2.399,45,2.279,50,0.712,52,0.837,53,0.597,54,0.837,57,0.879,61,0.575,62,0.353,70,0.196,71,1.66,76,0.853,77,1.406,78,0.853,79,1.507,137,3.4,150,1.46,276,0.672,318,1.628,321,3.601,326,2.25,327,3.615,328,3.893,330,2.907,331,2.759,332,3.131,333,3.131,334,1.628,335,2.09,336,2.09,340,2.444,384,2.25,388,2.25,466,4.297,467,3.615,470,2.685,471,2.685,472,2.685,477,4.187,478,2.685,479,3.009,480,3.009,481,3.009,482,3.91,483,3.009,779,4.187,795,3.501,796,3.501,797,3.501,798,3.736,799,4.871,800,4.871,801,3.501,802,3.501,803,3.501,804,3.501,805,3.501]],["title/components/TopnavComponent.html",[17,0.742,115,1.325]],["body/components/TopnavComponent.html",[2,0.165,3,0.165,4,0.109,7,0.265,11,0.378,12,0.018,13,0.146,15,0.011,16,0.011,17,1.246,18,1.176,19,1.446,20,1.446,21,1.446,23,1.374,24,2.382,25,1.446,26,3.171,27,3.171,29,2.05,31,2.05,33,0.76,37,1.294,38,2.592,39,0.595,50,0.791,52,0.565,53,0.663,54,0.565,57,0.643,58,1.737,61,0.406,62,0.331,70,0.184,86,1.067,87,1.943,88,2.05,89,2.05,90,2.592,91,1.446,92,1.446,93,1.067,94,1.017,95,2.05,96,1.176,97,1.371,98,2.05,99,1.12,100,1.12,101,1.446,102,1.12,103,1.446,104,1.176,105,1.446,106,1.446,107,1.067,108,1.12,109,1.446,110,1.067,111,1.446,112,1.176,113,1.067,114,1.446,115,2.108,116,2.382,117,1.446,270,4.005,271,3.786,280,2.825,291,1.619,294,4.005,295,2.598,627,4.954,806,2.825,807,4.659,808,4.659,809,3.286,810,3.286,811,3.286,812,3.286,813,3.286,814,4.659]],["title/classes/User.html",[70,0.207,612,1.824]],["body/classes/User.html",[2,0.157,3,0.157,4,0.105,7,0.253,8,1.395,10,1.73,11,0.703,12,0.018,13,0.139,14,3.708,15,0.011,16,0.011,39,0.817,50,0.998,52,0.54,53,0.822,54,1.05,57,0.796,61,0.274,70,0.252,71,2.416,369,5.026,439,3.133,542,3.428,594,5.026,612,2.222,726,3.877,815,2.699,816,5.769,817,5.769,818,5.769,819,5.769,820,3.14,821,4.51,822,3.877,823,5.769,824,6.828,825,3.14,826,3.14,827,3.14,828,3.14,829,3.14,830,3.14,831,3.14,832,3.14,833,3.14,834,3.14,835,3.14,836,2.408,837,4.51,838,4.51,839,4.51,840,4.51]],["title/injectables/UserFactory.html",[276,0.511,599,2.21]],["body/injectables/UserFactory.html",[2,0.15,3,0.15,4,0.099,7,0.241,10,1.565,11,0.689,12,0.019,13,0.133,15,0.011,16,0.011,28,1.124,33,0.709,37,1.407,39,0.541,50,0.875,52,1.03,53,0.84,54,1.03,57,0.913,61,0.563,62,0.301,70,0.167,79,0.924,205,1.919,276,0.708,278,1.182,291,1.471,362,3.933,369,3.935,436,3.036,439,2.527,542,3.134,591,3.623,594,4.323,599,2.596,611,2.567,612,3.42,644,3.336,742,3.738,822,2.567,841,2.567,842,4.349,843,4.349,844,4.409,845,2.986,846,2.986,847,4.349,848,4.349,849,4.364,850,2.986,851,2.986,852,4.349,853,2.986,854,2.986,855,4.349,856,2.986,857,2.986,858,2.986,859,2.986,860,2.29,861,2.567,862,2.986,863,4.349,864,2.986,865,2.986,866,2.567,867,2.986,868,2.986,869,2.986,870,2.986,871,2.986,872,2.986,873,2.986,874,2.986,875,2.986,876,2.986,877,2.986,878,2.986,879,2.986,880,2.986,881,2.986,882,2.986]],["title/interfaces/UserPayload.html",[0,1.393,849,2.584]],["body/interfaces/UserPayload.html",[0,2.312,2,0.25,3,0.25,4,0.166,7,0.402,8,1.901,10,1.741,11,0.767,12,0.018,13,0.221,14,3.484,15,0.015,16,0.015,53,0.852,438,3.825,439,3.424,542,3.637,849,4.289,883,4.287]],["title/injectables/UserService.html",[276,0.511,601,2.38]],["body/injectables/UserService.html",[2,0.198,3,0.198,4,0.132,7,0.319,8,1.638,10,1.385,11,0.609,12,0.019,13,0.176,15,0.013,16,0.013,28,1.489,33,0.863,37,1.44,50,0.931,52,0.68,53,0.485,54,0.68,57,0.88,58,1.879,61,0.521,62,0.399,70,0.221,71,2.034,276,0.824,278,1.566,425,3.034,426,3.034,601,3.403,612,3.54,836,3.034,844,5.478,866,3.4,884,3.4,885,6.373,886,6.373,887,5.295,888,3.956,889,3.956,890,5.295,891,3.956,892,3.956,893,3.956,894,3.956,895,3.956,896,3.956,897,3.956,898,3.956]],["title/coverage.html",[899,3.883]],["body/coverage.html",[0,2.296,1,1.792,4,0.093,5,2.396,6,3.171,11,0.321,12,0.019,15,0.01,16,0.01,17,1.37,18,0.998,22,2.396,45,1.049,70,0.276,80,1.373,93,0.905,96,0.998,99,0.95,102,0.95,104,0.998,107,0.905,108,0.95,110,0.905,112,0.998,113,0.905,115,0.998,141,3.171,181,2.886,186,2.138,189,1.945,200,1.945,203,2.658,205,1.792,215,2.138,239,2.138,271,1.792,276,0.966,282,2.396,346,2.396,347,2.138,348,2.396,360,2.138,362,1.945,363,2.396,364,2.396,381,2.396,382,2.396,391,2.396,398,1.664,399,2.396,400,2.396,414,2.138,436,1.945,437,2.396,438,3.171,440,2.396,441,2.396,467,1.664,485,2.396,513,2.396,527,1.945,528,2.396,544,2.396,551,1.945,591,1.792,592,2.396,593,2.396,595,2.396,599,1.664,601,1.792,612,1.373,624,2.396,646,2.396,651,1.945,652,2.396,661,2.396,668,1.945,707,2.396,717,2.396,718,2.396,723,2.396,740,1.945,741,2.396,746,1.792,759,2.396,760,2.396,765,1.945,778,2.396,780,2.396,806,2.396,815,2.396,841,2.396,849,1.945,883,2.396,884,2.396,899,2.138,900,2.138,901,2.787,902,2.787,903,7.636,904,5.823,905,6.1,906,2.787,907,2.787,908,6.839,909,6.315,910,3.554,911,4.182,912,5.823,913,4.928,914,2.396,915,2.396,916,2.787,917,2.787]],["title/dependencies.html",[120,2.331,918,2.654]],["body/dependencies.html",[12,0.019,15,0.012,16,0.012,62,0.365,63,3.827,64,3.207,65,2.27,66,1.896,67,2.163,94,1.121,120,1.896,122,1.896,143,2.53,144,2.53,145,2.78,146,2.78,155,2.021,160,1.595,164,3.115,165,4.288,170,3.115,172,2.78,174,2.457,175,2.021,178,2.53,180,2.163,302,2.33,309,2.53,334,1.685,370,3.115,536,2.33,730,2.53,737,3.482,836,2.78,860,2.78,861,3.115,919,3.624,920,3.624,921,7.211,922,3.624,923,4.989,924,3.624,925,3.624,926,3.624,927,3.624,928,3.624,929,3.624,930,3.624,931,4.989,932,3.624,933,3.624,934,3.624,935,3.624,936,3.624,937,3.624,938,3.624,939,3.624,940,3.624,941,3.624,942,3.624,943,3.624,944,3.624,945,3.624,946,3.624,947,3.624,948,3.624,949,3.624,950,3.624,951,3.624,952,3.115,953,3.624,954,3.624,955,3.624,956,3.624,957,3.624,958,3.624,959,3.624,960,3.624,961,3.624,962,3.624,963,3.624,964,3.624,965,3.115,966,3.624,967,3.624,968,3.624]],["title/miscellaneous/functions.html",[203,2.864,969,2.155]],["body/miscellaneous/functions.html",[7,0.437,12,0.017,15,0.016,16,0.016,52,1.11,53,0.791,54,1.11,141,4.15,203,3.478,204,4.65,208,4.65,215,4.952,239,4.952,969,3.776,970,6.456,971,6.456,972,6.456]],["title/index.html",[7,0.249,798,2.368,973,2.368]],["body/index.html",[4,0.106,12,0.014,15,0.011,16,0.011,23,0.941,34,1.485,64,2.052,65,1.815,80,1.572,87,1.332,97,1.332,100,1.555,113,1.482,122,1.67,123,2.388,143,4.057,144,3.186,172,2.449,178,2.228,203,2.052,211,2.744,257,2.449,295,2.545,482,2.228,487,2.449,519,2.744,581,2.449,584,2.449,612,1.572,627,2.449,727,2.228,730,2.228,737,2.228,860,3.501,899,2.449,900,2.449,918,2.744,952,2.744,965,2.744,973,2.449,974,3.923,975,5.327,976,3.192,977,4.564,978,3.192,979,3.192,980,3.192,981,3.192,982,3.192,983,3.192,984,3.192,985,3.192,986,3.923,987,5.327,988,3.192,989,5.327,990,3.192,991,3.192,992,3.192,993,3.192,994,3.192,995,3.192,996,3.192,997,5.327,998,3.192,999,3.192,1000,4.564,1001,4.564,1002,3.192,1003,2.744,1004,3.192,1005,3.192,1006,3.192,1007,3.192,1008,3.192,1009,5.498,1010,5.327,1011,4.564,1012,3.192,1013,3.192,1014,3.192,1015,4.564,1016,4.564,1017,4.564,1018,3.192,1019,3.192,1020,3.192,1021,3.192,1022,3.192,1023,3.192,1024,3.192,1025,4.564,1026,3.192,1027,3.192,1028,3.192,1029,5.327,1030,3.192,1031,3.192,1032,4.564,1033,4.564,1034,3.192,1035,3.192,1036,3.192,1037,3.192,1038,3.192,1039,3.192,1040,4.564,1041,3.192,1042,4.564,1043,3.192,1044,3.192,1045,3.192,1046,3.192,1047,3.192,1048,3.192,1049,3.192,1050,3.192,1051,3.192,1052,3.192,1053,4.564,1054,3.192,1055,3.192,1056,3.192,1057,4.564,1058,3.192,1059,4.564,1060,3.192,1061,3.192,1062,3.192,1063,4.564,1064,3.192,1065,3.192,1066,5.327,1067,3.192,1068,3.192,1069,3.192,1070,4.564,1071,3.192,1072,3.192,1073,3.192,1074,3.192,1075,3.192,1076,3.192,1077,3.192,1078,3.192,1079,3.192,1080,3.192,1081,3.192]],["title/license.html",[798,2.368,973,2.368,1082,2.654]],["body/license.html",[4,0.141,12,0.013,15,0.013,16,0.013,123,2.213,140,2.359,236,3.637,344,3.637,482,2.953,900,3.245,986,3.637,1003,3.637,1009,4.758,1082,3.637,1083,4.231,1084,6.169,1085,4.231,1086,4.231,1087,4.231,1088,4.231,1089,5.535,1090,4.231,1091,4.231,1092,4.231,1093,4.231,1094,5.535,1095,4.231,1096,6.544,1097,7.281,1098,4.231,1099,5.535,1100,6.169,1101,4.231,1102,6.169,1103,5.535,1104,4.231,1105,4.231,1106,4.231,1107,4.231,1108,4.231,1109,4.231,1110,4.231,1111,4.231,1112,4.231,1113,4.231,1114,4.231,1115,4.231,1116,5.535,1117,5.535,1118,4.231,1119,4.231,1120,5.535,1121,4.231,1122,4.231,1123,4.231,1124,4.231,1125,4.231,1126,4.231,1127,4.231,1128,4.231,1129,4.231,1130,4.231,1131,4.231,1132,4.231,1133,4.231,1134,4.231,1135,4.231,1136,4.231,1137,4.231,1138,4.231,1139,4.231]],["title/modules.html",[118,1.493]],["body/modules.html",[12,0.015,15,0.015,16,0.015,64,4.624,118,1.51,119,3.574,129,3.291,130,3.291,131,2.679,132,2.855,299,3.291,405,3.574,409,3.291,1140,7.193,1141,7.193,1142,7.477,1143,6.738,1144,6.738]],["title/overview.html",[1145,4.352]],["body/overview.html",[0,1.162,12,0.018,13,0.137,15,0.011,16,0.011,17,0.619,18,2.334,70,0.173,86,1.003,93,1.698,96,1.872,99,1.782,102,1.782,104,2.334,107,1.698,108,1.782,110,1.698,112,1.872,115,1.872,118,1.314,119,5.224,120,1.616,121,1.844,122,1.616,123,1.616,124,2.655,125,2.655,126,2.655,127,2.655,128,2.655,129,3.362,130,4.583,131,3.558,132,4.08,133,3.65,134,3.65,135,3.65,136,3.65,137,3.65,138,2.661,139,1.844,140,1.722,245,1.844,266,2.37,276,0.426,296,2.655,297,2.655,298,2.655,299,3.362,355,2.655,356,2.655,357,2.655,405,4.932,406,2.655,407,2.655,408,2.655,409,3.362,435,2.655,454,2.655,455,2.655,974,2.655,1145,2.655,1146,3.089,1147,3.089,1148,3.089,1149,3.089,1150,3.089]],["title/routes.html",[245,3.022]],["body/routes.html",[12,0.017,15,0.017,16,0.017,245,3.56]],["title/miscellaneous/variables.html",[911,3.418,969,2.155]],["body/miscellaneous/variables.html",[7,0.385,11,0.788,12,0.019,15,0.014,16,0.014,80,3.217,181,5.02,186,5.009,228,3.662,281,4.103,425,5.251,426,5.251,910,4.103,911,3.662,914,4.103,915,4.103,969,3.332,1151,5.98,1152,4.774,1153,4.774,1154,4.774,1155,4.774,1156,4.774,1157,4.774,1158,4.774,1159,5.98]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0.1.18",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1149,"title":{},"body":{"overview.html":{}}}],["1.1.0",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["1.10.1",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1146,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1150,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1147,"title":{},"body":{"overview.html":{}}}],["2",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/SporkListComponent.html":{}}}],["2.0.6",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":1086,"title":{},"body":{"license.html":{}}}],["255",{"_index":587,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["3",{"_index":1148,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":696,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["4",{"_index":984,"title":{},"body":{"index.html":{}}}],["4.1.3",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":974,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6.0.0",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":435,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["9.0.0",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["98",{"_index":1065,"title":{},"body":{"index.html":{}}}],["_angulartics2googletagmanag",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["_authservic",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["_completehandl",{"_index":626,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_configservic",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_configur",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_configuretransl",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["_datehelp",{"_index":847,"title":{},"body":{"injectables/UserFactory.html":{}}}],["_email",{"_index":816,"title":{},"body":{"classes/User.html":{}}}],["_errorhandl",{"_index":546,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_errorhandler(errorrespons",{"_index":670,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_errorhandler(result",{"_index":557,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_formbuild",{"_index":533,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["_formfactori",{"_index":549,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_geterrorlist",{"_index":664,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_geterrorlist(errorrespons",{"_index":673,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_getresult",{"_index":782,"title":{},"body":{"injectables/SporkService.html":{}}}],["_getresult(resultpayload",{"_index":786,"title":{},"body":{"injectables/SporkService.html":{}}}],["_geturi",{"_index":781,"title":{},"body":{"injectables/SporkService.html":{}}}],["_http",{"_index":628,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_imageuri",{"_index":724,"title":{},"body":{"classes/Spork.html":{}}}],["_injector",{"_index":325,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["_jsonencodeverb",{"_index":422,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["_key",{"_index":885,"title":{},"body":{"injectables/UserService.html":{}}}],["_lastlogin",{"_index":817,"title":{},"body":{"classes/User.html":{}}}],["_logger",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["_loginservic",{"_index":550,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_loginuri",{"_index":596,"title":{},"body":{"injectables/LoginService.html":{}}}],["_logoutservic",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"components/TopnavComponent.html":{}}}],["_logouturi",{"_index":625,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_name",{"_index":818,"title":{},"body":{"classes/User.html":{}}}],["_ngxlogger",{"_index":492,"title":{},"body":{"injectables/LogService.html":{}}}],["_password",{"_index":819,"title":{},"body":{"classes/User.html":{}}}],["_price",{"_index":725,"title":{},"body":{"classes/Spork.html":{}}}],["_registerservic",{"_index":667,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_registeruri",{"_index":708,"title":{},"body":{"injectables/RegisterService.html":{}}}],["_requestinspector",{"_index":466,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_router",{"_index":552,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["_setus",{"_index":597,"title":{},"body":{"injectables/LoginService.html":{}}}],["_setuser(result",{"_index":604,"title":{},"body":{"injectables/LoginService.html":{}}}],["_sporkfactori",{"_index":783,"title":{},"body":{"injectables/SporkService.html":{}}}],["_sporkservic",{"_index":764,"title":{},"body":{"components/SporkListComponent.html":{}}}],["_successhandl",{"_index":547,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_titleservic",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["_toastr",{"_index":554,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_translateservic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/LangSwitchComponent.html":{}}}],["_userfactori",{"_index":598,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["_userservic",{"_index":600,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["abov",{"_index":1115,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":514,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["accept",{"_index":430,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["accessor",{"_index":726,"title":{},"body":{"classes/Spork.html":{},"classes/User.html":{}}}],["action",{"_index":1134,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["add",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["address",{"_index":583,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["against",{"_index":1011,"title":{},"body":{"index.html":{}}}],["analyt",{"_index":1035,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1109,"title":{},"body":{"license.html":{}}}],["angular",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compil",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular2",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["angulartics2",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":1000,"title":{},"body":{"index.html":{}}}],["apibaseuri",{"_index":524,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["apirespons",{"_index":1,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["app.compon",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing.modul",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":18,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":998,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":431,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["appmodul",{"_index":119,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":129,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":1138,"title":{},"body":{"license.html":{}}}],["arithmet",{"_index":1027,"title":{},"body":{"index.html":{}}}],["around",{"_index":1064,"title":{},"body":{"index.html":{}}}],["assets/config.json",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lang",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["associ",{"_index":1098,"title":{},"body":{"license.html":{}}}],["auth",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"dependencies.html":{}}}],["auth.component.html",{"_index":285,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.component.scss",{"_index":284,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.routing.modul",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.modul",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module#authmodul",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/login/login.compon",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/register/register.compon",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/login",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout.servic",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authconfig",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":1010,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":248,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authlayoutcompon",{"_index":93,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":130,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":344,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["authreq",{"_index":341,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["authrout",{"_index":314,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authroutingmodul",{"_index":299,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["authservice.gettoken",{"_index":339,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authtokeninterceptor",{"_index":133,"title":{"interceptors/AuthTokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"overview.html":{}}}],["autoseri",{"_index":824,"title":{},"body":{"classes/User.html":{}}}],["avail",{"_index":1144,"title":{},"body":{"modules.html":{}}}],["aw",{"_index":1044,"title":{},"body":{"index.html":{}}}],["back",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["backend",{"_index":997,"title":{},"body":{"index.html":{}}}],["backtologincompon",{"_index":96,"title":{"components/BackToLoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["baseurl",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beanstalk",{"_index":1033,"title":{},"body":{"index.html":{}}}],["below",{"_index":699,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["blacklist",{"_index":1013,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RequestInspectorService.html":{}}}],["bootstrap",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["brows",{"_index":1142,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":1048,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1071,"title":{},"body":{"index.html":{}}}],["burkindin",{"_index":1088,"title":{},"body":{"license.html":{}}}],["c",{"_index":1085,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":1028,"title":{},"body":{"index.html":{}}}],["call",{"_index":1012,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cart",{"_index":1023,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":633,"title":{},"body":{"injectables/LogoutService.html":{}}}],["cerial",{"_index":836,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["charact",{"_index":588,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["charg",{"_index":1093,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":434,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["checkout",{"_index":1024,"title":{},"body":{"index.html":{}}}],["children",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["chromedriv",{"_index":1076,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1078,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":1043,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1130,"title":{},"body":{"license.html":{}}}],["class",{"_index":70,"title":{"classes/LogServiceAbstract.html":{},"classes/Spork.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["clearus",{"_index":886,"title":{},"body":{"injectables/UserService.html":{}}}],["close",{"_index":580,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["cluster_appmodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":355,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":356,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":357,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodul",{"_index":406,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":407,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_import",{"_index":408,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutmodul",{"_index":454,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declar",{"_index":455,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_import",{"_index":456,"title":{},"body":{"modules/LayoutModule.html":{}}}],["code",{"_index":1041,"title":{},"body":{"index.html":{}}}],["codepipline/codebuild",{"_index":1045,"title":{},"body":{"index.html":{}}}],["collect",{"_index":1020,"title":{},"body":{"index.html":{}}}],["combin",{"_index":1007,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1057,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["compodoc",{"_index":1036,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":17,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component/auth/auth.compon",{"_index":458,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/back",{"_index":459,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/error/error.compon",{"_index":461,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/home/home.compon",{"_index":411,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["component/lang",{"_index":359,"title":{},"body":{"modules/CoreModule.html":{}}}],["component/login/login.compon",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/main/main.compon",{"_index":462,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/register/register.compon",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/spork",{"_index":413,"title":{},"body":{"modules/HomeModule.html":{}}}],["component/topnav/topnav.compon",{"_index":463,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component_templ",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["compos",{"_index":983,"title":{},"body":{"index.html":{}}}],["condit",{"_index":1114,"title":{},"body":{"license.html":{}}}],["config",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.auth.heroimageuri",{"_index":293,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["config.core.apibaseuri",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.core.apibaseuri}${config.auth.loginuri",{"_index":617,"title":{},"body":{"injectables/LoginService.html":{}}}],["config.core.apibaseuri}${config.auth.logouturi",{"_index":639,"title":{},"body":{"injectables/LogoutService.html":{}}}],["config.core.apibaseuri}${config.auth.registeruri",{"_index":714,"title":{},"body":{"injectables/RegisterService.html":{}}}],["config.core.apibaseuri}${config.logging.logerroruri",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["config.core.apibaseuri}${config.spork.geturi",{"_index":792,"title":{},"body":{"injectables/SporkService.html":{}}}],["config.core.apibaseuri}/auth/login",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.json",{"_index":1070,"title":{},"body":{"index.html":{}}}],["config/auth.config",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["config/cor",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{},"dependencies.html":{}}}],["config/http",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["configfactori",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configfactory(http",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["confighttpload",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["confighttploader(http",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["configload",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["configservic",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["configur",{"_index":1026,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":700,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["confirmpassword",{"_index":660,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["confirmpasswordcontrol",{"_index":657,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["connect",{"_index":1139,"title":{},"body":{"license.html":{}}}],["consol",{"_index":525,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["console.log(data",{"_index":526,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["const",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["constructor(_angulartics2googletagmanag",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_authservic",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["constructor(_configservic",{"_index":287,"title":{},"body":{"components/AuthLayoutComponent.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["constructor(_datehelp",{"_index":845,"title":{},"body":{"injectables/UserFactory.html":{}}}],["constructor(_formbuild",{"_index":530,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["constructor(_formfactori",{"_index":666,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["constructor(_injector",{"_index":322,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["constructor(_logg",{"_index":384,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_logoutservic",{"_index":809,"title":{},"body":{"components/TopnavComponent.html":{}}}],["constructor(_ngxlogg",{"_index":489,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(_translateservic",{"_index":446,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["constructor(email",{"_index":820,"title":{},"body":{"classes/User.html":{}}}],["constructor(pric",{"_index":729,"title":{},"body":{"classes/Spork.html":{}}}],["constructor(priv",{"_index":291,"title":{},"body":{"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{}}}],["contract",{"_index":1135,"title":{},"body":{"license.html":{}}}],["copi",{"_index":1096,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1084,"title":{},"body":{"license.html":{}}}],["core",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["core/core.modul",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["core/interface/service/log.service.abstract",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["core/model/payload/api",{"_index":712,"title":{},"body":{"injectables/RegisterService.html":{}}}],["core/model/payload/login",{"_index":610,"title":{},"body":{"injectables/LoginService.html":{}}}],["core/model/user.model",{"_index":613,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/auth/logout.servic",{"_index":813,"title":{},"body":{"components/TopnavComponent.html":{}}}],["core/service/error",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/factory/user.factori",{"_index":614,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/guard/auth.guard",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/service/interceptor/auth",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/json",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/log",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/timing.interceptor.servic",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/log.servic",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/user.servic",{"_index":615,"title":{},"body":{"injectables/LoginService.html":{}}}],["coremodul",{"_index":131,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":1060,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":899,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtranslateload",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":979,"title":{},"body":{"index.html":{}}}],["custom",{"_index":1019,"title":{},"body":{"index.html":{}}}],["customvalid",{"_index":537,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.email",{"_index":540,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.equalto(newpasswordcontrol",{"_index":659,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["d3",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["damag",{"_index":1131,"title":{},"body":{"license.html":{}}}],["data",{"_index":519,"title":{},"body":{"classes/LogServiceAbstract.html":{},"index.html":{}}}],["date",{"_index":369,"title":{},"body":{"injectables/DateHelperService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["date.now",{"_index":799,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["datehelperservic",{"_index":362,"title":{"injectables/DateHelperService.html":{}},"body":{"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["day",{"_index":989,"title":{},"body":{"index.html":{}}}],["ddthh:mm:ssza').tod",{"_index":374,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["deal",{"_index":1099,"title":{},"body":{"license.html":{}}}],["debug",{"_index":486,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["debug(messag",{"_index":493,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["declar",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["decod",{"_index":861,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":875,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.email",{"_index":878,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.nam",{"_index":879,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decor",{"_index":823,"title":{},"body":{"classes/User.html":{}}}],["default",{"_index":425,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["demo",{"_index":976,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":978,"title":{},"body":{"index.html":{}}}],["dep",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":120,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1042,"title":{},"body":{"index.html":{}}}],["deseri",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["deserialize(sessionstorage.getitem(this._key",{"_index":895,"title":{},"body":{"injectables/UserService.html":{}}}],["devlog",{"_index":515,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["devlog(data",{"_index":517,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["direct",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["disabl",{"_index":1074,"title":{},"body":{"index.html":{}}}],["disabletimeout",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":1107,"title":{},"body":{"license.html":{}}}],["document",{"_index":900,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":697,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["doesn\\'t",{"_index":705,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["dom",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["don't",{"_index":701,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["don\\'t",{"_index":706,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["done",{"_index":996,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":1073,"title":{},"body":{"index.html":{}}}],["ec2",{"_index":1046,"title":{},"body":{"index.html":{}}}],["effort",{"_index":1067,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":800,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["elast",{"_index":1032,"title":{},"body":{"index.html":{}}}],["element",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["email",{"_index":439,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["en",{"_index":452,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["enablehtml",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":1017,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1030,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":1053,"title":{},"body":{"index.html":{}}}],["enter",{"_index":582,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["environ",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["environments/environ",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["error",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["error(`provid",{"_index":377,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["error(messag",{"_index":496,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["error.component.html",{"_index":394,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error.component.scss",{"_index":393,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error:${this._geterrorlist(errorrespons",{"_index":689,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorhandl",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":189,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errorlist",{"_index":690,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorlist}${error",{"_index":692,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorpagecompon",{"_index":99,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorrespons",{"_index":398,"title":{"interfaces/ErrorResponse.html":{}},"body":{"interfaces/ErrorResponse.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"coverage.html":{}}}],["es",{"_index":453,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["es6",{"_index":1052,"title":{},"body":{"index.html":{}}}],["event",{"_index":482,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{},"license.html":{}}}],["exce",{"_index":586,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["expect",{"_index":378,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["expos",{"_index":1001,"title":{},"body":{"index.html":{}}}],["express",{"_index":986,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":504,"title":{},"body":{"injectables/LogService.html":{}}}],["extensions/password",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["factory/spork.factori",{"_index":790,"title":{},"body":{"injectables/SporkService.html":{}}}],["fals",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["fast_rewind",{"_index":353,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["feed",{"_index":1029,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fit",{"_index":1124,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1113,"title":{},"body":{"license.html":{}}}],["fontawesome5",{"_index":985,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1006,"title":{},"body":{"index.html":{}}}],["form",{"_index":545,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["form.get('password').value?.length",{"_index":695,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["form.get(\\'password\\').value?.length",{"_index":704,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["format",{"_index":380,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["formbuild",{"_index":531,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["formcontrol",{"_index":655,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["formdata",{"_index":851,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.nam",{"_index":873,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.password",{"_index":874,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formgroup",{"_index":535,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{}}}],["formsmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["free",{"_index":1092,"title":{},"body":{"license.html":{}}}],["front",{"_index":1016,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1015,"title":{},"body":{"index.html":{}}}],["full",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"index.html":{}}}],["function",{"_index":203,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":1111,"title":{},"body":{"license.html":{}}}],["get",{"_index":973,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdatefromutcstr",{"_index":365,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getdatefromutcstring(utcdatestr",{"_index":366,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getemail",{"_index":828,"title":{},"body":{"classes/User.html":{}}}],["getform",{"_index":529,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["getfromformdata",{"_index":842,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfromformdata(formdata",{"_index":848,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload",{"_index":742,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/UserFactory.html":{}}}],["getfrompayload(payload",{"_index":852,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload(sporkspayload",{"_index":745,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["getimageuri",{"_index":735,"title":{},"body":{"classes/Spork.html":{}}}],["getlastlogin",{"_index":830,"title":{},"body":{"classes/User.html":{}}}],["getnam",{"_index":832,"title":{},"body":{"classes/User.html":{}}}],["getpassword",{"_index":834,"title":{},"body":{"classes/User.html":{}}}],["getpayload",{"_index":843,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getpayload(us",{"_index":855,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getpric",{"_index":733,"title":{},"body":{"classes/Spork.html":{}}}],["getspork",{"_index":743,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{}}}],["getspork(pric",{"_index":749,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["getus",{"_index":844,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["getuser(email",{"_index":857,"title":{},"body":{"injectables/UserFactory.html":{}}}],["gitignor",{"_index":1081,"title":{},"body":{"index.html":{}}}],["googl",{"_index":1034,"title":{},"body":{"index.html":{}}}],["gotologin",{"_index":665,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["gotosignup",{"_index":548,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["gotten",{"_index":1022,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1091,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1143,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":266,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["hack",{"_index":990,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":383,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":386,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.servic",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":382,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":387,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:8",{"_index":385,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["haven't",{"_index":1021,"title":{},"body":{"index.html":{}}}],["header",{"_index":429,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.servic",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["header.interceptor.service.t",{"_index":421,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:12",{"_index":423,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:17",{"_index":424,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["headers['cont",{"_index":433,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["helper.servic",{"_index":868,"title":{},"body":{"injectables/UserFactory.html":{}}}],["helper.service.t",{"_index":364,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:8",{"_index":367,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["helper/d",{"_index":867,"title":{},"body":{"injectables/UserFactory.html":{}}}],["herebi",{"_index":1090,"title":{},"body":{"license.html":{}}}],["heroimageuri",{"_index":286,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["holder",{"_index":1128,"title":{},"body":{"license.html":{}}}],["home",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["home.component.html",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.routing.modul",{"_index":412,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/home.module#homemodul",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homecompon",{"_index":102,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodul",{"_index":405,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homerout",{"_index":418,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["homeroutingmodul",{"_index":409,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["http",{"_index":972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http/request",{"_index":470,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["http_interceptor",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["httpclientmodul",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":671,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["httpevent",{"_index":332,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httphandler",{"_index":328,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":333,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":327,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprespons",{"_index":477,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["identifi",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["imageuri",{"_index":728,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{}}}],["immut",{"_index":1061,"title":{},"body":{"index.html":{}}}],["implement",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["impli",{"_index":1122,"title":{},"body":{"license.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["includ",{"_index":1102,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":276,"title":{"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":323,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["inspector.servic",{"_index":471,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["inspector.service.t",{"_index":718,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["inspector.service.ts:7",{"_index":721,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["instanceof",{"_index":483,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["instruct",{"_index":1079,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":321,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":326,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interceptor",{"_index":318,"title":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/SporkPayload.html":{},"interfaces/UserPayload.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/SporkPayload.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interface/service/log.service.abstract",{"_index":388,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["isconfigfilerequest",{"_index":719,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest(req",{"_index":720,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isnan(date.gettim",{"_index":375,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["issu",{"_index":1075,"title":{},"body":{"index.html":{}}}],["it'",{"_index":1004,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":737,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["json.stringify(serialize(us",{"_index":897,"title":{},"body":{"injectables/UserService.html":{}}}],["jsonheaderinterceptor",{"_index":134,"title":{"interceptors/JsonHeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["jwt",{"_index":860,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{},"index.html":{}}}],["jwtdecod",{"_index":859,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtdecode(payload.token",{"_index":876,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtpayload",{"_index":436,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["kind",{"_index":1121,"title":{},"body":{"license.html":{}}}],["lang",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["langswitchcompon",{"_index":104,"title":{"components/LangSwitchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lastlogin",{"_index":594,"title":{},"body":{"interfaces/LoginResult.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["layout",{"_index":283,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["layout/component/auth/auth.compon",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["layout/component/error/error.compon",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout/component/main/main.compon",{"_index":417,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["layout/layout.modul",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{}}}],["layoutmodul",{"_index":132,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"overview.html":{}}}],["level",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["liabil",{"_index":1132,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1129,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1082,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1103,"title":{},"body":{"license.html":{}}}],["line",{"_index":1059,"title":{},"body":{"index.html":{}}}],["line:no",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["lint",{"_index":952,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["list",{"_index":761,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list'},{'nam",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["list.compon",{"_index":415,"title":{},"body":{"modules/HomeModule.html":{}}}],["list.component.html",{"_index":763,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.scss",{"_index":762,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.t",{"_index":760,"title":{},"body":{"components/SporkListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":766,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.ts:23",{"_index":768,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.ts:29",{"_index":767,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list/spork",{"_index":414,"title":{},"body":{"modules/HomeModule.html":{},"components/SporkListComponent.html":{},"coverage.html":{}}}],["loadchildren",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lock.json",{"_index":1080,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":487,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"index.html":{}}}],["log(messag",{"_index":498,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["logerroruri",{"_index":502,"title":{},"body":{"injectables/LogService.html":{}}}],["logger",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["loggerconfig",{"_index":503,"title":{},"body":{"injectables/LogService.html":{}}}],["loggermodul",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":315,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["login'},{'nam",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["login(email",{"_index":606,"title":{},"body":{"injectables/LoginService.html":{}}}],["login(this.form.value.email",{"_index":569,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login.compon",{"_index":460,"title":{},"body":{"modules/LayoutModule.html":{}}}],["login.component.html",{"_index":350,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.scss",{"_index":349,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.t",{"_index":348,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:11",{"_index":352,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login.component.ts:8",{"_index":351,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login/back",{"_index":347,"title":{},"body":{"components/BackToLoginComponent.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["loginformfactori",{"_index":527,"title":{"injectables/LoginFormFactory.html":{}},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecompon",{"_index":107,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginresult",{"_index":591,"title":{"interfaces/LoginResult.html":{}},"body":{"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["loginservic",{"_index":551,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":627,"title":{},"body":{"injectables/LogoutService.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["logoutservic",{"_index":271,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/LogoutService.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["logrequestinterceptor",{"_index":135,"title":{"interceptors/LogRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"overview.html":{}}}],["logresponseinterceptor",{"_index":136,"title":{"interceptors/LogResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogResponseInterceptor.html":{},"overview.html":{}}}],["logservic",{"_index":200,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logserviceabstract",{"_index":45,"title":{"classes/LogServiceAbstract.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["lot",{"_index":995,"title":{},"body":{"index.html":{}}}],["made",{"_index":1068,"title":{},"body":{"index.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["main.component.html",{"_index":648,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["main.component.scss",{"_index":647,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["mainlayoutcompon",{"_index":108,"title":{"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":608,"title":{},"body":{"injectables/LoginService.html":{},"injectables/SporkService.html":{}}}],["matbuttonmodul",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{}}}],["matcardmodul",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["match",{"_index":16,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["matformfieldmodul",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{}}}],["maticonmodul",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["matinputmodul",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["matpasswordstrengthmodul",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["matpasswordstrengthmodule.forroot",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{}}}],["max",{"_index":1058,"title":{},"body":{"index.html":{}}}],["maxopen",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":982,"title":{},"body":{"index.html":{}}}],["measur",{"_index":1055,"title":{},"body":{"index.html":{}}}],["menu",{"_index":814,"title":{},"body":{"components/TopnavComponent.html":{}}}],["merchant",{"_index":1123,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1105,"title":{},"body":{"license.html":{}}}],["messag",{"_index":495,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":969,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1083,"title":{},"body":{"license.html":{}}}],["mm",{"_index":373,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["model/payload/api",{"_index":634,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/error",{"_index":636,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/jwt",{"_index":862,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/login",{"_index":864,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/spork.payload",{"_index":751,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{}}}],["model/payload/us",{"_index":865,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/spork.model",{"_index":752,"title":{},"body":{"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{}}}],["model/user.model",{"_index":866,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["modifi",{"_index":1104,"title":{},"body":{"license.html":{}}}],["modul",{"_index":118,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":370,"title":{},"body":{"injectables/DateHelperService.html":{},"dependencies.html":{}}}],["moment(utcdatestr",{"_index":371,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["money",{"_index":730,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"dependencies.html":{},"index.html":{}}}],["money.fromdecimal(sporkpayload.pric",{"_index":755,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["mongodb",{"_index":987,"title":{},"body":{"index.html":{}}}],["more",{"_index":694,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["ms",{"_index":805,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["msg",{"_index":9,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{}}}],["multi",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nav.backtologin",{"_index":354,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["nav.errorpag",{"_index":397,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["new",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/DateHelperService.html":{},"injectables/SporkFactory.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["newpasswordcontrol",{"_index":656,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["next",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(authreq",{"_index":345,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["next.handle(req",{"_index":340,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req).pip",{"_index":480,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["ng2",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"dependencies.html":{}}}],["ng2uiauthmodul",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["ng2uiauthmodule.forroot(authconfig",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["ngrx/effect",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"injectables/LogService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":490,"title":{},"body":{"injectables/LogService.html":{}}}],["ngxloggerlevel",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.off",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.trac",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":1127,"title":{},"body":{"license.html":{}}}],["note",{"_index":1066,"title":{},"body":{"index.html":{}}}],["notic",{"_index":1116,"title":{},"body":{"license.html":{}}}],["null",{"_index":644,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/UserFactory.html":{}}}],["number",{"_index":779,"title":{},"body":{"interfaces/SporkPayload.html":{},"interceptors/TimingInterceptor.html":{}}}],["number:'.2",{"_index":776,"title":{},"body":{"components/SporkListComponent.html":{}}}],["number:\\'.2",{"_index":777,"title":{},"body":{"components/SporkListComponent.html":{}}}],["object.values(errorresponse.error).foreach((error",{"_index":691,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["observ",{"_index":331,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["obtain",{"_index":1095,"title":{},"body":{"license.html":{}}}],["of(us",{"_index":623,"title":{},"body":{"injectables/LoginService.html":{}}}],["old",{"_index":1039,"title":{},"body":{"index.html":{}}}],["onactivatetick",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":1137,"title":{},"body":{"license.html":{}}}],["out",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"license.html":{},"overview.html":{}}}],["outdatedbrows",{"_index":1037,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1145,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":918,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":392,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page'},{'nam",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["pages.login.loginbutton",{"_index":589,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.registerlink",{"_index":590,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.titl",{"_index":579,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.register.loginlink",{"_index":703,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.registerbutton",{"_index":702,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.titl",{"_index":693,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["paramet",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1125,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1008,"title":{},"body":{"index.html":{}}}],["password",{"_index":542,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["path",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pattern",{"_index":980,"title":{},"body":{"index.html":{}}}],["payload",{"_index":854,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.lastlogin",{"_index":880,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model",{"_index":863,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model.t",{"_index":438,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["permiss",{"_index":1089,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1110,"title":{},"body":{"license.html":{}}}],["person",{"_index":1094,"title":{},"body":{"license.html":{}}}],["pete",{"_index":1087,"title":{},"body":{"license.html":{}}}],["pipe(map(this._setuser.bind(thi",{"_index":619,"title":{},"body":{"injectables/LoginService.html":{}}}],["pipelin",{"_index":1040,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":581,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["popper.j",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":1119,"title":{},"body":{"license.html":{}}}],["positionclass",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":427,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["post(this._logouturi",{"_index":643,"title":{},"body":{"injectables/LogoutService.html":{}}}],["pre",{"_index":1056,"title":{},"body":{"index.html":{}}}],["preloadallmodul",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategi",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":1018,"title":{},"body":{"index.html":{}}}],["price",{"_index":727,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"index.html":{}}}],["privat",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/Spork.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["problem",{"_index":773,"title":{},"body":{"components/SporkListComponent.html":{}}}],["product",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":977,"title":{},"body":{"index.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AuthLayoutComponent.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/Spork.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["protect",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"index.html":{}}}],["provid",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["public",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["publish",{"_index":1106,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1126,"title":{},"body":{"license.html":{}}}],["put",{"_index":428,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["qualiti",{"_index":1054,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["readonli",{"_index":14,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"classes/Spork.html":{},"interfaces/SporkPayload.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{}}}],["recaptcha",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["redi",{"_index":1014,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":1038,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regist",{"_index":316,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["register'},{'nam",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["register(us",{"_index":683,"title":{},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["register.component.html",{"_index":663,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["register.component.scss",{"_index":662,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["registerformfactori",{"_index":651,"title":{"injectables/RegisterFormFactory.html":{}},"body":{"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["registerpagecompon",{"_index":110,"title":{"components/RegisterPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerservic",{"_index":668,"title":{"injectables/RegisterService.html":{}},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registr",{"_index":688,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["repositori",{"_index":1072,"title":{},"body":{"index.html":{}}}],["req",{"_index":330,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clon",{"_index":342,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["req.url.endswith('/assets/config.json",{"_index":722,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.urlwithparam",{"_index":803,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":802,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request.interceptor.servic",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["request.interceptor.service.t",{"_index":465,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:14",{"_index":468,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:21",{"_index":469,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["requestinspectorservic",{"_index":467,"title":{"injectables/RequestInspectorService.html":{}},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["requir",{"_index":585,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["require('../../assets/config.json",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["response.interceptor.servic",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.service.t",{"_index":474,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:16",{"_index":475,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:23",{"_index":476,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.model",{"_index":635,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["response.model.t",{"_index":6,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["rest",{"_index":999,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":1101,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.model",{"_index":611,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserFactory.html":{}}}],["result.model.t",{"_index":593,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["resultpayload",{"_index":788,"title":{},"body":{"injectables/SporkService.html":{}}}],["retriev",{"_index":774,"title":{},"body":{"components/SporkListComponent.html":{}}}],["return",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["right",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["root",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["root'},{'nam",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["rout",{"_index":245,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":553,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["routermodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["routermodule.forchild(authrout",{"_index":317,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(homerout",{"_index":419,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rule",{"_index":698,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["run",{"_index":1077,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":1025,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":334,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/internal/oper",{"_index":609,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/SporkService.html":{}}}],["rxjs/oper",{"_index":479,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["s3",{"_index":1047,"title":{},"body":{"index.html":{}}}],["scss",{"_index":1051,"title":{},"body":{"index.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["sell",{"_index":1003,"title":{},"body":{"index.html":{},"license.html":{}}}],["serial",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["serverloglevel",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["service/factory/form/login.form.factori",{"_index":563,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/factory/form/register.form.factori",{"_index":679,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["service/login.servic",{"_index":564,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/register.servic",{"_index":680,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["service/spork.servic",{"_index":769,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sessionstorage.removeitem(this._key",{"_index":898,"title":{},"body":{"injectables/UserService.html":{}}}],["sessionstorage.setitem(this._key",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["sethead",{"_index":343,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["setlang",{"_index":445,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["setlang(lang",{"_index":449,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["setus",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(us",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["shall",{"_index":1117,"title":{},"body":{"license.html":{}}}],["showcas",{"_index":992,"title":{},"body":{"index.html":{}}}],["sitetitl",{"_index":294,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/TopnavComponent.html":{}}}],["softwar",{"_index":1097,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["spoon",{"_index":1005,"title":{},"body":{"index.html":{}}}],["spork",{"_index":113,"title":{"classes/Spork.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"index.html":{}}}],["spork(pric",{"_index":758,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["spork.price.tostr",{"_index":775,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sporkfactori",{"_index":740,"title":{"injectables/SporkFactory.html":{}},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporklistcompon",{"_index":112,"title":{"components/SporkListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sporkpayload",{"_index":746,"title":{"interfaces/SporkPayload.html":{}},"body":{"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporkpayload.imageuri",{"_index":757,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["sporks.push",{"_index":753,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["sporkservic",{"_index":765,"title":{"injectables/SporkService.html":{}},"body":{"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporkspayload",{"_index":748,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/.../app.module.t",{"_index":970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.config.t",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.routing.module.t",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.module.t",{"_index":313,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/component/login/login.component.t",{"_index":544,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/login/login.component.ts:17",{"_index":556,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:28",{"_index":562,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:33",{"_index":561,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:42",{"_index":559,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:48",{"_index":558,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:53",{"_index":560,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/register/register.component.t",{"_index":661,"title":{},"body":{"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/register/register.component.ts:19",{"_index":669,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:29",{"_index":677,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:33",{"_index":678,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:44",{"_index":675,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:49",{"_index":672,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:57",{"_index":674,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:66",{"_index":676,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.t",{"_index":528,"title":{},"body":{"injectables/LoginFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:11",{"_index":534,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:8",{"_index":532,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.t",{"_index":652,"title":{},"body":{"injectables/RegisterFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:13",{"_index":653,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:16",{"_index":654,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/login.service.t",{"_index":595,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/auth/service/login.service.ts:17",{"_index":602,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:29",{"_index":603,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:36",{"_index":607,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:42",{"_index":605,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/register.service.t",{"_index":707,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{}}}],["src/app/auth/service/register.service.ts:14",{"_index":709,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:24",{"_index":710,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:31",{"_index":711,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/config/auth.config.t",{"_index":910,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/component/lang",{"_index":440,"title":{},"body":{"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.t",{"_index":358,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/interface/service/log.service.abstract.t",{"_index":513,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:10",{"_index":523,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:13",{"_index":518,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:5",{"_index":516,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:6",{"_index":520,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:7",{"_index":521,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/model/payload/api",{"_index":5,"title":{},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/error",{"_index":399,"title":{},"body":{"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/jwt",{"_index":437,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/app/core/model/payload/login",{"_index":592,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["src/app/core/model/payload/us",{"_index":883,"title":{},"body":{"interfaces/UserPayload.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.t",{"_index":815,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:11",{"_index":821,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:25",{"_index":829,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:29",{"_index":831,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:33",{"_index":833,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:37",{"_index":835,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:5",{"_index":825,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:7",{"_index":826,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:9",{"_index":827,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/service/auth/logout.service.t",{"_index":624,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{}}}],["src/app/core/service/auth/logout.service.ts:17",{"_index":629,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:29",{"_index":631,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:36",{"_index":632,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:49",{"_index":630,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/error",{"_index":381,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.t",{"_index":841,"title":{},"body":{"injectables/UserFactory.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.ts:13",{"_index":846,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:16",{"_index":856,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:24",{"_index":850,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:28",{"_index":853,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:40",{"_index":858,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/guard/auth.guard.t",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:10",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:16",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/helper/d",{"_index":363,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["src/app/core/service/http/request",{"_index":717,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["src/app/core/service/interceptor/auth",{"_index":319,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["src/app/core/service/interceptor/json",{"_index":420,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["src/app/core/service/interceptor/log",{"_index":464,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.t",{"_index":795,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:16",{"_index":796,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:23",{"_index":797,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/log.service.t",{"_index":485,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/core/service/log.service.ts:13",{"_index":494,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:18",{"_index":497,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:23",{"_index":499,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:27",{"_index":501,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:7",{"_index":491,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/user.service.t",{"_index":884,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/service/user.service.ts:10",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:12",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:16",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:20",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/home/component/home/home.component.t",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/component/home/home.component.ts:11",{"_index":404,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/home/home.component.ts:8",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/spork",{"_index":759,"title":{},"body":{"components/SporkListComponent.html":{},"coverage.html":{}}}],["src/app/home/home.module.t",{"_index":410,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routing.module.t",{"_index":416,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/home/model/payload/spork.payload.t",{"_index":778,"title":{},"body":{"interfaces/SporkPayload.html":{},"coverage.html":{}}}],["src/app/home/model/spork.model.t",{"_index":723,"title":{},"body":{"classes/Spork.html":{},"coverage.html":{}}}],["src/app/home/model/spork.model.ts:12",{"_index":734,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:16",{"_index":736,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:4",{"_index":732,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:5",{"_index":731,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/service/factory/spork.factory.t",{"_index":741,"title":{},"body":{"injectables/SporkFactory.html":{},"coverage.html":{}}}],["src/app/home/service/factory/spork.factory.ts:10",{"_index":744,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/factory/spork.factory.ts:13",{"_index":747,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/factory/spork.factory.ts:28",{"_index":750,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/spork.service.t",{"_index":780,"title":{},"body":{"injectables/SporkService.html":{},"coverage.html":{}}}],["src/app/home/service/spork.service.ts:15",{"_index":784,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:25",{"_index":785,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:32",{"_index":789,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:36",{"_index":787,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/layout/component/auth/auth.component.t",{"_index":282,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/auth/auth.component.ts:10",{"_index":288,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:16",{"_index":289,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:23",{"_index":290,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/back",{"_index":346,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.t",{"_index":391,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.ts:11",{"_index":396,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/error/error.component.ts:8",{"_index":395,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/main/main.component.t",{"_index":646,"title":{},"body":{"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/main/main.component.ts:11",{"_index":650,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["src/app/layout/component/main/main.component.ts:8",{"_index":649,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.t",{"_index":806,"title":{},"body":{"components/TopnavComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:10",{"_index":810,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:13",{"_index":812,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:15",{"_index":811,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/layout.module.t",{"_index":457,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/environments/environment.prod.t",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":975,"title":{},"body":{"index.html":{}}}],["stage",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":798,"title":{"index.html":{},"license.html":{}},"body":{"interceptors/TimingInterceptor.html":{}}}],["statement",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":994,"title":{},"body":{"index.html":{}}}],["store",{"_index":1002,"title":{},"body":{"index.html":{}}}],["strength",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["strict",{"_index":1049,"title":{},"body":{"index.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["styleurl",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["subject",{"_index":1112,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1108,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":571,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["substanti",{"_index":1118,"title":{},"body":{"license.html":{}}}],["success",{"_index":685,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["super",{"_index":505,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":1140,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1141,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":442,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch'},{'nam",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["switch.compon",{"_index":361,"title":{},"body":{"modules/CoreModule.html":{}}}],["switch.component.html",{"_index":444,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.scss",{"_index":443,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.t",{"_index":441,"title":{},"body":{"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:12",{"_index":448,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.ts:14",{"_index":450,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.ts:9",{"_index":447,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch/lang",{"_index":360,"title":{},"body":{"modules/CoreModule.html":{},"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["tabl",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":478,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((ev",{"_index":481,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["taptodismiss",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["templat",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["test",{"_index":1063,"title":{},"body":{"index.html":{}}}],["this._authservic",{"_index":618,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._authservice.isauthent",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._authservice.logout",{"_index":565,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{}}}],["this._authservice.removetoken",{"_index":640,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._completehandler.bind(thi",{"_index":645,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._configservice.getset",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["this._configur",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["this._configuretransl",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["this._datehelper.getdatefromutcstring(payload.lastlogin",{"_index":881,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this._email",{"_index":837,"title":{},"body":{"classes/User.html":{}}}],["this._errorhandler.bind(thi",{"_index":573,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["this._formbuilder.control",{"_index":658,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.control(nul",{"_index":539,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.group",{"_index":538,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formfactory.getform",{"_index":567,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._geturi",{"_index":791,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._http",{"_index":642,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._http.get(this._geturi).pipe(map(this._getresult.bind(thi",{"_index":793,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._http.post",{"_index":715,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._imageuri",{"_index":739,"title":{},"body":{"classes/Spork.html":{}}}],["this._injector.get",{"_index":337,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["this._jsonencodeverbs.includes(req.method.touppercas",{"_index":432,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["this._lastlogin",{"_index":838,"title":{},"body":{"classes/User.html":{}}}],["this._logger.devlog",{"_index":801,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["this._logger.devlog(error",{"_index":389,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.devlog(errorresponse.error",{"_index":686,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["this._logger.devlog(ev",{"_index":484,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["this._logger.devlog(req",{"_index":473,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["this._logger.devlog(result",{"_index":576,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._logger.devlog(us",{"_index":621,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logger.error(error",{"_index":390,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.updateloggeruri",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this._loginservic",{"_index":568,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._loginuri",{"_index":616,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logoutservice.logout",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"components/TopnavComponent.html":{}}}],["this._logouturi",{"_index":638,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._nam",{"_index":839,"title":{},"body":{"classes/User.html":{}}}],["this._ngxlogger.debug(messag",{"_index":506,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.error(messag",{"_index":507,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.getconfigsnapshot",{"_index":510,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.log(messag",{"_index":508,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.updateconfig(updatedconfig",{"_index":512,"title":{},"body":{"injectables/LogService.html":{}}}],["this._password",{"_index":840,"title":{},"body":{"classes/User.html":{}}}],["this._pric",{"_index":738,"title":{},"body":{"classes/Spork.html":{}}}],["this._registerservic",{"_index":682,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._registeruri",{"_index":713,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._requestinspector.isconfigfilerequest(req",{"_index":472,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["this._router.navigate(['auth",{"_index":578,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["this._router.navigate(['hom",{"_index":575,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._sporkfactory.getfrompayload(resultpayload",{"_index":794,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._sporkservice.getsporks().subscribe((spork",{"_index":770,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._successhandler.bind(thi",{"_index":572,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._titleservice.settitle(sitetitl",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastr.error",{"_index":687,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._toastr.error('login",{"_index":577,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.error('ther",{"_index":772,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._toastr.success('log",{"_index":574,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.success('register",{"_index":684,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._translateservice.get('sitetitle').subscribe((sitetitl",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.setdefaultlang('en",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use('en",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use(lang",{"_index":451,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["this._userfactory.getfromformdata(this.form.valu",{"_index":681,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._userfactory.getfrompayload(result",{"_index":620,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._userfactory.getpayload(us",{"_index":716,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._userservice.clearus",{"_index":641,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._userservice.setuser(us",{"_index":622,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.form",{"_index":566,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this.form.value.password",{"_index":570,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.getspork",{"_index":754,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["this.getus",{"_index":877,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.getuser(formdata.email",{"_index":872,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.heroimageuri",{"_index":292,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["this.spork",{"_index":771,"title":{},"body":{"components/SporkListComponent.html":{}}}],["thon",{"_index":991,"title":{},"body":{"index.html":{}}}],["throw",{"_index":376,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["time",{"_index":1069,"title":{},"body":{"index.html":{}}}],["timinginterceptor",{"_index":137,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["titl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservic",{"_index":555,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["todo",{"_index":584,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["token",{"_index":338,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interfaces/LoginResult.html":{}}}],["token.interceptor.servic",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["token.interceptor.service.t",{"_index":320,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:12",{"_index":324,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:16",{"_index":329,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["took",{"_index":804,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["toolbox",{"_index":993,"title":{},"body":{"index.html":{}}}],["topnav",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["topnav.component.html",{"_index":808,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav.component.scss",{"_index":807,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnavcompon",{"_index":115,"title":{"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tort",{"_index":1136,"title":{},"body":{"license.html":{}}}],["translat",{"_index":295,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["translate/cor",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["translatemodule.forroot",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["translatepip",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/LangSwitchComponent.html":{}}}],["tree",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["true",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:disable:no",{"_index":335,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:enable:no",{"_index":336,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["two",{"_index":988,"title":{},"body":{"index.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1050,"title":{},"body":{"index.html":{}}}],["ui",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["undefin",{"_index":971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":981,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1062,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["updatedconfig",{"_index":509,"title":{},"body":{"injectables/LogService.html":{}}}],["updatedconfig.serverloggingurl",{"_index":511,"title":{},"body":{"injectables/LogService.html":{}}}],["updateloggeruri",{"_index":488,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(apibaseuri",{"_index":522,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(logerroruri",{"_index":500,"title":{},"body":{"injectables/LogService.html":{}}}],["us",{"_index":1009,"title":{},"body":{"index.html":{},"license.html":{}}}],["usd",{"_index":756,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["useclass",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":612,"title":{"classes/User.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user(email",{"_index":882,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.email",{"_index":870,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.nam",{"_index":869,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.password",{"_index":871,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.servic",{"_index":637,"title":{},"body":{"injectables/LogoutService.html":{}}}],["userfactori",{"_index":599,"title":{"injectables/UserFactory.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["userpayload",{"_index":849,"title":{"interfaces/UserPayload.html":{}},"body":{"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["userservic",{"_index":601,"title":{"injectables/UserService.html":{}},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["utc",{"_index":379,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["utcdatestr",{"_index":368,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["valid",{"_index":536,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["validators.maxlength(255",{"_index":543,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["validators.requir",{"_index":541,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["valu",{"_index":426,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["variabl",{"_index":911,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{}}}],["warranti",{"_index":1120,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1133,"title":{},"body":{"license.html":{}}}],["winston",{"_index":1031,"title":{},"body":{"index.html":{}}}],["without",{"_index":1100,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":965,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ye",{"_index":822,"title":{},"body":{"classes/User.html":{},"injectables/UserFactory.html":{}}}],["yyyi",{"_index":372,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["zone.j",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/api-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  readonly msg: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _configureTranslation\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_angulartics2GoogleTagManager: Angulartics2GoogleTagManager, _configService: ConfigService, _logger: LogServiceAbstract, _titleService: Title, _translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _angulartics2GoogleTagManager\n                                                  \n                                                        \n                                                                    Angulartics2GoogleTagManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configureTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configureTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ConfigService } from '@ngx-config/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private _angulartics2GoogleTagManager: Angulartics2GoogleTagManager,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _titleService: Title,\n    private _translateService: TranslateService\n  ) {\n    this._configureTranslation();\n  }\n\n  public ngOnInit(): void {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    this._translateService.get('siteTitle').subscribe((siteTitle: string) => {\n      this._titleService.setTitle(siteTitle);\n    });\n\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logger.updateLoggerUri(\n      `${config.core.apiBaseUri}${config.logging.logErrorUri}`\n    );\n  }\n\n  protected _configureTranslation(): void {\n    this._translateService.setDefaultLang('en');\n    this._translateService.use('en');\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthTokenInterceptor\n                            \n                            \n                                     JsonHeaderInterceptor\n                            \n                            \n                                     LogRequestInterceptor\n                            \n                            \n                                     LogResponseInterceptor\n                            \n                            \n                                     TimingInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { ConfigLoader, ConfigModule, ConfigService } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { Ng2UiAuthModule } from 'ng2-ui-auth';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthConfig } from './config/auth.config';\nimport { CoreModule } from './core/core.module';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\nimport { ErrorHandlerService } from './core/service/error-handler.service';\nimport { AuthTokenInterceptor } from './core/service/interceptor/auth-token.interceptor.service';\nimport { JsonHeaderInterceptor } from './core/service/interceptor/json-header.interceptor.service';\nimport { LogRequestInterceptor } from './core/service/interceptor/log-request.interceptor.service';\nimport { LogResponseInterceptor } from './core/service/interceptor/log-response.interceptor.service';\nimport { TimingInterceptor } from './core/service/interceptor/timing.interceptor.service';\nimport { LogService } from './core/service/log.service';\nimport { LayoutModule } from './layout/layout.module';\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  return new ConfigHttpLoader(http, './assets/config.json');\n}\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AppRoutingModule,\n    AuthModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient],\n    }),\n    CoreModule,\n    FormsModule,\n    HttpClientModule,\n    LayoutModule,\n    LoggerModule.forRoot({\n      level: environment.production ? NgxLoggerLevel.OFF : NgxLoggerLevel.TRACE,\n      serverLogLevel: NgxLoggerLevel.ERROR,\n    }),\n    MatPasswordStrengthModule.forRoot(),\n    Ng2UiAuthModule.forRoot(AuthConfig),\n    ReactiveFormsModule,\n    RouterModule,\n    ToastrModule.forRoot({\n      enableHtml: true,\n      disableTimeOut: true,\n      maxOpened: 2,\n      onActivateTick: true,\n      positionClass: 'toast-bottom-right',\n      tapToDismiss: true,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  declarations: [AppComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TimingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JsonHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogRequestInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n\n    {\n      provide: ErrorHandler,\n      useClass: ErrorHandlerService,\n    },\n\n    ConfigService,\n    TranslatePipe,\n\n    {\n      provide: LogServiceAbstract,\n      useClass: LogService,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { LoginPageComponent } from './auth/component/login/login.component';\nimport { RegisterPageComponent } from './auth/component/register/register.component';\nimport { AuthGuard } from './core/service/guard/auth.guard';\nimport { AuthLayoutComponent } from './layout/component/auth/auth.component';\nimport { ErrorPageComponent } from './layout/component/error/error.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: './auth/auth.module#AuthModule',\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/auth/login',\n  },\n  {\n    path: 'home',\n    canActivate: [AuthGuard],\n    loadChildren: './home/home.module#HomeModule',\n  },\n  {\n    path: '**',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: '**',\n        component: ErrorPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/service/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_authService: AuthService, _logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/guard/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        canActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/guard/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\n\nimport { LogoutService } from '../auth/logout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  public constructor(\n    private _authService: AuthService,\n    private _logoutService: LogoutService\n  ) {}\n\n  public canActivate(): boolean {\n    if (this._authService.isAuthenticated()) {\n      return true;\n    }\n\n    this._logoutService.logout();\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n            \n                styleUrls\n                auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                heroImageUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heroImageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heroImageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthLayoutComponent implements OnInit {\n  public heroImageUri: string;\n\n  constructor(private _configService: ConfigService) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this.heroImageUri = `${config.auth.heroImageUri}`;\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      {{ 'siteTitle' | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'siteTitle\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAuthModule -->\n\nCoreModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginPageComponent\n                            \n                            \n                                RegisterPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { AuthRoutingModule } from './auth.routing.module';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\n@NgModule({\n  imports: [\n    AuthRoutingModule,\n    CommonModule,\n    CoreModule,\n    FormsModule,\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPasswordStrengthModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [LoginPageComponent, RegisterPageComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthLayoutComponent } from '../layout/component/auth/auth.component';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\nconst authRoutes: Routes = [\n  {\n    path: '',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginPageComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(authRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthTokenInterceptor.html":{"url":"interceptors/AuthTokenInterceptor.html","title":"interceptor - AuthTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/auth-token.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  public constructor(private _injector: Injector) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    const authService: AuthService = this._injector.get(\n      AuthService\n    );\n    const token: string = authService.getToken();\n    if (!token) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: { Authorization: token },\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackToLoginComponent.html":{"url":"components/BackToLoginComponent.html","title":"component - BackToLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BackToLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/back-to-login/back-to-login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-to-login\n            \n\n            \n                styleUrls\n                back-to-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./back-to-login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-back-to-login',\n  templateUrl: './back-to-login.component.html',\n  styleUrls: ['./back-to-login.component.scss'],\n})\nexport class BackToLoginComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      fast_rewind{{ 'nav.backToLogin' | translate }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              fast_rewind{{ \\'nav.backToLogin\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackToLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nLangSwitchComponent\n\nLangSwitchComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLangSwitchComponent->CoreModule\n\n\n\n\n\nLangSwitchComponent \n\nLangSwitchComponent \n\nLangSwitchComponent  -->\n\nCoreModule->LangSwitchComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LangSwitchComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LangSwitchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LangSwitchComponent } from './component/lang-switch/lang-switch.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LangSwitchComponent],\n  exports: [LangSwitchComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateHelperService.html":{"url":"injectables/DateHelperService.html","title":"injectable - DateHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DateHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/helper/date-helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDateFromUtcString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDateFromUtcString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDateFromUtcString(utcDateString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/helper/date-helper.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utcDateString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateHelperService {\n  public getDateFromUtcString(utcDateString: string): Date {\n    const date: Date = moment(utcDateString, 'YYYY-MM-DDTHH:mm:ssZa').toDate();\n\n    if (isNaN(date.getTime())) {\n      throw new Error(`Provided date string is not in expected UTC format`);\n    }\n\n    return date;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/error-handler.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-handler.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(private _logger: LogServiceAbstract) {}\n\n  // tslint:disable-next-line:no-any\n  handleError(error: any): void {\n    this._logger.devLog(error);\n    this._logger.error(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/error/error.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ 'nav.errorPage' | translate }}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'nav.errorPage\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorResponse.html":{"url":"interfaces/ErrorResponse.html","title":"interface - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/error-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errors\n                                \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorResponse {\n  readonly msg: string;\n  readonly errors: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/home/home.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSporkListComponent\n\nSporkListComponent\n\nHomeModule -->\n\nSporkListComponent->HomeModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                            \n                                SporkListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    HomeRoutingModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material';\n\nimport { CoreModule } from '../core/core.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { HomeComponent } from './component/home/home.component';\nimport { HomeRoutingModule } from './home.routing.module';\nimport { SporkListComponent } from './component/spork-list/spork-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    HomeRoutingModule,\n    LayoutModule,\n    MatCardModule,\n  ],\n  declarations: [HomeComponent, SporkListComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MainLayoutComponent } from '../layout/component/main/main.component';\nimport { HomeComponent } from './component/home/home.component';\n\nconst homeRoutes: Routes = [\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        component: HomeComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(homeRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JsonHeaderInterceptor.html":{"url":"interceptors/JsonHeaderInterceptor.html","title":"interceptor - JsonHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JsonHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/json-header.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonEncodeVerbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jsonEncodeVerbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _jsonEncodeVerbs:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['POST', 'PUT']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JsonHeaderInterceptor implements HttpInterceptor {\n  private _jsonEncodeVerbs: string[] = ['POST', 'PUT'];\n\n  public constructor() {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    // tslint:disable-next-line:no-any\n    const headers: any = {\n      Accept: 'application/json',\n    };\n\n    if (this._jsonEncodeVerbs.includes(req.method.toUpperCase())) {\n      headers['Content-Type'] = 'application/json; charset=utf-8';\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: headers,\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/jwt-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  readonly email: string;\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LangSwitchComponent.html":{"url":"components/LangSwitchComponent.html","title":"component - LangSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LangSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/component/lang-switch/lang-switch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lang-switch\n            \n\n            \n                styleUrls\n                lang-switch.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./lang-switch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/component/lang-switch/lang-switch.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/component/lang-switch/lang-switch.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/component/lang-switch/lang-switch.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-lang-switch',\n  templateUrl: './lang-switch.component.html',\n  styleUrls: ['./lang-switch.component.scss'],\n})\nexport class LangSwitchComponent implements OnInit {\n  constructor(private _translateService: TranslateService) {}\n\n  public ngOnInit(): void {}\n\n  public setLang(lang: string): void {\n    this._translateService.use(lang);\n  }\n}\n\n    \n\n    \n        \n  en |\n  es\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  en |  es'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LangSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_imports\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nLayoutModule -->\n\nMainLayoutComponent->LayoutModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nLayoutModule -->\n\nTopnavComponent->LayoutModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthLayoutComponent\n                            \n                            \n                                BackToLoginComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                MainLayoutComponent\n                            \n                            \n                                TopnavComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule, MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { AuthLayoutComponent } from './component/auth/auth.component';\nimport { BackToLoginComponent } from './component/back-to-login/back-to-login.component';\nimport { ErrorPageComponent } from './component/error/error.component';\nimport { MainLayoutComponent } from './component/main/main.component';\nimport { TopnavComponent } from './component/topnav/topnav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatCardModule,\n    MatIconModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [\n    AuthLayoutComponent,\n    BackToLoginComponent,\n    ErrorPageComponent,\n    MainLayoutComponent,\n    TopnavComponent,\n  ],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class LayoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogRequestInterceptor.html":{"url":"interceptors/LogRequestInterceptor.html","title":"interceptor - LogRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-request.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogRequestInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    this._logger.devLog(req);\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogResponseInterceptor.html":{"url":"interceptors/LogResponseInterceptor.html","title":"interceptor - LogResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-response.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        this._logger.devLog(event);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/log.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxLogger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxLogger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateLoggerUri(logErrorUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logErrorUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerConfig, NGXLogger } from 'ngx-logger';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable()\nexport class LogService extends LogServiceAbstract {\n  constructor(private _ngxLogger: NGXLogger) {\n    super();\n  }\n\n  // tslint:disable-next-line:no-any\n  debug(message: any): void {\n    this._ngxLogger.debug(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  error(message: any): void {\n    this._ngxLogger.error(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  log(message: any): void {\n    this._ngxLogger.log(message);\n  }\n\n  updateLoggerUri(logErrorUri: string): void {\n    const updatedConfig: LoggerConfig = this._ngxLogger.getConfigSnapshot();\n    updatedConfig.serverLoggingUrl = logErrorUri;\n\n    this._ngxLogger.updateConfig(updatedConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogServiceAbstract.html":{"url":"classes/LogServiceAbstract.html","title":"class - LogServiceAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogServiceAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interface/service/log.service.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                devLog\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        devLog(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLoggerUri(apiBaseUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiBaseUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../../environments/environment';\n\nexport abstract class LogServiceAbstract {\n  // tslint:disable:no-any\n  public abstract debug(message: any): void;\n  public abstract error(message: any): void;\n  public abstract log(message: any): void;\n  // tslint:enable:no-any\n\n  public abstract updateLoggerUri(apiBaseUri: string): void;\n\n  // tslint:disable-next-line:no-any\n  public devLog(data: any): void {\n    if (environment.production) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginFormFactory.html":{"url":"injectables/LoginFormFactory.html","title":"injectable - LoginFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/login.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/login.form.factory.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/login.form.factory.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      password: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToSignUp\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _formFactory: LoginFormFactory, _loginService: LoginService, _logger: LogServiceAbstract, _router: Router, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    LoginFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _loginService\n                                                  \n                                                        \n                                                                    LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(result: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { LoginFormFactory } from '../../service/factory/form/login.form.factory';\nimport { LoginService } from '../../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(\n    private _authService: AuthService,\n    private _formFactory: LoginFormFactory,\n    private _loginService: LoginService,\n    private _logger: LogServiceAbstract,\n    private _router: Router,\n    private _toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this._authService.logout();\n    this.form = this._formFactory.getForm();\n  }\n\n  public login(): void {\n    this._loginService\n      .login(this.form.value.email, this.form.value.password)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Logged in...');\n    this._router.navigate(['home']);\n  }\n\n  // tslint:disable-next-line:no-any\n  protected _errorHandler(result: any): void {\n    this._logger.devLog(result);\n    this._toastr.error('Login error');\n  }\n\n  public goToSignUp(): void {\n    this._router.navigate(['auth', 'register']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.login.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.login.loginButton' | translate }}\n  \n\n\n  {{ 'pages.login.registerLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.login.title\\' | translate }}                                        close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                          {{ \\'pages.login.loginButton\\' | translate }}    {{ \\'pages.login.registerLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResult.html":{"url":"interfaces/LoginResult.html","title":"interface - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/login-result.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastLogin\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResult {\n  readonly token: string;\n  readonly lastLogin: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/login.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loginUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _setUser\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _logger: LogServiceAbstract, _userFactory: UserFactory, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _setUser(result: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loginUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _loginUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { LogServiceAbstract } from '../../core/interface/service/log.service.abstract';\nimport { LoginResult } from '../../core/model/payload/login-result.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\nimport { UserService } from '../../core/service/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private _loginUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _userFactory: UserFactory,\n    private _userService: UserService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._loginUri = `${config.core.apiBaseUri}${config.auth.loginUri}`;\n  }\n\n  public login(email: string, password: string): Observable {\n    return this._authService\n      .login({ email, password }, this._loginUri)\n      .pipe(map(this._setUser.bind(this)));\n  }\n\n  protected _setUser(result: LoginResult): Observable {\n    const user: User = this._userFactory.getFromPayload(result);\n    this._logger.devLog(user);\n    this._userService.setUser(user);\n\n    return of(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/auth/logout.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logoutUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _completeHandler\n                            \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _http: HttpClient, _router: Router, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _completeHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _completeHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _logoutUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _logoutUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/internal/operators';\nimport { ApiResponse } from '../../model/payload/api-response.model';\nimport { ErrorResponse } from '../../model/payload/error-response.model';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutService {\n  private _logoutUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logoutUri = `${config.core.apiBaseUri}${config.auth.logoutUri}`;\n  }\n\n  public logout(): void {\n    this._authService.logout();\n    this._authService.removeToken();\n    this._userService.clearUser();\n\n    this._http\n      .post(this._logoutUri, null)\n      .subscribe(\n        this._completeHandler.bind(this),\n        this._completeHandler.bind(this)\n      );\n  }\n\n  protected _completeHandler(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainLayoutComponent.html":{"url":"components/MainLayoutComponent.html","title":"component - MainLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-layout\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/main/main.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/main/main.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainLayoutComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterFormFactory.html":{"url":"injectables/RegisterFormFactory.html","title":"injectable - RegisterFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/register.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/register.form.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/register.form.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    const newPasswordControl: FormControl = this._formBuilder.control(null, [\n      Validators.required,\n      Validators.maxLength(255),\n    ]);\n\n    const confirmPasswordControl: FormControl = this._formBuilder.control(\n      null,\n      [Validators.required, CustomValidators.equalTo(newPasswordControl)]\n    );\n\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      name: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n      password: newPasswordControl,\n      confirmPassword: confirmPasswordControl,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPageComponent.html":{"url":"components/RegisterPageComponent.html","title":"component - RegisterPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _getErrorList\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_formFactory: RegisterFormFactory, _logger: LogServiceAbstract, _registerService: RegisterService, _router: Router, _toastr: ToastrService, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    RegisterFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _registerService\n                                                  \n                                                        \n                                                                    RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _getErrorList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getErrorList(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { User } from '../../../core/model/user.model';\nimport { UserFactory } from '../../../core/service/factory/user.factory';\nimport { RegisterFormFactory } from '../../service/factory/form/register.form.factory';\nimport { RegisterService } from '../../service/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterPageComponent implements OnInit {\n  public form: FormGroup;\n  constructor(\n    private _formFactory: RegisterFormFactory,\n    private _logger: LogServiceAbstract,\n    private _registerService: RegisterService,\n    private _router: Router,\n    private _toastr: ToastrService,\n    private _userFactory: UserFactory\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this._formFactory.getForm();\n  }\n\n  public register(): void {\n    const user: User = this._userFactory.getFromFormData(this.form.value);\n\n    this._registerService\n      .register(user)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Registeration successful!');\n    this._router.navigate(['auth', 'login']);\n  }\n\n  protected _errorHandler(errorResponse: HttpErrorResponse): void {\n    this._logger.devLog(errorResponse.error);\n\n    this._toastr.error(\n      `Registration error:${this._getErrorList(errorResponse)}`\n    );\n  }\n\n  protected _getErrorList(errorResponse: HttpErrorResponse): string {\n    let errorList: string = '';\n    Object.values(errorResponse.error).forEach((error: string) => {\n      errorList = `${errorList}${error}`;\n    });\n\n    return `${errorList}`;\n  }\n\n  public goToLogin(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.register.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Your name cannot be more than 255 characters - TODO lang\n        \n        \n          Name is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          {{ form.get('password').value?.length }} / 32\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n        \n        \n          Your password doesn't match the rules below yet - TODO lang\n          \n          \n        \n      \n      \n      \n\n      \n        \n        \n          close\n        \n        \n          Please confirm password - TODO lang\n        \n        \n          Passwords don't match - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.register.registerButton' | translate }}\n  \n\n\n  {{ 'pages.register.loginLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.register.title\\' | translate }}                                        close                          Your name cannot be more than 255 characters - TODO lang                          Name is required - TODO lang                                              close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          {{ form.get(\\'password\\').value?.length }} / 32                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                                  Your password doesn\\'t match the rules below yet - TODO lang                                                                              close                          Please confirm password - TODO lang                          Passwords don\\'t match - TODO lang                          {{ \\'pages.register.registerButton\\' | translate }}    {{ \\'pages.register.loginLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/register.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _http: HttpClient, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _registerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _registerUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiResponse } from '../../core/model/payload/api-response.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterService {\n  private _registerUri: string;\n\n  constructor(\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _userFactory: UserFactory\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._registerUri = `${config.core.apiBaseUri}${config.auth.registerUri}`;\n  }\n\n  public register(user: User): Observable {\n    return this._http.post(\n      this._registerUri,\n      this._userFactory.getPayload(user)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInspectorService.html":{"url":"injectables/RequestInspectorService.html","title":"injectable - RequestInspectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestInspectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/http/request-inspector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isConfigFileRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isConfigFileRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isConfigFileRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/http/request-inspector.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class RequestInspectorService {\n  // tslint:disable-next-line:no-any\n  public isConfigFileRequest(req: HttpRequest): boolean {\n    return req.url.endsWith('/assets/config.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Spork.html":{"url":"classes/Spork.html","title":"class - Spork","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Spork\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/model/spork.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _imageUri\n                            \n                            \n                                    Private\n                                    Readonly\n                                _price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    price\n                                \n                                \n                                    imageUri\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(price: Money, imageUri: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/model/spork.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        price\n                                                  \n                                                        \n                                                                    Money\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageUri\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _imageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _imageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/model/spork.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _price\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _price:     Money\n\n                    \n                \n                    \n                        \n                            Type :     Money\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/model/spork.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        price\n                    \n                \n\n                \n                    \n                        getprice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/home/model/spork.model.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imageUri\n                    \n                \n\n                \n                    \n                        getimageUri()\n                    \n                \n                            \n                                \n                                    Defined in src/app/home/model/spork.model.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as Money from 'js-money';\n\nexport class Spork {\n  private readonly _price: Money;\n  private readonly _imageUri: string;\n\n  constructor(price: Money, imageUri: string) {\n    this._price = price;\n    this._imageUri = imageUri;\n  }\n\n  get price(): Money {\n    return this._price;\n  }\n\n  get imageUri(): string {\n    return this._imageUri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SporkFactory.html":{"url":"injectables/SporkFactory.html","title":"injectable - SporkFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SporkFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/service/factory/spork.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getSpork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/service/factory/spork.factory.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(sporksPayload: SporkPayload[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/factory/spork.factory.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sporksPayload\n                                                        \n                                                                    SporkPayload[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSpork\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSpork(price: Money, imageUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/factory/spork.factory.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        price\n                                                        \n                                                                    Money\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        imageUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as Money from 'js-money';\n\nimport { SporkPayload } from '../../model/payload/spork.payload';\nimport { Spork } from '../../model/spork.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SporkFactory {\n  constructor() {}\n\n  public getFromPayload(sporksPayload: SporkPayload[]): Spork[] {\n    const sporks: Spork[] = [];\n\n    for (const sporkPayload of sporksPayload) {\n      sporks.push(\n        this.getSpork(\n          Money.fromDecimal(sporkPayload.price, 'USD'),\n          sporkPayload.imageUri\n        )\n      );\n    }\n\n    return sporks;\n  }\n\n  public getSpork(price: Money, imageUri: string): Spork {\n    return new Spork(price, imageUri);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SporkListComponent.html":{"url":"components/SporkListComponent.html","title":"component - SporkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SporkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/spork-list/spork-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spork-list\n            \n\n            \n                styleUrls\n                spork-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spork-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sporks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract, _sporkService: SporkService, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/spork-list/spork-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sporkService\n                                                  \n                                                        \n                                                                    SporkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sporks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sporks:     Spork[]\n\n                    \n                \n                    \n                        \n                            Type :     Spork[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { Spork } from '../../model/spork.model';\nimport { SporkService } from '../../service/spork.service';\n\n@Component({\n  selector: 'app-spork-list',\n  templateUrl: './spork-list.component.html',\n  styleUrls: ['./spork-list.component.scss'],\n})\nexport class SporkListComponent implements OnInit {\n  public sporks: Spork[];\n\n  constructor(\n    private _logger: LogServiceAbstract,\n    private _sporkService: SporkService,\n    private _toastr: ToastrService\n  ) {}\n\n  public ngOnInit(): void {\n    this._sporkService.getSporks().subscribe((sporks: Spork[]) => {\n      this.sporks = sporks;\n    }, this._errorHandler.bind(this));\n  }\n\n  protected _errorHandler(errorResponse: HttpErrorResponse): void {\n    this._logger.devLog(errorResponse.error);\n    this._toastr.error('There was a problem retrieving the sporks.');\n  }\n}\n\n    \n\n    \n        \n  \n    \n    ${{ spork.price.toString() | number:'.2-2' }}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ${{ spork.price.toString() | number:\\'.2-2\\' }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SporkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SporkPayload.html":{"url":"interfaces/SporkPayload.html","title":"interface - SporkPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SporkPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/model/payload/spork.payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        imageUri\n                                \n                                \n                                        price\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageUri\n                                    \n                                \n                                \n                                    \n                                        imageUri:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SporkPayload {\n  readonly imageUri: string;\n  readonly price: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SporkService.html":{"url":"injectables/SporkService.html","title":"injectable - SporkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SporkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/service/spork.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _getResult\n                            \n                            \n                                    Public\n                                getSporks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _http: HttpClient, _sporkFactory: SporkFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/service/spork.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sporkFactory\n                                                  \n                                                        \n                                                                    SporkFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _getResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getResult(resultPayload: SporkPayload[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resultPayload\n                                                        \n                                                                    SporkPayload[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSporks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSporks()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _getUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { SporkPayload } from '../model/payload/spork.payload';\nimport { Spork } from '../model/spork.model';\nimport { SporkFactory } from './factory/spork.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SporkService {\n  private _getUri: string;\n\n  constructor(\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _sporkFactory: SporkFactory\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._getUri = `${config.core.apiBaseUri}${config.spork.getUri}`;\n  }\n\n  public getSporks(): Observable {\n    return this._http.get(this._getUri).pipe(map(this._getResult.bind(this)));\n  }\n\n  protected _getResult(resultPayload: SporkPayload[]): Spork[] {\n    return this._sporkFactory.getFromPayload(resultPayload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/timing.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    const started: number = Date.now();\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return event;\n        }\n\n        const elapsed: number = Date.now() - started;\n        this._logger.devLog(\n          `Request for ${req.urlWithParams} took ${elapsed} ms.`\n        );\n\n        return event;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopnavComponent.html":{"url":"components/TopnavComponent.html","title":"component - TopnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/topnav/topnav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topnav\n            \n\n            \n                styleUrls\n                topnav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topnav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/topnav/topnav.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/topnav/topnav.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/topnav/topnav.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { LogoutService } from '../../../core/service/auth/logout.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.scss'],\n})\nexport class TopnavComponent implements OnInit {\n  constructor(private _logoutService: LogoutService) {}\n\n  public ngOnInit(): void {}\n\n  public logout(): void {\n    this._logoutService.logout();\n  }\n}\n\n    \n\n    \n        \n  {{ 'siteTitle' | translate }}\n  \n  \n    menu\n  \n\n  \n    \n      \n        Logout\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'siteTitle\\' | translate }}        menu                      Logout            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _email\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _lastLogin\n                            \n                            \n                                    Private\n                                    Readonly\n                                _name\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    lastLogin\n                                \n                                \n                                    name\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, name: string, lastLogin?: Date, password?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastLogin\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _lastLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _lastLogin:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastLogin\n                    \n                \n\n                \n                    \n                        getlastLogin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { autoserialize } from 'cerialize';\n\nexport class User {\n  @autoserialize\n  private readonly _email: string;\n  @autoserialize\n  private readonly _lastLogin?: Date;\n  @autoserialize\n  private readonly _name: string;\n  @autoserialize\n  private readonly _password?: string;\n\n  constructor(\n    email: string,\n    name: string,\n    lastLogin?: Date,\n    password?: string\n  ) {\n    this._email = email;\n    this._lastLogin = lastLogin;\n    this._name = name;\n    this._password = password;\n  }\n\n  get email(): string {\n    return this._email;\n  }\n\n  get lastLogin(): Date {\n    return this._lastLogin;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get password(): string {\n    return this._password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFactory.html":{"url":"injectables/UserFactory.html","title":"injectable - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/factory/user.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromFormData\n                            \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getPayload\n                            \n                            \n                                    Public\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dateHelper: DateHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/factory/user.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dateHelper\n                                                  \n                                                        \n                                                                    DateHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromFormData(formData: UserPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formData\n                                                        \n                                                                    UserPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(payload: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPayload(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     UserPayload\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser(email: string, name: string, lastLogin: Date, password?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastLogin\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as jwtDecode from 'jwt-decode';\n\nimport { JwtPayload } from '../../model/payload/jwt-payload.model';\nimport { LoginResult } from '../../model/payload/login-result.model';\nimport { UserPayload } from '../../model/payload/user-payload.model';\nimport { User } from '../../model/user.model';\nimport { DateHelperService } from '../helper/date-helper.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFactory {\n  constructor(private _dateHelper: DateHelperService) {}\n\n  public getPayload(user: User): UserPayload {\n    return {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n    };\n  }\n\n  public getFromFormData(formData: UserPayload): User {\n    return this.getUser(formData.email, formData.name, null, formData.password);\n  }\n\n  public getFromPayload(payload: LoginResult): User {\n    const decodedToken: JwtPayload = jwtDecode(payload.token);\n\n    return this.getUser(\n      decodedToken.email,\n      decodedToken.name,\n      payload.lastLogin\n        ? this._dateHelper.getDateFromUtcString(payload.lastLogin)\n        : null\n    );\n  }\n\n  public getUser(\n    email: string,\n    name: string,\n    lastLogin: Date,\n    password?: string\n  ): User {\n    return new User(email, name, lastLogin, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/user-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPayload {\n  readonly name: string;\n  readonly email: string;\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _key\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Deserialize, Serialize } from 'cerialize';\n\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private _key: string = 'user';\n\n  public getUser(): User {\n    return Deserialize(sessionStorage.getItem(this._key));\n  }\n\n  public setUser(user: User): void {\n    sessionStorage.setItem(this._key, JSON.stringify(Serialize(user)));\n  }\n\n  public clearUser(): void {\n    sessionStorage.removeItem(this._key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                configFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/component/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginPageComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/component/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterPageComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/login.form.factory.ts\n            \n            \n                injectable\n            \n            \n                LoginFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/register.form.factory.ts\n            \n            \n                injectable\n            \n            \n                RegisterFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/login.service.ts\n            \n            \n                injectable\n            \n            \n                LoginService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/service/register.service.ts\n            \n            \n                injectable\n            \n            \n                RegisterService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                AuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/component/lang-switch/lang-switch.component.ts\n            \n            \n                component\n            \n            \n                LangSwitchComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interface/service/log.service.abstract.ts\n            \n            \n                class\n            \n            \n                LogServiceAbstract\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/api-response.model.ts\n            \n            \n                interface\n            \n            \n                ApiResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/error-response.model.ts\n            \n            \n                interface\n            \n            \n                ErrorResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/jwt-payload.model.ts\n            \n            \n                interface\n            \n            \n                JwtPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/login-result.model.ts\n            \n            \n                interface\n            \n            \n                LoginResult\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/user-payload.model.ts\n            \n            \n                interface\n            \n            \n                UserPayload\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/auth/logout.service.ts\n            \n            \n                injectable\n            \n            \n                LogoutService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/service/factory/user.factory.ts\n            \n            \n                injectable\n            \n            \n                UserFactory\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/helper/date-helper.service.ts\n            \n            \n                injectable\n            \n            \n                DateHelperService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/http/request-inspector.service.ts\n            \n            \n                injectable\n            \n            \n                RequestInspectorService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/component/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/component/spork-list/spork-list.component.ts\n            \n            \n                component\n            \n            \n                SporkListComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/model/payload/spork.payload.ts\n            \n            \n                interface\n            \n            \n                SporkPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/model/spork.model.ts\n            \n            \n                class\n            \n            \n                Spork\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/service/factory/spork.factory.ts\n            \n            \n                injectable\n            \n            \n                SporkFactory\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/service/spork.service.ts\n            \n            \n                injectable\n            \n            \n                SporkService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layout/component/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthLayoutComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/component/back-to-login/back-to-login.component.ts\n            \n            \n                component\n            \n            \n                BackToLoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainLayoutComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/topnav/topnav.component.ts\n            \n            \n                component\n            \n            \n                TopnavComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-extensions/password-strength : ^3.2.0\n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngx-config/core : ^6.0.0\n        \n            @ngx-config/http-loader : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            add : ^2.0.6\n        \n            angular2-recaptcha : ^1.1.0\n        \n            angulartics2 : ^6.3.0\n        \n            bootstrap : ^4.1.3\n        \n            cerialize : ^0.1.18\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-money : ^0.6.3\n        \n            jwt-decode : ^2.2.0\n        \n            lint-staged : ^7.3.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.22.2\n        \n            ng2-ui-auth : ^9.0.0\n        \n            ng2-validation : ^4.2.0\n        \n            ngx-logger : ^3.3.2\n        \n            ngx-toastr : ^9.1.0\n        \n            popper.js : ^1.14.4\n        \n            rxjs : ~6.2.0\n        \n            yarn : ^1.10.1\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 6 Full-Stack Demo\nIn this project I am demonstrating my current patterns and understanding in the\nMEAN stack composed of Angular 6, Angular Material, Bootstrap 4, FontAwesome5, express,\nand MongoDB.\nThis is a two-day hack-a-thon to showcase my day-to-day toolbox, so still a lot to be done!\nBackend\nIn this application, an express REST API backed by MongoDB exposes a store\nselling sporks (it's a spoon and fork combined!).\nPassport and JWT are used for authentication against MongoDB and call authentication.\nTODO is JWT blacklisting and logout since Redis is not in the stack\nFrontend\nAn Angular Material front-end presents the customer with authentication functionality and a collection of sporks.\n(I haven't gotten to the cart and checkout yet)\nngx-translate and ngx-config provide runtime configuration and translation.\njs-money protects against arithmetic errors in price calculation.\nngx-logger feeds errors and events to an API endpoint, where winston feeds them to the Elastic Beanstalk logs\nangulartics2 feeds data to Google Analytics.  Compodoc provides documentation.\nOutdatedBrowser is used to redirect users of old browsers.\nPipeline\nCode is deployed CI/CD using AWS CodePipline/CodeBuild.\nThe backend is deployed to an EC2 using Elastic Beanstalk, and the frontend\nis exposed in an S3 bucket.\nStrict linting of TypeScript, SCSS, JSON and HTML on the front-end\nand ES6 in the backend enforce quality measures at pre-commit and in the pipeline. no-any, max-file-line-count, and\nimmutability are enforced.\nUnit test coverage is around 98% lines.\nNOTE: There is no effort made at this time to implement a config.json builder,\nruntime config.json is committed to the repository\nNOTE: e2e tests are disabled because of issues getting ChromeDriver to run in CI\nInstructions for Use\n** Please note that this project uses yarn and that package-lock.json is in\nthe .gitignore **\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Pete Burkindine\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAuthModule -->\n\nCoreModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\nLangSwitchComponent \n\nLangSwitchComponent \n\nLangSwitchComponent  -->\n\nCoreModule->LangSwitchComponent \n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nLangSwitchComponent\n\nLangSwitchComponent\n\nCoreModule -->\n\nLangSwitchComponent->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSporkListComponent\n\nSporkListComponent\n\nHomeModule -->\n\nSporkListComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nLayoutModule -->\n\nMainLayoutComponent->LayoutModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nLayoutModule -->\n\nTopnavComponent->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthConfig   (src/.../auth.config.ts)\n                        \n                        \n                            config   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/config/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthConfig:     ɵa\n\n                    \n                \n                    \n                        \n                            Type :     ɵa\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: config.core.apiBaseUri,\n  loginUrl: `${config.core.apiBaseUri}/auth/login`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : require('../../assets/config.json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
