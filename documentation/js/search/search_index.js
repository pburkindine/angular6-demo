var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.614,1,1.404]],["body/components/AppComponent.html",[0,2.422,1,1.966,2,0.442,3,0.442,4,1.937,5,1.937,6,1.937,7,0.324,8,1.562,9,1.291,10,3.486,11,1.937,12,3.486,13,2.811,14,3.486,15,2.905,16,2.905,17,2.905,18,2.905,19,0.381,20,2.343,21,1.493,22,4.84,23,0.873,24,4.356,25,3.873,26,3.873,27,3.873,28,1.134,29,1.937,30,3.123,31,3.486,32,3.486,33,3.873,34,1.247,35,2.905,36,0.509,37,0.051,38,0.916,39,0.663,40,0.509,41,2.905,42,1.937,43,0.916,44,2.958,45,1.937,46,1.937,47,1.966,48,1.315,49,1.315,50,2.905,51,0.884,52,0.442,53,1.315,54,0.984,55,0.984,56,1.315,57,1.562,58,0.381,59,0.272,60,1.77,61,1.937,62,1.937,63,1.937,64,1.937,65,1.937,66,1.937,67,1.937,68,1.937,69,2.905,70,2.343,71,1.315,72,2.343,73,2.905,74,2.905,75,3.873,76,1.937,77,1.937,78,0.027,79,0.027]],["title/modules/AppModule.html",[80,1.079,81,1.614]],["body/modules/AppModule.html",[1,2.323,2,0.313,3,0.313,7,0.23,30,1.108,37,0.051,43,0.584,51,1.183,52,0.313,53,1.509,54,0.697,55,1.917,56,0.933,57,1.108,58,0.632,59,0.312,71,0.933,78,0.02,79,0.02,80,0.867,81,2.938,82,0.802,83,2.256,84,1.899,85,2.62,86,1.108,87,1.108,88,1.108,89,1.108,90,1.108,91,1.917,92,2.204,93,2.204,94,2.204,95,2.204,96,1.294,97,2.204,98,1.792,99,1.108,100,0.802,101,0.933,102,3.776,103,3.529,104,2.222,105,0.536,106,1.792,107,2.222,108,2.222,109,1.108,110,2.222,111,2.222,112,1.374,113,2.798,114,1.374,115,2.222,116,1.108,117,1.374,118,1.108,119,2.256,120,2.222,121,1.374,122,2.222,123,2.222,124,1.108,125,1.374,126,0.933,127,1.374,128,0.933,129,0.933,130,0.933,131,1.374,132,1.374,133,0.802,134,1.374,135,1.108,136,1.374,137,1.374,138,0.933,139,1.374,140,0.762,141,0.697,142,1.374,143,0.802,144,1.374,145,1.374,146,1.374,147,1.374,148,2.222,149,1.374,150,1.374,151,1.374,152,1.297,153,1.374,154,1.297,155,1.108,156,1.792,157,1.374,158,1.374,159,1.108,160,1.374,161,1.374,162,1.374,163,1.374,164,1.374,165,2.222,166,0.933,167,2.222,168,1.374,169,1.374,170,1.374,171,1.374,172,1.374,173,1.374,174,1.374,175,1.374,176,1.374,177,1.374,178,3.447,179,1.374,180,1.374,181,1.108,182,1.374,183,1.374,184,1.374,185,0.933,186,3.776,187,3.529,188,0.471,189,0.413,190,0.471,191,1.108]],["title/modules/AppRoutingModule.html",[80,1.079,91,1.404]],["body/modules/AppRoutingModule.html",[2,0.786,3,0.786,7,0.577,37,0.051,51,1.079,52,0.786,58,0.85,59,0.607,78,0.039,79,0.039,80,1.345,91,2.196,106,3.488,188,1.181,189,1.036,190,1.181,191,2.779,192,3.447,193,4.325,194,4.325,195,2.937,196,2.779,197,2.012,198,3.447,199,3.447,200,3.447]],["title/interceptors/AuthTokenInterceptor.html",[92,1.614,201,0.726]],["body/interceptors/AuthTokenInterceptor.html",[2,0.562,3,0.562,7,0.413,9,1.095,19,0.485,21,1.565,23,1.04,28,0.962,34,1.04,36,0.909,37,0.051,38,0.909,39,0.79,40,0.909,43,1.05,47,1.251,51,0.989,52,0.562,58,0.485,59,0.346,78,0.032,79,0.032,92,2.02,105,0.962,128,1.673,129,1.673,130,1.673,188,0.845,189,1.303,190,0.845,197,2.334,201,0.647,202,3.999,203,2.465,204,2.03,205,2.465,206,4.336,207,2.465,208,3.46,209,1.251,210,2.03,211,2.201,212,2.465,213,1.538,214,2.03,215,1.251,216,1.757,217,0.79,218,4.336,219,1.095,220,1.988,221,1.251,222,1.251,223,2.465,224,3.999,225,2.465,226,1.439,227,1.988,228,1.988,229,1.988,230,1.988,231,1.988]],["title/interceptors/JsonHeaderInterceptor.html",[93,1.614,201,0.726]],["body/interceptors/JsonHeaderInterceptor.html",[2,0.55,3,0.55,7,0.404,9,1.071,19,0.474,20,2.747,21,1.552,23,1.024,28,1.541,34,1.188,36,0.633,37,0.051,38,0.633,39,0.902,40,0.633,43,0.895,47,2.006,48,1.637,49,1.637,51,0.902,52,0.55,58,0.474,59,0.338,60,2.006,78,0.031,79,0.031,93,1.989,105,0.94,188,1.168,189,1.362,190,1.168,197,1.989,201,0.633,204,2.006,209,1.224,210,2.013,211,2.18,213,1.514,214,2.006,215,1.224,216,1.729,217,0.777,219,1.071,221,1.224,222,1.224,227,1.944,228,1.944,229,1.944,231,1.944,232,4.294,233,2.411,234,4.294,235,3.407,236,2.411,237,3.407,238,3.407,239,3.407,240,2.411,241,3.407,242,2.411,243,2.411,244,2.411,245,2.411]],["title/interceptors/LogRequestInterceptor.html",[94,1.614,201,0.726]],["body/interceptors/LogRequestInterceptor.html",[2,0.589,3,0.589,7,0.432,9,1.147,19,0.507,21,1.592,23,1.074,28,1.394,34,1.074,36,0.938,37,0.051,38,0.938,39,0.815,40,0.938,43,1.076,51,1.06,52,0.589,58,0.507,59,0.362,60,1.814,78,0.033,79,0.033,94,2.085,96,1.516,105,1.007,140,1.516,141,1.31,143,1.506,189,1.232,201,0.678,204,2.081,209,1.31,210,1.966,211,2.246,213,1.588,214,2.081,215,1.31,216,1.814,217,0.815,219,1.147,221,1.31,222,1.31,226,2.085,246,3.305,247,2.58,248,1.752,249,2.782,250,2.58,251,2.426,252,2.58,253,1.752,254,1.752,255,2.58]],["title/interceptors/LogResponseInterceptor.html",[95,1.614,201,0.726]],["body/interceptors/LogResponseInterceptor.html",[2,0.548,3,0.548,7,0.402,9,1.068,19,0.472,21,1.551,23,1.022,28,1.326,34,1.022,36,0.893,37,0.051,38,0.893,39,0.776,40,0.893,43,1.126,51,1.072,52,0.548,58,0.472,59,0.337,60,1.726,78,0.031,79,0.031,95,1.984,96,1.47,105,0.938,140,1.47,141,1.22,143,1.403,188,0.824,189,1.289,190,0.824,201,0.631,204,2.002,209,1.22,210,1.905,211,2.177,213,1.511,214,2.002,215,1.726,216,1.726,217,0.776,219,1.068,221,1.22,222,1.22,226,1.403,246,3.181,248,1.632,249,2.678,251,2.308,253,1.632,254,1.632,256,2.403,257,2.403,258,2.403,259,2.741,260,1.938,261,1.938,262,1.938,263,1.938,264,1.403,265,1.938,266,2.403]],["title/injectables/LogService.html",[152,1.614,217,0.631]],["body/injectables/LogService.html",[2,0.595,3,0.595,7,0.436,19,0.512,23,1.081,28,1.017,34,1.335,36,1.167,37,0.051,38,1.167,39,1.014,40,1.167,43,1.082,44,3.272,47,2.594,51,0.94,52,0.595,55,1.323,58,0.512,59,0.366,78,0.033,79,0.033,133,1.521,140,1.233,141,1.323,152,2.1,217,0.94,220,2.102,267,2.102,268,2.901,269,2.443,270,2.901,271,2.606,272,4.443,273,2.606,274,3.598,275,2.901,276,2.606,277,3.323,278,2.901,279,2.606,280,2.901,281,2.606,282,2.606,283,2.606,284,2.606,285,2.606,286,2.606]],["title/classes/LogServiceAbstract.html",[59,0.388,140,0.948]],["body/classes/LogServiceAbstract.html",[2,0.57,3,0.57,7,0.418,19,0.491,21,1.792,23,1.05,34,1.311,36,1.145,37,0.05,38,1.145,39,0.995,40,1.145,43,1.205,44,3.382,47,2.569,51,0.57,58,0.491,59,0.49,78,0.032,79,0.032,140,1.197,188,1.197,189,1.05,190,1.197,268,2.816,269,2.371,270,2.816,275,2.816,277,3.247,278,2.816,280,2.816,287,2.013,288,5.126,289,3.492,290,2.497,291,3.492,292,2.497,293,2.013,294,2.497,295,2.497,296,1.695,297,2.497,298,2.497,299,2.497,300,2.497]],["title/injectables/RequestInspectorService.html",[96,0.948,217,0.631]],["body/injectables/RequestInspectorService.html",[2,0.746,3,0.746,7,0.548,19,0.643,21,1.581,23,1.258,34,0.983,36,0.859,37,0.05,38,0.859,39,0.746,40,0.859,43,1.099,51,0.955,52,0.746,58,0.643,59,0.459,78,0.038,79,0.038,96,1.434,105,1.276,188,1.121,189,0.983,190,1.121,210,2.161,213,1.453,217,1.053,301,3.374,302,2.638,303,4.184,304,4.184,305,3.271,306,4.184,307,3.271]],["title/interceptors/TimingInterceptor.html",[97,1.614,201,0.726]],["body/interceptors/TimingInterceptor.html",[2,0.525,3,0.525,7,0.385,9,1.023,19,0.453,21,1.526,23,0.991,28,1.286,34,0.991,36,0.866,37,0.051,38,0.866,39,0.752,40,0.866,43,1.105,51,1.057,52,0.525,58,0.453,59,0.323,60,1.674,78,0.03,79,0.03,96,1.441,97,1.925,105,0.898,140,1.441,141,1.169,143,1.344,188,0.789,189,1.264,190,0.789,197,1.925,201,0.605,204,1.956,209,1.169,210,1.869,211,2.135,213,1.465,214,1.956,215,1.674,216,1.674,217,0.752,219,1.023,221,1.169,222,1.169,226,1.344,248,1.563,249,2.615,251,2.239,253,1.563,254,1.563,259,2.659,260,1.857,261,1.857,262,1.857,263,1.857,264,1.344,265,1.857,308,2.302,309,2.302,310,2.302,311,2.239,312,3.297,313,3.297,314,3.297,315,2.302,316,2.302,317,2.302,318,2.302,319,2.302]],["title/coverage.html",[320,3.021]],["body/coverage.html",[0,1.809,1,1.574,7,0.519,8,2.5,37,0.049,39,0.707,59,0.435,78,0.037,79,0.037,96,1.062,101,2.744,138,2.104,140,1.062,152,1.809,154,2.359,156,2.5,166,2.104,185,2.104,217,0.922,267,2.5,287,2.5,296,2.744,301,2.5,302,2.5,320,2.5,321,2.104,322,3.1,323,3.1,324,4.306,325,3.1,326,5.068,327,3.259,328,3.236,329,2.104,330,4.042,331,3.1,332,2.5,333,2.5,334,3.1,335,3.1]],["title/dependencies.html",[82,1.937,336,1.873]],["body/dependencies.html",[37,0.051,52,0.55,53,2.313,54,1.729,55,2.387,56,1.637,78,0.031,79,0.031,82,1.407,84,1.637,109,1.944,116,1.944,118,1.944,119,2.747,124,1.944,126,1.637,128,2.682,129,1.637,130,1.637,133,1.407,135,1.944,196,1.944,219,1.071,337,2.411,338,5.147,339,2.411,340,3.407,341,2.411,342,2.411,343,2.411,344,2.411,345,2.411,346,2.411,347,2.411,348,2.411,349,1.944,350,3.407,351,2.411,352,2.411,353,2.411,354,2.411,355,2.411,356,2.411,357,2.411,358,2.411,359,2.411,360,2.411,361,2.411,362,2.411,363,2.411,364,2.411,365,2.411,366,2.411,367,2.411,368,2.411,369,2.411,370,2.411,371,2.411,372,1.944,373,2.411,374,2.411,375,2.411,376,2.411,377,2.411,378,2.411,379,2.411,380,3.407,381,2.411,382,2.411,383,2.411,384,2.411,385,2.411,386,2.411,387,2.411,388,2.411,389,2.411,390,2.411,391,2.411,392,2.411,393,2.411,394,2.411,395,2.411]],["title/miscellaneous/functions.html",[154,1.937,396,1.356]],["body/miscellaneous/functions.html",[19,0.748,36,1.207,37,0.047,38,1.207,40,1.207,78,0.042,79,0.042,101,2.583,154,2.22,155,3.068,159,3.068,166,3.121,185,3.121,396,2.22,397,4.597,398,4.597,399,4.597]],["title/index.html",[19,0.457,311,1.577,400,1.873]],["body/index.html",[13,1.914,37,0.039,54,1.205,55,1.989,70,2.717,72,1.914,78,0.031,79,0.031,85,1.967,100,1.385,126,1.611,133,1.385,264,1.385,269,1.611,293,1.914,321,1.611,329,1.611,336,1.914,349,1.914,372,1.914,401,4.503,402,3.369,403,2.373,404,3.369,405,2.373,406,3.369,407,2.373,408,2.373,409,2.373,410,2.373,411,2.373,412,2.373,413,3.369,414,2.717,415,3.917,416,3.369,417,4.264,418,2.373,419,2.373,420,3.917,421,2.373,422,2.373,423,1.914,424,2.373,425,2.373,426,2.373,427,2.373,428,2.373,429,2.373,430,2.373,431,3.88,432,3.369,433,2.373,434,2.373,435,3.917,436,3.369,437,2.373,438,2.373,439,2.373,440,2.373,441,2.373,442,2.373,443,2.373,444,2.373,445,2.373,446,2.373,447,2.373,448,2.373,449,3.369,450,2.373,451,2.373,452,2.373,453,2.373,454,2.373,455,2.373,456,2.373,457,2.373,458,3.369,459,2.373,460,2.373,461,2.373,462,2.373,463,3.917,464,2.373,465,2.373,466,2.373,467,2.373,468,2.373,469,2.373,470,2.373,471,2.373,472,2.373,473,2.373,474,2.373,475,2.373,476,2.373,477,2.373,478,2.373,479,2.373,480,2.373,481,2.373,482,2.373,483,2.373,484,2.373,485,2.373,486,2.373,487,2.373,488,2.373,489,2.373,490,2.373,491,2.373,492,2.373]],["title/license.html",[311,1.577,400,1.873,493,1.873]],["body/license.html",[7,0.475,37,0.035,78,0.035,79,0.035,85,1.656,100,1.656,230,2.288,264,1.656,321,1.926,414,2.288,423,2.288,431,3.074,493,2.288,494,2.837,495,4.304,496,2.837,497,2.837,498,2.837,499,2.837,500,3.811,501,2.837,502,2.837,503,2.837,504,2.837,505,3.811,506,2.837,507,4.602,508,5.201,509,2.837,510,3.811,511,4.304,512,2.837,513,4.304,514,3.811,515,2.837,516,2.837,517,2.837,518,2.837,519,2.837,520,2.837,521,2.837,522,2.837,523,2.837,524,2.837,525,2.837,526,2.837,527,2.837,528,3.811,529,3.811,530,2.837,531,2.837,532,3.811,533,2.837,534,2.837,535,2.837,536,2.837,537,2.837,538,2.837,539,2.837,540,2.837,541,2.837,542,2.837,543,2.837,544,2.837,545,2.837,546,2.837,547,2.837,548,2.837,549,2.837,550,2.837,551,2.837]],["title/modules.html",[80,1.461]],["body/modules.html",[37,0.044,54,2.075,78,0.044,79,0.044,80,1.594,81,2.386,91,2.075,552,4.087,553,4.087,554,4.797,555,4.087,556,4.087]],["title/overview.html",[557,3.021]],["body/overview.html",[0,1.726,1,2.591,37,0.049,58,0.581,59,0.415,71,2.007,78,0.036,79,0.036,80,1.529,81,3.225,82,1.726,83,2.384,84,2.007,85,1.726,86,2.384,87,2.384,88,2.384,89,2.384,90,2.384,91,2.231,92,2.565,93,2.565,94,2.565,95,2.565,96,1.506,97,2.565,98,3.16,99,2.384,100,1.726,181,3.16,217,0.675,324,2.384,557,2.384,558,3.918]],["title/routes.html",[195,2.543]],["body/routes.html",[37,0.045,78,0.045,79,0.045,195,2.914]],["title/miscellaneous/variables.html",[328,2.252,396,1.356]],["body/miscellaneous/variables.html",[19,0.643,37,0.051,39,1.11,48,3.302,49,3.302,78,0.038,79,0.038,138,3.133,178,2.638,296,3.491,327,2.638,328,2.221,329,3.133,332,2.638,333,2.638,396,1.909,559,4.184,560,3.271,561,3.271,562,3.271,563,3.271,564,3.271,565,3.271,566,3.271,567,4.184,568,3.271]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":324,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["0.1.18",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":558,"title":{},"body":{"overview.html":{}}}],["1.1.0",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["2.0.8",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":497,"title":{},"body":{"license.html":{}}}],["3.0.1",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":402,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":245,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["9.0.0",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["_angulartics2googletagmanag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["_configuretransl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["_consumeconfig",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["_injector",{"_index":208,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["_jsonencodeverb",{"_index":234,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["_logger",{"_index":251,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_ngxlogger",{"_index":274,"title":{},"body":{"injectables/LogService.html":{}}}],["_requestinspector",{"_index":249,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_titleservic",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["_translateservic",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["abov",{"_index":527,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":288,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["accept",{"_index":240,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["action",{"_index":546,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["against",{"_index":433,"title":{},"body":{"index.html":{}}}],["analyt",{"_index":452,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":521,"title":{},"body":{"license.html":{}}}],["angular",{"_index":401,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compil",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["angular/form",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["angulartics2",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":420,"title":{},"body":{"index.html":{}}}],["api/log",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.compon",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing.modul",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":418,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":241,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["appmodul",{"_index":81,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":91,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":550,"title":{},"body":{"license.html":{}}}],["assets/config.json",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lang",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["associ",{"_index":509,"title":{},"body":{"license.html":{}}}],["auth",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"dependencies.html":{}}}],["authconfig",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":432,"title":{},"body":{"index.html":{}}}],["author",{"_index":230,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["authreq",{"_index":227,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["authservic",{"_index":218,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authservice.gettoken",{"_index":225,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authtokeninterceptor",{"_index":92,"title":{"interceptors/AuthTokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"overview.html":{}}}],["avail",{"_index":556,"title":{},"body":{"modules.html":{}}}],["aw",{"_index":463,"title":{},"body":{"index.html":{}}}],["awesom",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":416,"title":{},"body":{"index.html":{}}}],["backend",{"_index":472,"title":{},"body":{"index.html":{}}}],["bar",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["baseurl",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":306,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["bootstrap",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":554,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":439,"title":{},"body":{"index.html":{}}}],["burkindin",{"_index":499,"title":{},"body":{"license.html":{}}}],["c",{"_index":496,"title":{},"body":{"license.html":{}}}],["call",{"_index":434,"title":{},"body":{"index.html":{}}}],["cart",{"_index":440,"title":{},"body":{"index.html":{}}}],["cerial",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["changedetectionstrategy.push",{"_index":443,"title":{},"body":{"index.html":{}}}],["charg",{"_index":504,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":244,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["check",{"_index":441,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":461,"title":{},"body":{"index.html":{}}}],["claim",{"_index":542,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/LogServiceAbstract.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":459,"title":{},"body":{"index.html":{}}}],["codedeploy",{"_index":467,"title":{},"body":{"index.html":{}}}],["codepipelin",{"_index":466,"title":{},"body":{"index.html":{}}}],["combin",{"_index":428,"title":{},"body":{"index.html":{}}}],["commit",{"_index":480,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":457,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["compos",{"_index":412,"title":{},"body":{"index.html":{}}}],["condit",{"_index":526,"title":{},"body":{"license.html":{}}}],["config",{"_index":329,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.core.apibaseuri",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.core.apibaseuri}/auth/login",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/auth.config",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["config/cor",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["config/http",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["configfactori",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configfactory(http",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["confighttpload",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["confighttploader(http",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["configload",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodul",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["configservic",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["configur",{"_index":448,"title":{},"body":{"index.html":{}}}],["connect",{"_index":551,"title":{},"body":{"license.html":{}}}],["consol",{"_index":299,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["console.log(data",{"_index":300,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["const",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_angulartics2googletagmanag",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_injector",{"_index":205,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["constructor(_logg",{"_index":248,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_ngxlogg",{"_index":271,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(priv",{"_index":220,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"injectables/LogService.html":{}}}],["consum",{"_index":436,"title":{},"body":{"index.html":{}}}],["contract",{"_index":547,"title":{},"body":{"license.html":{}}}],["copi",{"_index":507,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":495,"title":{},"body":{"license.html":{}}}],["core",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":320,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createtranslateload",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":408,"title":{},"body":{"index.html":{}}}],["custom",{"_index":437,"title":{},"body":{"index.html":{}}}],["d3",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["damag",{"_index":543,"title":{},"body":{"license.html":{}}}],["data",{"_index":293,"title":{},"body":{"classes/LogServiceAbstract.html":{},"index.html":{}}}],["date.now",{"_index":313,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["deal",{"_index":510,"title":{},"body":{"license.html":{}}}],["debug",{"_index":268,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["debug(messag",{"_index":275,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["declar",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["demo",{"_index":405,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":407,"title":{},"body":{"index.html":{}}}],["dep",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":460,"title":{},"body":{"index.html":{}}}],["devlog",{"_index":289,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["devlog(data",{"_index":291,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["direct",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["disabletimeout",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":519,"title":{},"body":{"license.html":{}}}],["document",{"_index":321,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["dynam",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":475,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":314,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["element",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["enablehtml",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":417,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":450,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":477,"title":{},"body":{"index.html":{}}}],["environ",{"_index":296,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":298,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["environments/environ",{"_index":297,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["error",{"_index":269,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"index.html":{}}}],["error(messag",{"_index":278,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["es6",{"_index":471,"title":{},"body":{"index.html":{}}}],["event",{"_index":264,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{},"license.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["expos",{"_index":421,"title":{},"body":{"index.html":{}}}],["express",{"_index":414,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":282,"title":{},"body":{"injectables/LogService.html":{}}}],["fals",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feed",{"_index":449,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"license.html":{}}}],["fit",{"_index":536,"title":{},"body":{"license.html":{}}}],["follow",{"_index":525,"title":{},"body":{"license.html":{}}}],["font",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["fork",{"_index":427,"title":{},"body":{"index.html":{}}}],["formsmodul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["free",{"_index":503,"title":{},"body":{"license.html":{}}}],["front",{"_index":435,"title":{},"body":{"index.html":{}}}],["full",{"_index":403,"title":{},"body":{"index.html":{}}}],["function",{"_index":154,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":523,"title":{},"body":{"license.html":{}}}],["get",{"_index":400,"title":{"index.html":{},"license.html":{}},"body":{}}],["git2s3",{"_index":486,"title":{},"body":{"index.html":{}}}],["gitignor",{"_index":492,"title":{},"body":{"index.html":{}}}],["googl",{"_index":451,"title":{},"body":{"index.html":{}}}],["grant",{"_index":502,"title":{},"body":{"license.html":{}}}],["graph",{"_index":555,"title":{},"body":{"modules.html":{}}}],["hammerj",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":239,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.servic",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["header.interceptor.service.t",{"_index":233,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:12",{"_index":235,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:17",{"_index":236,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["headers['cont",{"_index":243,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["helper",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["herebi",{"_index":501,"title":{},"body":{"license.html":{}}}],["holder",{"_index":540,"title":{},"body":{"license.html":{}}}],["hot",{"_index":464,"title":{},"body":{"index.html":{}}}],["html",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["http",{"_index":399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http/request",{"_index":253,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["http_interceptor",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":215,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httphandler",{"_index":211,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":216,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":210,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprespons",{"_index":259,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["https://github.com/aw",{"_index":484,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["immut",{"_index":445,"title":{},"body":{"index.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["impli",{"_index":534,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["includ",{"_index":513,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["inject",{"_index":217,"title":{"injectables/LogService.html":{},"injectables/RequestInspectorService.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":206,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["inspector.servic",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["inspector.service.t",{"_index":302,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["inspector.service.ts:7",{"_index":305,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["instanceof",{"_index":265,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["instruct",{"_index":487,"title":{},"body":{"index.html":{}}}],["integr",{"_index":481,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":204,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":209,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interceptor",{"_index":201,"title":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interface/service/log.service.abstract",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["isconfigfilerequest",{"_index":303,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest(req",{"_index":304,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["it'",{"_index":425,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["jsonheaderinterceptor",{"_index":93,"title":{"interceptors/JsonHeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["jwt",{"_index":430,"title":{},"body":{"index.html":{}}}],["kind",{"_index":533,"title":{},"body":{"license.html":{}}}],["lambda",{"_index":465,"title":{},"body":{"index.html":{}}}],["legend",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["level",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["liabil",{"_index":544,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":541,"title":{},"body":{"license.html":{}}}],["licens",{"_index":493,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":514,"title":{},"body":{"license.html":{}}}],["line:no",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["lint",{"_index":372,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["load",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["loader",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lock.json",{"_index":491,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":270,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["log(messag",{"_index":280,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["logger",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["loggermodul",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["loginurl",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logrequestinterceptor",{"_index":94,"title":{"interceptors/LogRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"overview.html":{}}}],["logresponseinterceptor",{"_index":95,"title":{"interceptors/LogResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogResponseInterceptor.html":{},"overview.html":{}}}],["logservic",{"_index":152,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logserviceabstract",{"_index":140,"title":{"classes/LogServiceAbstract.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["match",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":413,"title":{},"body":{"index.html":{}}}],["maxopen",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":411,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":535,"title":{},"body":{"license.html":{}}}],["merg",{"_index":517,"title":{},"body":{"license.html":{}}}],["messag",{"_index":277,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["miscellan",{"_index":396,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":494,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":516,"title":{},"body":{"license.html":{}}}],["modul",{"_index":80,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":415,"title":{},"body":{"index.html":{}}}],["ms",{"_index":319,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["multi",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["next",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(authreq",{"_index":231,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["next.handle(req",{"_index":226,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req).pip",{"_index":262,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["ng",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["ng2",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"dependencies.html":{}}}],["ng2uiauthmodul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["ng2uiauthmodule.forroot(authconfig",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["ngrx/effect",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":349,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":272,"title":{},"body":{"injectables/LogService.html":{}}}],["ngxloggerlevel",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.debug",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":539,"title":{},"body":{"license.html":{}}}],["note",{"_index":489,"title":{},"body":{"index.html":{}}}],["notic",{"_index":528,"title":{},"body":{"license.html":{}}}],["number",{"_index":312,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["observ",{"_index":214,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["obtain",{"_index":506,"title":{},"body":{"license.html":{}}}],["old",{"_index":456,"title":{},"body":{"index.html":{}}}],["onactivatetick",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":549,"title":{},"body":{"license.html":{}}}],["out",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outdatedbrows",{"_index":453,"title":{},"body":{"index.html":{}}}],["overview",{"_index":557,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":336,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pages.home.welcomemessag",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["paramet",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":537,"title":{},"body":{"license.html":{}}}],["passport",{"_index":429,"title":{},"body":{"index.html":{}}}],["password",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["pattern",{"_index":409,"title":{},"body":{"index.html":{}}}],["perform",{"_index":444,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":500,"title":{},"body":{"license.html":{}}}],["permit",{"_index":522,"title":{},"body":{"license.html":{}}}],["person",{"_index":505,"title":{},"body":{"license.html":{}}}],["pete",{"_index":498,"title":{},"body":{"license.html":{}}}],["pipelin",{"_index":458,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":488,"title":{},"body":{"index.html":{}}}],["popper.j",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":531,"title":{},"body":{"license.html":{}}}],["post",{"_index":237,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["pre",{"_index":479,"title":{},"body":{"index.html":{}}}],["preloadallmodul",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategi",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["privat",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["product",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":406,"title":{},"body":{"index.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["protect",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["provid",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["publish",{"_index":518,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":538,"title":{},"body":{"license.html":{}}}],["put",{"_index":238,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["qualiti",{"_index":478,"title":{},"body":{"index.html":{}}}],["quickstart",{"_index":483,"title":{},"body":{"index.html":{}}}],["quickstart/quickstart",{"_index":485,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["redirect",{"_index":454,"title":{},"body":{"index.html":{}}}],["regist",{"_index":438,"title":{},"body":{"index.html":{}}}],["req",{"_index":213,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clon",{"_index":228,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["req.url.endswith('/assets/config.json",{"_index":307,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.urlwithparam",{"_index":317,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":316,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request.interceptor.servic",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["request.interceptor.service.t",{"_index":247,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:14",{"_index":250,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:21",{"_index":252,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["requestinspectorservic",{"_index":96,"title":{"injectables/RequestInspectorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require('../../assets/config.json",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response.interceptor.servic",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.service.t",{"_index":256,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:16",{"_index":257,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:23",{"_index":258,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["rest",{"_index":419,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":512,"title":{},"body":{"license.html":{}}}],["result",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["right",{"_index":515,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["rout",{"_index":195,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routermodul",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["runtim",{"_index":447,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":219,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":261,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["scss",{"_index":470,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":423,"title":{},"body":{"index.html":{},"license.html":{}}}],["serverloggingurl",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["serverloglevel",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["service/http/request",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor/auth",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor/json",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor/log",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor/timing.interceptor.servic",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["service/log.servic",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["sethead",{"_index":229,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["shall",{"_index":529,"title":{},"body":{"license.html":{}}}],["sitetitl",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["softwar",{"_index":508,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["spoon",{"_index":426,"title":{},"body":{"index.html":{}}}],["spork",{"_index":424,"title":{},"body":{"index.html":{}}}],["src/.../app.module.t",{"_index":397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.config.t",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.routing.module.t",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/config/auth.config.t",{"_index":327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interface/service/log.service.abstract.t",{"_index":287,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{}}}],["src/app/interface/service/log.service.abstract.ts:4",{"_index":290,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/interface/service/log.service.abstract.ts:5",{"_index":294,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/interface/service/log.service.abstract.ts:6",{"_index":295,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/interface/service/log.service.abstract.ts:9",{"_index":292,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/service/http/request",{"_index":301,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["src/app/service/interceptor/auth",{"_index":202,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["src/app/service/interceptor/json",{"_index":232,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["src/app/service/interceptor/log",{"_index":246,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{}}}],["src/app/service/interceptor/timing.interceptor.service.t",{"_index":308,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/service/interceptor/timing.interceptor.service.ts:16",{"_index":309,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/service/interceptor/timing.interceptor.service.ts:23",{"_index":310,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/service/log.service.t",{"_index":267,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/service/log.service.ts:12",{"_index":276,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/service/log.service.ts:16",{"_index":279,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/service/log.service.ts:20",{"_index":281,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/service/log.service.ts:7",{"_index":273,"title":{},"body":{"injectables/LogService.html":{}}}],["src/environments/environment.prod.t",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":333,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabil",{"_index":446,"title":{},"body":{"index.html":{}}}],["stack",{"_index":404,"title":{},"body":{"index.html":{}}}],["stage",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":311,"title":{"index.html":{},"license.html":{}},"body":{"interceptors/TimingInterceptor.html":{}}}],["statement",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["stem",{"_index":482,"title":{},"body":{"index.html":{}}}],["store",{"_index":422,"title":{},"body":{"index.html":{}}}],["strength",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["strict",{"_index":468,"title":{},"body":{"index.html":{}}}],["string",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["stripe",{"_index":442,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":524,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":520,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":530,"title":{},"body":{"license.html":{}}}],["super",{"_index":283,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":552,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":553,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":260,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((ev",{"_index":263,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["taptodismiss",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":476,"title":{},"body":{"index.html":{}}}],["this._configuretransl",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this._consumeconfig",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this._injector.get",{"_index":223,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["this._jsonencodeverbs.includes(req.method.touppercas",{"_index":242,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["this._logger.devlog",{"_index":315,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["this._logger.devlog(ev",{"_index":266,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["this._logger.devlog(req",{"_index":255,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["this._ngxlogger.debug(messag",{"_index":284,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.error(messag",{"_index":285,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.log(messag",{"_index":286,"title":{},"body":{"injectables/LogService.html":{}}}],["this._requestinspector.isconfigfilerequest(req",{"_index":254,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["this._titleservice.settitle(sitetitl",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.get('sitetitle').subscribe((sitetitl",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.setdefaultlang('en",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use('en",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["this.titl",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["timinginterceptor",{"_index":97,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["titl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["toastr",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["token",{"_index":224,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.servic",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["token.interceptor.service.t",{"_index":203,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:12",{"_index":207,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:16",{"_index":212,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["took",{"_index":318,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["tort",{"_index":548,"title":{},"body":{"license.html":{}}}],["translat",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["translate/cor",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["translatepip",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:disable:no",{"_index":221,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:enable:no",{"_index":222,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["two",{"_index":462,"title":{},"body":{"index.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":469,"title":{},"body":{"index.html":{}}}],["ui",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"dependencies.html":{}}}],["undefin",{"_index":398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":410,"title":{},"body":{"index.html":{}}}],["unit",{"_index":474,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["us",{"_index":431,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":455,"title":{},"body":{"index.html":{}}}],["valid",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["valu",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["variabl",{"_index":328,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["warranti",{"_index":532,"title":{},"body":{"license.html":{}}}],["well",{"_index":473,"title":{},"body":{"index.html":{}}}],["whether",{"_index":545,"title":{},"body":{"license.html":{}}}],["without",{"_index":511,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":490,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configureTranslation\n                            \n                            \n                                    Protected\n                                _consumeConfig\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_angulartics2GoogleTagManager: Angulartics2GoogleTagManager, _titleService: Title, _translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _angulartics2GoogleTagManager\n                                                  \n                                                        \n                                                                    Angulartics2GoogleTagManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configureTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configureTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _consumeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _consumeConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading...'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  public title: string = 'Loading...';\n\n  constructor(\n    private _angulartics2GoogleTagManager: Angulartics2GoogleTagManager,\n    private _titleService: Title,\n    private _translateService: TranslateService\n  ) {\n    this._configureTranslation();\n  }\n\n  public ngOnInit(): void {\n    this._consumeConfig();\n  }\n\n  protected _consumeConfig(): void {\n    this._translateService.get('siteTitle').subscribe((siteTitle: string) => {\n      this._titleService.setTitle(siteTitle);\n      this.title = siteTitle;\n    });\n  }\n\n  protected _configureTranslation(): void {\n    this._translateService.setDefaultLang('en');\n    this._translateService.use('en');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.home.welcomeMessage' | translate }} {{ title }}!\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.home.welcomeMessage\\' | translate }} {{ title }}!  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nRequestInspectorService\n\nRequestInspectorService\n\nAppModule -->\n\nRequestInspectorService->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthTokenInterceptor\n                            \n                            \n                                     JsonHeaderInterceptor\n                            \n                            \n                                     LogRequestInterceptor\n                            \n                            \n                                     LogResponseInterceptor\n                            \n                            \n                                     RequestInspectorService\n                            \n                            \n                                     TimingInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ConfigLoader, ConfigModule, ConfigService } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { Ng2UiAuthModule } from 'ng2-ui-auth';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AuthConfig } from './config/auth.config';\nimport { LogServiceAbstract } from './interface/service/log.service.abstract';\nimport { RequestInspectorService } from './service/http/request-inspector.service';\nimport { AuthTokenInterceptor } from './service/interceptor/auth-token.interceptor.service';\nimport { JsonHeaderInterceptor } from './service/interceptor/json-header.interceptor.service';\nimport { LogRequestInterceptor } from './service/interceptor/log-request.interceptor.service';\nimport { LogResponseInterceptor } from './service/interceptor/log-response.interceptor.service';\nimport { TimingInterceptor } from './service/interceptor/timing.interceptor.service';\nimport { LogService } from './service/log.service';\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  return new ConfigHttpLoader(http, './assets/config.json');\n}\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient],\n    }),\n    FormsModule,\n    HttpClientModule,\n    LoggerModule.forRoot({\n      serverLoggingUrl: '/api/logs',\n      level: NgxLoggerLevel.DEBUG,\n      serverLogLevel: NgxLoggerLevel.ERROR,\n    }),\n    Ng2UiAuthModule.forRoot(AuthConfig),\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      enableHtml: true,\n      disableTimeOut: true,\n      maxOpened: 2,\n      onActivateTick: true,\n      tapToDismiss: true,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  declarations: [AppComponent],\n  providers: [\n    RequestInspectorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TimingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JsonHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogRequestInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n\n    ConfigService,\n    TranslatePipe,\n\n    {\n      provide: LogServiceAbstract,\n      useClass: LogService,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst appRoutes: Routes = [];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthTokenInterceptor.html":{"url":"interceptors/AuthTokenInterceptor.html","title":"interceptor - AuthTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/auth-token.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/auth-token.interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/auth-token.interceptor.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  public constructor(private _injector: Injector) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    const authService: AuthService = this._injector.get(\n      AuthService\n    );\n    const token: string = authService.getToken();\n    if (!token) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: { Authorization: token },\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JsonHeaderInterceptor.html":{"url":"interceptors/JsonHeaderInterceptor.html","title":"interceptor - JsonHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JsonHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/json-header.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonEncodeVerbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/json-header.interceptor.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jsonEncodeVerbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _jsonEncodeVerbs:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['POST', 'PUT']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JsonHeaderInterceptor implements HttpInterceptor {\n  private _jsonEncodeVerbs: string[] = ['POST', 'PUT'];\n\n  public constructor() {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    // tslint:disable-next-line:no-any\n    const headers: any = {\n      Accept: 'application/json',\n    };\n\n    if (this._jsonEncodeVerbs.includes(req.method.toUpperCase())) {\n      headers['Content-Type'] = 'application/json; charset=utf-8';\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: headers,\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogRequestInterceptor.html":{"url":"interceptors/LogRequestInterceptor.html","title":"interceptor - LogRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/log-request.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/log-request.interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/log-request.interceptor.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogRequestInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    this._logger.devLog(req);\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogResponseInterceptor.html":{"url":"interceptors/LogResponseInterceptor.html","title":"interceptor - LogResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/log-response.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/log-response.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/log-response.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        this._logger.devLog(event);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/log.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxLogger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxLogger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/log.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/log.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/log.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable()\nexport class LogService extends LogServiceAbstract {\n  constructor(private _ngxLogger: NGXLogger) {\n    super();\n  }\n\n  debug(message: string): void {\n    this._ngxLogger.debug(message);\n  }\n\n  error(message: string): void {\n    this._ngxLogger.error(message);\n  }\n\n  log(message: string): void {\n    this._ngxLogger.log(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogServiceAbstract.html":{"url":"classes/LogServiceAbstract.html","title":"class - LogServiceAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogServiceAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/service/log.service.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                devLog\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interface/service/log.service.abstract.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        devLog(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interface/service/log.service.abstract.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interface/service/log.service.abstract.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interface/service/log.service.abstract.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../environments/environment';\n\nexport abstract class LogServiceAbstract {\n  public abstract debug(message: string): void;\n  public abstract error(message: string): void;\n  public abstract log(message: string): void;\n\n  // tslint:disable-next-line:no-any\n  public devLog(data: any): void {\n    if (environment.production) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInspectorService.html":{"url":"injectables/RequestInspectorService.html","title":"injectable - RequestInspectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestInspectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http/request-inspector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isConfigFileRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isConfigFileRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isConfigFileRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/http/request-inspector.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RequestInspectorService {\n  // tslint:disable-next-line:no-any\n  public isConfigFileRequest(req: HttpRequest): boolean {\n    return req.url.endsWith('/assets/config.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/timing.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/timing.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/timing.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    const started: number = Date.now();\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        const elapsed: number = Date.now() - started;\n        this._logger.devLog(\n          `Request for ${req.urlWithParams} took ${elapsed} ms.`\n        );\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                configFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                AuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interface/service/log.service.abstract.ts\n            \n            \n                class\n            \n            \n                LogServiceAbstract\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/http/request-inspector.service.ts\n            \n            \n                injectable\n            \n            \n                RequestInspectorService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/service/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngx-config/core : ^6.0.0\n        \n            @ngx-config/http-loader : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            angular2-recaptcha : ^1.1.0\n        \n            angulartics2 : ^6.3.0\n        \n            bootstrap : ^4.1.3\n        \n            cerialize : ^0.1.18\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            lint-staged : ^7.3.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.22.2\n        \n            ng-password-helper : ^5.0.3\n        \n            ng2-password-strength-bar : ^1.2.1\n        \n            ng2-ui-auth : ^9.0.0\n        \n            ng2-validation : ^4.2.0\n        \n            ngx-logger : ^3.3.2\n        \n            ngx-toastr : ^9.1.0\n        \n            popper.js : ^1.14.4\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 6 Full-Stack Demo\nIn this project I am demonstrating my current patterns and understanding in the\nMEAN stack composed of Angular 6, Angular Material, express,\nand MongoDB.\nBack-end\nIn this application, an express REST API backed by MongoDB exposes a store\nselling sporks (it's a spoon and fork combined!).\nPassport and JWT are used for authentication against MongoDB and call authentication.\nFront-end\nAn Angular Material front-end consumes the API.  The customer registers, builds a cart, then checks out using Stripe.\nIn the Angular app, we use @ngrx/store and ChangeDetectionStrategy.Push for performance, immutability and stability.\nngx-translate and ngx-config provide runtime configuration and translation.\nngx-logger feeds errors and events to an API endpoint to be consumed, and angulartics2 feeds data to Google Analytics.\nOutdatedBrowser is used to redirect users of old browsers.  Compodoc provides documentation.\nPipeline\nCode is deployed CI/CD as two AWS \"hot\" lambdas using AWS CodePipeline and CodeDeploy.\nStrict linting of TypeScript, SCSS and HTML in the front-end\nand ES6 in the backend, as well as unit and e2e testing, enforce quality at pre-commit and in the pipeline.\nThis integration stems from the AWS QuickStart:\nhttps://github.com/aws-quickstart/quickstart-git2s3\nInstructions for Use\n** Please note that this project uses yarn and that package-lock.json is in\nthe .gitignore **\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Pete Burkindine\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nRequestInspectorService\n\nRequestInspectorService\n\nAppModule -->\n\nRequestInspectorService->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthConfig   (src/.../auth.config.ts)\n                        \n                        \n                            config   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/config/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthConfig:     ɵa\n\n                    \n                \n                    \n                        \n                            Type :     ɵa\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: config.core.apiBaseUri,\n  loginUrl: `${config.core.apiBaseUri}/auth/login`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : require('../../assets/config.json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
