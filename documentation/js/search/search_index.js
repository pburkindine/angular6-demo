var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiResponse.html",[0,1.466,1,2.333]],["body/interfaces/ApiResponse.html",[0,2.509,1,3.992,2,0.354,3,0.354,4,0.232,5,4.17,6,3.681,7,0.533,8,2.509,9,5.592,10,1.96,11,0.737,12,0.023,13,0.312,14,3.023,15,0.02,16,0.02]],["title/components/AppComponent.html",[17,1.003,18,1.466]],["body/components/AppComponent.html",[2,0.168,3,0.168,4,0.111,7,0.254,10,1.487,11,0.534,12,0.024,13,0.149,15,0.012,16,0.012,17,1.503,18,2.041,19,1.324,20,1.324,21,1.324,22,1.986,23,1.169,24,2.438,25,1.324,26,3.307,27,3.06,28,1.509,29,2.015,30,3.559,31,2.015,32,3.559,33,0.707,34,3.357,35,3.249,36,4.814,37,1.399,38,2.725,39,3.559,40,0.857,41,2.34,42,4.086,43,2.907,44,2.963,45,2.256,46,1.793,47,4.308,48,4.814,49,4.308,50,4.814,51,0.961,52,2.34,53,0.754,54,0.777,55,0.754,56,3.559,57,2.34,58,0.834,59,2.176,60,2.34,61,2.34,62,3.559,63,2.34,64,1.986,65,0.592,66,0.277,67,1.579,68,1.44,69,1.414,70,1.324,71,1.44,72,1.986,73,1.579,74,0.168,75,2.057,76,2.34,77,1.579,78,2.34,79,2.34,80,0.529,81,0.496,82,0.529,83,0.872,84,1.225,85,1.579,86,2.34,87,2.34,88,2.34,89,2.34,90,2.34,91,3.559,92,3.559,93,0.929,94,1.864,95,2.015,96,2.015,97,2.725,98,1.324,99,1.324,100,0.929,101,0.872,102,1.324,103,0.992,104,1.225,105,1.324,106,0.929,107,0.929,108,1.324,109,0.929,110,1.324,111,0.929,112,1.139,113,1.324]],["title/modules/AppModule.html",[114,0.943,115,2.333]],["body/modules/AppModule.html",[2,0.123,3,0.123,4,0.081,12,0.024,13,0.257,15,0.009,16,0.009,18,2.465,42,1.452,44,1.712,46,1.036,58,0.482,65,0.73,66,0.202,67,1.877,68,1.053,69,1.895,70,0.968,71,1.053,72,1.452,73,1.154,74,0.2,80,0.387,81,0.363,82,0.387,93,0.679,101,0.637,114,0.759,115,4.424,116,0.896,117,1.989,118,1.84,119,3.044,120,1.452,121,1.452,122,1.452,123,1.452,124,1.452,125,2.937,126,2.937,127,2.937,128,2.937,129,3.221,130,3.221,131,3.221,132,3.221,133,3.221,134,1.712,135,1.053,136,0.896,137,1.282,138,4.772,139,3.78,140,2.781,141,0.832,142,2.361,143,1.456,144,2.361,145,2.361,146,1.053,147,2.781,148,2.361,149,1.452,150,1.712,151,0.776,152,3.514,153,1.711,154,1.711,155,1.452,156,2.983,157,2.781,158,1.282,159,2.781,160,2.781,161,1.452,162,1.711,163,1.282,164,1.711,165,0.832,166,0.896,167,1.711,168,1.711,169,1.154,170,1.711,171,1.154,172,1.711,173,1.711,174,1.282,175,1.711,176,1.711,177,1.711,178,1.711,179,1.711,180,1.711,181,2.781,182,1.711,183,1.711,184,1.711,185,1.877,186,1.711,187,1.711,188,1.711,189,1.154,190,1.452,191,1.877,192,1.711,193,1.711,194,1.877,195,1.452,196,1.877,197,1.711,198,1.711,199,1.452,200,1.711,201,1.711,202,1.452,203,1.711,204,1.711,205,2.781,206,1.282,207,2.781,208,1.711,209,1.711,210,1.452,211,1.711,212,1.711,213,1.711,214,1.711,215,1.711,216,1.711,217,1.711,218,3.657,219,1.711,220,1.711,221,1.452,222,1.711,223,1.711,224,1.711,225,1.711,226,1.452,227,1.711,228,1.711,229,1.282,230,5.03,231,4.454,232,0.896]],["title/modules/AppRoutingModule.html",[114,0.943,125,2.127]],["body/modules/AppRoutingModule.html",[2,0.26,3,0.26,4,0.171,12,0.025,13,0.309,15,0.016,16,0.016,17,1.707,65,0.701,66,0.428,74,0.35,80,0.817,81,0.766,82,0.817,83,1.347,100,2.183,106,1.932,111,1.932,114,0.987,125,2.994,143,2.547,150,2.994,151,1.64,232,1.893,233,3.615,234,4.864,235,2.994,236,3.615,237,3.645,238,3.615,239,3.615,240,3.615,241,3.615,242,5.209,243,3.615,244,4.864,245,3.069,246,3.069,247,3.615,248,3.615,249,3.615,250,3.615]],["title/guards/AuthGuard.html",[237,2.59,251,2.59]],["body/guards/AuthGuard.html",[2,0.271,3,0.271,4,0.178,7,0.408,11,0.565,12,0.024,13,0.239,15,0.017,16,0.017,23,1.237,28,1.597,33,0.992,37,1.595,40,1.204,51,0.928,53,0.798,54,0.608,55,0.798,58,0.973,65,0.648,66,0.446,74,0.271,75,1.985,101,1.403,151,1.709,165,1.833,166,1.972,218,2.542,237,3.746,246,5.428,251,2.822,252,3.766,253,2.542,254,3.679,255,5.612,256,4.034,257,3.766,258,3.374,259,3.766,260,3.746,261,0.75,262,3.766,263,1.709,264,3.766,265,3.766,266,2.822]],["title/components/AuthLayoutComponent.html",[17,1.003,100,1.373]],["body/components/AuthLayoutComponent.html",[2,0.205,3,0.205,4,0.135,7,0.309,8,1.745,10,1.493,11,0.618,12,0.024,13,0.181,15,0.014,16,0.014,17,1.632,18,1.206,19,1.61,20,1.61,21,1.61,23,1.352,24,2.736,25,1.61,26,3.501,27,3.239,29,2.329,31,2.329,33,0.817,34,2.975,35,3.575,37,1.24,38,2.998,40,0.685,43,2.777,44,3.26,51,0.983,53,0.603,54,0.78,55,0.603,58,0.713,59,1.973,65,0.446,66,0.337,69,1.13,70,1.61,74,0.205,77,1.92,80,0.643,81,0.603,82,0.643,83,1.06,84,1.49,85,1.92,93,1.13,94,2.155,95,2.329,96,2.329,97,2.998,98,1.61,99,1.61,100,2.104,101,1.801,102,1.61,103,1.206,104,1.49,105,1.61,106,1.13,107,1.13,108,1.61,109,1.13,110,1.61,111,1.13,112,1.384,113,1.61,267,2.415,268,4.115,269,4.115,270,4.115,271,5.297,272,2.845,273,4.115,274,2.845,275,2.845,276,1.751,277,2.845,278,2.845,279,4.115,280,2.532]],["title/modules/AuthModule.html",[114,0.943,126,2.127]],["body/modules/AuthModule.html",[2,0.259,3,0.259,4,0.17,12,0.024,13,0.308,15,0.016,16,0.016,65,0.721,66,0.425,67,2.423,69,1.426,71,2.21,74,0.349,80,0.812,81,0.761,82,0.812,93,1.426,111,2.505,114,1.321,116,1.881,117,3.101,118,1.881,119,1.881,126,3.882,134,2.98,135,2.21,136,1.881,143,2.536,144,4.111,145,4.111,146,2.21,148,4.111,149,3.048,150,2.98,151,1.629,158,3.628,232,1.881,281,3.048,282,3.048,283,3.591,284,3.268,285,2.21,286,4.843,287,4.111,288,4.843,289,4.111,290,4.843,291,4.843,292,2.691,293,3.591]],["title/interceptors/AuthTokenInterceptor.html",[129,2.333,294,1.466]],["body/interceptors/AuthTokenInterceptor.html",[2,0.237,3,0.237,4,0.155,7,0.356,10,1.015,11,0.684,12,0.024,13,0.209,15,0.015,16,0.015,23,1.079,33,0.905,37,1.522,40,0.791,51,0.846,53,0.966,54,0.736,55,0.966,58,0.907,65,0.613,66,0.389,74,0.237,80,0.743,81,1.198,82,0.743,83,1.949,101,1.224,129,3.075,141,1.599,165,1.599,166,1.721,254,3.477,261,0.684,276,2.022,294,1.393,295,5.232,296,3.286,297,3.22,298,3.286,299,5.65,300,3.286,301,4.557,302,2.022,303,3.359,304,3.477,305,3.286,306,2.579,307,2.74,308,2.022,309,2.805,310,1.599,311,1.86,312,1.86,313,3.286,314,4.441,315,3.286,316,2.217,317,2.789,318,2.789,319,2.789,320,2.789,321,2.789]],["title/components/BackToLoginComponent.html",[17,1.003,103,1.466]],["body/components/BackToLoginComponent.html",[2,0.234,3,0.234,4,0.154,7,0.352,12,0.024,13,0.206,15,0.015,16,0.015,17,1.715,18,1.377,19,1.837,20,1.837,21,1.837,23,1.485,24,2.942,25,1.837,26,3.623,27,3.352,29,2.558,31,2.558,33,0.897,37,1.333,38,3.181,40,1.252,51,0.839,54,0.73,58,0.563,59,1.683,65,0.352,66,0.384,74,0.234,93,1.289,94,2.366,95,2.558,96,2.558,97,3.181,98,1.837,99,1.837,100,1.289,101,1.209,102,1.837,103,2.384,104,3.287,105,1.837,106,1.289,107,1.289,108,1.837,109,1.289,110,1.837,111,1.289,112,2.53,113,1.837,280,2.781,322,4.412,323,3.895,324,2.755,325,3.836,326,3.836,327,3.246,328,3.246,329,4.519,330,4.519]],["title/modules/CoreModule.html",[114,0.943,127,2.127]],["body/modules/CoreModule.html",[2,0.343,3,0.343,4,0.225,12,0.024,13,0.302,15,0.02,16,0.02,65,0.679,66,0.563,74,0.418,80,1.076,81,1.009,82,1.076,114,1.299,117,2.695,127,3.572,143,3.04,232,2.493,284,3.917,285,2.93,331,4.761]],["title/injectables/DateHelperService.html",[261,0.519,332,2.333]],["body/injectables/DateHelperService.html",[2,0.287,3,0.287,4,0.189,7,0.433,10,1.888,11,0.599,12,0.024,13,0.253,15,0.018,16,0.018,28,1.691,33,1.03,37,1.48,51,0.74,53,0.845,54,0.644,55,0.845,58,0.9,65,0.563,66,0.472,74,0.287,83,1.486,196,2.692,261,0.866,263,1.81,332,3.503,333,4.407,334,3.385,335,5.191,336,5.191,337,3.988,338,5.191,339,4.868,340,4.899,341,3.988,342,3.988,343,3.988,344,3.988,345,3.988,346,3.988,347,3.988,348,3.988,349,3.988,350,3.988]],["title/injectables/ErrorHandlerService.html",[191,2.333,261,0.519]],["body/injectables/ErrorHandlerService.html",[2,0.289,3,0.289,4,0.19,7,0.436,11,0.783,12,0.024,13,0.255,15,0.018,16,0.018,23,1.32,28,1.704,33,1.035,40,0.968,45,2.732,46,2.283,51,0.968,53,1.106,54,0.842,55,1.106,58,0.696,59,1.943,65,0.566,66,0.475,74,0.289,80,0.908,81,0.852,82,0.908,107,1.596,142,4.428,191,3.52,261,0.869,263,1.823,276,2.473,351,4.917,352,3.411,353,5.216,354,2.712,355,4.018,356,5.216,357,4.018,358,2.473,359,4.018,360,4.018]],["title/components/ErrorPageComponent.html",[17,1.003,106,1.373]],["body/components/ErrorPageComponent.html",[2,0.245,3,0.245,4,0.161,7,0.369,12,0.024,13,0.216,15,0.016,16,0.016,17,1.744,18,1.442,19,1.924,20,1.924,21,1.924,23,1.533,24,3.015,25,1.924,26,3.664,27,3.39,29,2.64,31,2.64,33,0.926,38,3.245,40,1.283,51,0.866,54,0.753,58,0.589,59,1.738,65,0.369,66,0.402,74,0.245,93,1.35,94,2.443,95,2.64,96,2.64,97,3.245,98,1.924,99,1.924,100,1.35,101,1.266,102,1.924,103,1.442,104,1.78,105,1.924,106,2.277,107,2.115,108,1.924,109,1.35,110,1.924,111,1.35,112,1.654,113,1.924,280,2.871,361,2.885,362,4.665,363,4.665,364,4.665,365,3.399,366,3.399,367,4.665]],["title/interfaces/ErrorResponse.html",[0,1.466,368,2.333]],["body/interfaces/ErrorResponse.html",[0,2.442,2,0.338,3,0.338,4,0.222,6,3.521,7,0.51,8,2.442,9,5.508,10,2.092,11,0.864,12,0.023,13,0.299,14,3.544,15,0.019,16,0.019,107,2.577,368,3.886,369,3.989]],["title/components/HomeComponent.html",[17,1.003,109,1.373]],["body/components/HomeComponent.html",[2,0.25,3,0.25,4,0.164,7,0.377,12,0.023,13,0.221,15,0.016,16,0.016,17,1.758,18,1.474,19,1.967,20,1.967,21,1.967,23,1.556,24,3.05,25,1.967,26,3.683,27,3.407,29,2.681,31,2.681,33,0.94,38,3.275,40,1.298,51,0.879,54,0.765,58,0.602,59,1.764,65,0.377,66,0.411,74,0.25,93,1.38,94,2.48,95,2.681,96,2.681,97,3.275,98,1.967,99,1.967,100,1.38,101,1.295,102,1.967,103,1.474,104,1.82,105,1.967,106,1.38,107,1.38,108,1.967,109,2.298,110,1.967,111,1.38,112,1.691,113,1.967,245,4.911,370,2.95,371,4.737,372,4.737,373,3.476,374,3.476,375,4.737]],["title/modules/HomeModule.html",[114,0.943,376,2.333]],["body/modules/HomeModule.html",[2,0.288,3,0.288,4,0.189,12,0.024,13,0.331,15,0.018,16,0.018,65,0.705,66,0.474,74,0.375,80,0.905,81,0.849,82,0.905,93,1.59,109,2.583,114,1.42,116,2.096,117,3.273,118,2.096,119,2.096,134,3.203,135,2.464,136,2.096,143,2.725,232,2.096,284,3.512,285,2.464,376,4.531,377,3.398,378,3.398,379,3.398,380,4.003,381,4.003,382,3.398,383,4.003]],["title/modules/HomeRoutingModule.html",[114,0.943,380,2.127]],["body/modules/HomeRoutingModule.html",[2,0.315,3,0.315,4,0.207,12,0.024,13,0.35,15,0.019,16,0.019,17,1.27,65,0.686,66,0.518,74,0.397,80,0.989,81,0.927,82,0.989,83,1.63,109,2.188,114,1.194,143,2.885,150,3.39,151,1.985,232,2.291,235,3.39,242,3.714,380,3.39,382,3.714,384,4.376,385,4.376,386,4.376,387,3.714,388,4.376]],["title/interceptors/JsonHeaderInterceptor.html",[130,2.333,294,1.466]],["body/interceptors/JsonHeaderInterceptor.html",[2,0.232,3,0.232,4,0.152,7,0.349,8,1.904,10,1.598,11,0.776,12,0.024,13,0.204,15,0.015,16,0.015,23,1.057,33,0.891,37,1.51,40,1.246,51,0.96,53,0.682,54,0.519,55,0.682,58,0.778,65,0.561,66,0.381,74,0.232,75,2.055,80,1.015,81,1.248,82,1.015,83,1.673,130,3.031,141,1.566,261,0.674,294,1.364,297,3.184,302,1.98,303,3.334,304,3.446,306,2.542,307,2.709,308,1.98,309,2.764,310,1.566,311,1.821,312,1.821,317,2.731,318,2.731,319,2.731,321,2.731,389,5.599,390,3.217,391,5.599,392,4.491,393,3.217,394,2.41,395,2.41,396,4.491,397,4.491,398,4.491,399,3.217,400,4.491,401,3.217,402,3.217,403,3.217,404,3.217]],["title/interfaces/JwtPayload.html",[0,1.466,405,2.333]],["body/interfaces/JwtPayload.html",[0,2.442,2,0.338,3,0.338,4,0.222,7,0.51,8,2.442,10,2.092,11,0.864,12,0.023,13,0.299,14,3.544,15,0.019,16,0.019,54,1.048,405,3.886,406,3.989,407,3.989,408,3.673]],["title/modules/LayoutModule.html",[114,0.943,128,2.127]],["body/modules/LayoutModule.html",[2,0.256,3,0.256,4,0.168,12,0.024,13,0.306,15,0.016,16,0.016,65,0.719,66,0.421,69,1.412,71,2.188,74,0.346,80,0.804,81,0.754,82,0.804,93,1.412,100,2.498,103,2.667,106,2.498,114,1.313,116,1.862,117,3.086,118,1.862,119,1.862,128,4.125,134,2.961,135,2.188,136,1.862,143,2.519,150,2.961,151,1.613,158,3.604,232,1.862,284,3.246,285,2.188,287,4.083,289,4.083,292,2.664,323,2.664,409,3.018,410,3.018,411,3.556,412,3.556,413,3.556,414,3.556,415,3.556]],["title/interceptors/LogRequestInterceptor.html",[131,2.333,294,1.466]],["body/interceptors/LogRequestInterceptor.html",[2,0.247,3,0.247,4,0.162,7,0.372,11,0.705,12,0.024,13,0.218,15,0.016,16,0.016,23,1.127,33,0.932,37,1.546,40,1.131,45,2.459,46,2.144,51,0.872,53,0.995,54,0.758,55,0.995,58,0.928,65,0.654,66,0.406,74,0.247,75,1.865,81,1.135,131,3.169,141,1.67,261,0.705,294,1.455,297,3.294,302,2.112,303,3.258,304,3.542,306,2.658,307,2.803,308,2.112,309,2.89,310,1.67,311,1.942,312,1.942,316,3.169,354,2.316,358,2.112,416,4.543,417,3.432,418,4.01,419,3.258,420,3.432,421,3.432,422,2.571,423,2.571,424,2.571,425,3.432]],["title/interceptors/LogResponseInterceptor.html",[132,2.333,294,1.466]],["body/interceptors/LogResponseInterceptor.html",[2,0.231,3,0.231,4,0.152,7,0.348,11,0.673,12,0.024,13,0.204,15,0.015,16,0.015,23,1.054,33,0.89,37,1.509,40,1.079,45,2.347,46,2.083,51,0.832,53,0.95,54,0.724,55,0.95,58,0.969,65,0.661,66,0.38,74,0.231,75,1.78,80,0.725,81,1.185,82,0.725,132,3.024,141,1.561,261,0.673,294,1.36,297,3.179,302,1.974,303,3.165,304,3.441,306,2.537,307,2.705,308,2.758,309,2.758,310,1.561,311,1.816,312,1.816,316,2.165,354,2.165,358,1.974,416,4.384,418,3.87,419,3.165,422,2.403,423,2.403,424,2.403,426,3.208,427,3.208,428,3.208,429,3.804,430,2.403,431,2.723,432,2.723,433,2.723,434,2.165,435,2.723,436,3.208]],["title/injectables/LogService.html",[185,2.333,261,0.519]],["body/injectables/LogService.html",[2,0.225,3,0.225,4,0.148,7,0.339,10,1.572,11,0.874,12,0.024,13,0.198,15,0.015,16,0.015,33,0.873,40,0.752,46,1.639,51,1.081,53,1.235,54,0.941,55,1.235,58,0.958,59,2.361,65,0.552,66,0.37,69,1.241,74,0.225,80,1.151,81,1.079,82,1.151,83,1.164,107,1.747,169,2.108,185,2.969,261,0.764,276,1.923,358,1.923,437,2.652,438,3.734,439,3.296,440,3.734,441,3.124,442,5.527,443,3.124,444,4.399,445,3.734,446,3.124,447,4.322,448,3.734,449,3.124,450,3.734,451,3.124,452,4.399,453,3.124,454,4.399,455,4.399,456,3.124,457,3.124,458,3.124,459,3.124,460,3.124,461,3.124,462,3.124,463,3.124,464,3.124]],["title/classes/LogServiceAbstract.html",[46,1.287,74,0.249]],["body/classes/LogServiceAbstract.html",[2,0.226,3,0.226,4,0.148,7,0.34,10,1.575,11,0.875,12,0.024,13,0.199,15,0.015,16,0.015,33,0.875,37,1.746,46,1.642,51,1.083,53,1.236,54,0.942,55,1.236,58,1.048,59,2.435,65,0.34,74,0.317,80,0.997,81,0.934,82,0.997,107,1.751,189,2.114,190,2.66,210,2.66,311,1.773,312,1.773,438,3.742,439,3.303,440,3.742,445,3.742,447,4.329,448,3.742,450,3.742,465,2.66,466,6.723,467,4.408,468,3.133,469,4.408,470,3.133,471,2.66,472,3.133,473,3.133,474,4.408,475,3.133,476,3.133,477,3.133,478,3.133]],["title/components/LoginComponent.html",[17,1.003,111,1.373]],["body/components/LoginComponent.html",[2,0.13,3,0.13,4,0.085,7,0.196,8,1.232,11,0.627,12,0.024,13,0.115,15,0.012,16,0.01,17,1.329,18,0.765,19,1.022,20,1.022,21,1.022,23,0.954,24,2.063,25,1.022,26,3.027,27,2.801,29,1.644,31,1.644,33,0.577,34,3.01,37,1.513,38,2.364,40,0.7,45,1.909,46,1.556,51,0.993,53,0.616,54,0.674,55,0.616,58,0.793,59,2.11,64,4.54,65,0.58,66,0.214,69,0.717,73,1.218,74,0.13,75,1.943,80,0.408,81,0.383,82,0.408,93,0.717,94,1.521,95,1.644,96,1.644,97,2.364,98,1.022,99,1.022,100,0.717,101,1.082,102,1.022,103,0.765,104,0.945,105,1.022,106,0.717,107,1.154,108,1.022,109,0.717,110,1.022,111,1.659,112,2.502,113,1.022,146,1.111,151,0.819,165,0.878,166,0.945,171,1.218,218,1.218,253,1.218,254,2.571,258,1.96,260,2.731,266,3.129,280,3.01,325,2.465,326,2.465,394,1.352,395,1.352,408,2.364,479,1.532,480,3.545,481,4.177,482,2.905,483,4.177,484,4.177,485,3.645,486,2.819,487,3.645,488,2.819,489,3.094,490,3.545,491,3.094,492,3.545,493,2.905,494,2.905,495,1.805,496,1.805,497,1.805,498,1.805,499,1.805,500,3.545,501,1.805,502,1.805,503,1.805,504,1.532,505,1.805,506,1.805,507,3.645,508,1.805,509,1.805,510,1.805,511,1.805,512,1.805,513,1.805,514,1.805,515,1.805,516,1.805,517,1.532,518,1.532,519,2.905,520,4.177,521,2.465,522,2.905,523,2.176,524,2.905,525,4.54,526,4.177,527,2.364,528,2.905,529,2.905,530,2.905,531,2.905,532,2.905]],["title/injectables/LoginFormFactory.html",[261,0.519,486,2.333]],["body/injectables/LoginFormFactory.html",[2,0.284,3,0.284,4,0.187,7,0.428,11,0.592,12,0.024,13,0.251,15,0.017,16,0.017,28,1.673,33,1.023,37,1.472,40,0.95,51,0.957,53,0.836,54,0.637,55,0.836,58,0.893,65,0.623,66,0.467,74,0.284,146,2.428,165,1.92,261,0.862,263,1.79,276,2.428,408,2.233,486,3.478,500,4.873,523,3.862,527,2.233,533,3.348,534,6.087,535,3.945,536,6.087,537,3.945,538,5.154,539,3.945,540,3.945,541,3.945,542,5.154,543,3.945,544,5.154,545,3.945]],["title/interfaces/LoginResult.html",[0,1.466,546,2.127]],["body/interfaces/LoginResult.html",[0,2.442,2,0.338,3,0.338,4,0.222,7,0.51,8,2.442,10,2.092,11,0.864,12,0.023,13,0.299,14,3.544,15,0.019,16,0.019,314,5.508,546,3.544,547,3.989,548,3.989,549,4.862]],["title/injectables/LoginService.html",[261,0.519,488,2.333]],["body/injectables/LoginService.html",[2,0.182,3,0.182,4,0.119,7,0.274,8,1.599,10,1.888,11,0.751,12,0.024,13,0.16,15,0.015,16,0.013,28,1.071,33,0.748,34,3.456,35,3.376,37,1.157,40,0.908,43,3.045,44,3.079,45,2.362,46,1.863,51,0.994,53,0.956,54,0.728,55,0.956,58,0.928,59,1.404,65,0.675,66,0.299,69,1.003,70,1.43,73,1.705,74,0.182,75,2.375,77,1.705,80,0.571,81,0.535,82,0.571,83,1.404,84,1.323,85,1.705,101,0.941,112,1.835,165,1.229,166,1.323,253,1.705,254,3.079,258,2.544,261,0.677,263,1.146,307,2.803,310,1.229,408,2.134,488,2.544,527,2.832,546,3.079,550,2.144,551,5.003,552,3.77,553,4.511,554,3.376,555,4.511,556,3.376,557,3.77,558,2.526,559,3.77,560,2.526,561,3.77,562,2.526,563,2.526,564,2.144,565,2.526,566,2.144,567,2.362,568,2.526,569,2.526,570,2.526,571,2.526,572,2.526,573,2.526,574,2.526,575,2.526,576,2.526,577,2.526,578,2.526,579,2.526]],["title/injectables/LogoutService.html",[256,2.333,261,0.519]],["body/injectables/LogoutService.html",[1,1.915,2,0.204,3,0.204,4,0.134,7,0.308,8,1.742,10,1.491,11,0.616,12,0.024,13,0.18,15,0.014,16,0.014,28,1.203,33,0.815,34,2.971,35,3.57,37,1.238,40,0.989,43,3.257,44,3.256,51,0.982,53,0.601,54,0.458,55,0.601,58,0.836,59,1.53,65,0.694,66,0.336,69,1.631,70,1.606,74,0.204,75,2.455,77,1.915,80,0.641,81,0.601,82,0.641,83,1.057,84,1.486,85,1.915,101,1.057,112,1.381,139,4.491,141,1.381,151,1.287,165,1.381,166,1.486,171,1.915,253,1.915,254,3.256,256,2.772,258,2.772,261,0.724,263,1.287,307,2.528,310,1.381,368,1.915,430,2.126,489,4.097,490,4.491,491,4.097,492,4.491,504,2.408,517,2.408,564,2.408,580,2.408,581,5.291,582,4.491,583,4.827,584,4.107,585,2.837,586,2.837,587,2.837,588,2.837,589,4.107,590,2.837,591,2.837,592,2.837,593,2.837,594,2.408]],["title/injectables/RequestInspectorService.html",[261,0.519,419,1.956]],["body/injectables/RequestInspectorService.html",[2,0.305,3,0.305,4,0.201,7,0.46,11,0.636,12,0.024,13,0.269,15,0.018,16,0.018,28,1.797,33,1.072,37,1.523,51,0.787,53,0.898,54,0.684,55,0.898,58,0.936,65,0.586,66,0.502,74,0.305,80,0.958,81,0.898,82,0.958,141,2.063,260,4.045,261,0.892,263,1.923,303,3.54,306,2.399,419,3.056,595,4.583,596,3.598,597,5.399,598,5.399,599,4.239,600,4.239]],["title/interceptors/TimingInterceptor.html",[133,2.333,294,1.466]],["body/interceptors/TimingInterceptor.html",[2,0.22,3,0.22,4,0.144,7,0.331,11,0.65,12,0.024,13,0.194,15,0.015,16,0.015,23,1.003,33,0.859,37,1.481,40,1.043,45,2.267,46,2.038,51,0.804,53,0.918,54,0.699,55,0.918,58,1.001,65,0.651,66,0.361,74,0.22,75,1.719,80,0.69,81,1.16,82,0.69,83,1.612,133,2.921,141,1.486,261,0.65,294,1.295,297,3.095,302,1.879,303,3.097,304,3.367,306,2.45,307,2.633,308,2.664,309,2.664,310,1.486,311,1.728,312,1.728,316,2.061,354,2.061,358,1.879,418,3.768,419,3.097,422,2.288,423,2.288,424,2.288,429,3.674,430,2.288,431,2.592,432,2.592,433,2.592,434,3.394,435,2.592,601,3.054,602,3.054,603,3.054,604,3.243,605,4.329,606,4.329,607,4.329,608,3.054,609,3.054,610,3.054,611,3.054,612,3.054]],["title/classes/User.html",[74,0.249,567,1.81]],["body/classes/User.html",[2,0.199,3,0.199,4,0.131,7,0.3,8,1.709,10,2.125,11,0.834,12,0.024,13,0.176,14,4.01,15,0.014,16,0.014,40,0.666,51,1.162,53,0.586,54,0.991,55,0.586,58,0.906,65,0.3,74,0.29,75,2.588,339,4.487,408,3.145,527,3.39,549,4.487,567,2.111,613,2.347,614,5.227,615,5.227,616,5.227,617,5.227,618,4.03,619,4.03,620,4.03,621,2.347,622,5.227,623,6.259,624,2.765,625,2.765,626,2.765,627,2.765,628,2.765,629,2.765,630,2.765,631,2.765,632,2.765,633,2.765,634,2.765,635,2.071,636,4.03,637,4.03,638,4.03,639,4.03]],["title/injectables/UserFactory.html",[261,0.519,554,2.333]],["body/injectables/UserFactory.html",[2,0.22,3,0.22,4,0.145,7,0.332,10,1.981,11,0.756,12,0.024,13,0.195,15,0.015,16,0.015,28,1.299,33,0.861,37,1.54,40,1.045,51,0.935,53,1.068,54,0.997,55,1.068,58,0.949,65,0.651,66,0.362,74,0.22,75,1.216,83,1.141,196,2.067,261,0.756,263,1.389,332,3.697,339,3.774,405,2.927,408,1.733,527,3.101,546,3.372,549,4.105,554,2.927,566,2.599,567,3.028,594,2.599,621,2.599,640,2.599,641,4.338,642,3.682,643,3.062,644,3.062,645,4.338,646,4.338,647,3.062,648,3.062,649,4.338,650,3.062,651,3.062,652,2.294,653,2.599,654,3.062,655,3.062,656,3.062,657,2.599,658,3.062,659,3.062,660,3.062,661,3.062,662,3.062,663,3.062,664,3.062,665,3.062,666,3.062,667,3.062]],["title/injectables/UserService.html",[261,0.519,556,2.333]],["body/injectables/UserService.html",[2,0.286,3,0.286,4,0.188,7,0.431,11,0.596,12,0.024,13,0.252,15,0.018,16,0.018,28,1.685,33,1.028,37,1.665,51,0.961,53,0.842,54,0.642,55,0.842,58,0.998,59,1.929,65,0.625,66,0.47,74,0.286,261,0.865,263,1.803,556,3.495,567,3.462,635,2.977,642,5.182,657,3.373,668,3.373,669,5.179,670,3.974,671,5.179,672,3.974,673,3.974,674,3.974,675,3.974,676,3.974,677,3.974]],["title/coverage.html",[678,3.535]],["body/coverage.html",[0,2.26,1,1.945,4,0.136,5,2.447,6,3.113,11,0.433,12,0.024,15,0.014,16,0.014,17,1.708,18,1.222,22,2.447,46,1.074,74,0.299,84,1.51,100,1.145,103,1.222,106,1.145,109,1.145,111,1.145,137,3.113,174,2.16,185,1.945,189,2.804,191,1.945,194,2.804,196,1.945,206,2.16,229,2.16,256,1.945,261,0.949,267,2.447,322,2.447,323,2.16,324,2.447,332,1.945,333,2.447,334,2.447,351,2.447,352,2.447,361,2.447,368,1.945,369,2.447,370,2.447,405,1.945,406,2.447,407,2.447,419,1.632,437,2.447,465,2.447,479,2.447,486,1.945,488,1.945,533,2.447,546,1.774,547,2.447,548,2.447,550,2.447,554,1.945,556,1.945,567,1.51,580,2.447,595,2.447,596,2.447,613,2.447,640,2.447,668,2.447,678,2.16,679,2.16,680,2.883,681,2.883,682,7.023,683,5.65,684,5.885,685,2.883,686,6.324,687,3.526,688,3.993,689,4.87,690,4.154,691,2.883,692,2.447,693,2.447,694,2.883,695,2.883]],["title/dependencies.html",[116,2.177,696,2.449]],["body/dependencies.html",[12,0.024,15,0.015,16,0.015,66,0.374,67,2.993,68,2.73,69,2.409,70,1.789,71,1.945,101,1.177,116,1.655,118,1.655,146,1.945,151,1.434,155,2.683,156,3.765,161,2.683,163,2.368,165,2.494,166,1.655,169,2.133,171,2.133,285,1.945,292,2.368,310,1.538,340,2.683,523,2.368,527,2.511,635,2.368,652,2.368,653,2.683,697,3.161,698,6.62,699,3.161,700,4.435,701,3.161,702,3.161,703,3.161,704,3.161,705,3.161,706,3.161,707,2.683,708,4.435,709,3.161,710,3.161,711,3.161,712,3.161,713,3.161,714,3.161,715,3.161,716,3.161,717,3.161,718,3.161,719,3.161,720,3.161,721,3.161,722,3.161,723,3.161,724,3.161,725,3.161,726,3.161,727,3.161,728,3.161,729,2.683,730,3.161,731,3.161,732,3.161,733,3.161,734,3.161,735,3.161,736,3.161,737,3.161,738,3.161,739,3.161,740,3.161,741,3.161,742,3.161,743,3.161,744,3.161,745,3.161,746,3.161,747,3.161,748,2.683,749,3.161,750,3.161,751,3.161]],["title/miscellaneous/functions.html",[194,2.806,752,1.947]],["body/miscellaneous/functions.html",[7,0.535,12,0.022,15,0.02,16,0.02,53,1.257,54,0.958,55,1.257,137,3.697,194,3.33,195,4.189,199,4.189,206,4.444,229,4.444,752,3.33,753,5.932,754,5.932,755,5.932]],["title/index.html",[7,0.313,604,2.162,756,2.162]],["body/index.html",[4,0.134,12,0.018,15,0.014,16,0.014,23,0.93,27,1.482,68,1.742,69,1.914,84,1.482,94,1.482,104,1.482,107,1.124,118,1.482,119,2.147,136,1.482,163,2.12,169,1.91,202,2.402,280,2.523,387,2.402,434,1.91,439,2.12,471,2.402,480,2.402,518,2.402,521,2.402,525,2.402,567,1.482,582,2.402,652,3.071,678,2.12,679,2.12,696,2.402,707,2.402,729,2.402,748,2.402,756,2.12,757,5.609,758,3.479,759,4.82,760,2.83,761,4.099,762,2.83,763,2.83,764,2.83,765,2.83,766,2.83,767,2.83,768,4.099,769,2.402,770,2.83,771,3.479,772,4.82,773,4.82,774,2.83,775,2.83,776,4.82,777,4.099,778,2.83,779,2.402,780,2.83,781,2.83,782,2.83,783,2.83,784,2.83,785,2.83,786,5.243,787,4.099,788,2.83,789,2.83,790,2.83,791,2.83,792,4.099,793,4.099,794,4.099,795,2.83,796,2.83,797,2.83,798,2.83,799,2.83,800,2.83,801,2.83,802,2.83,803,2.83,804,4.099,805,2.83,806,4.099,807,2.83,808,4.82,809,2.83,810,2.83,811,4.099,812,4.099,813,2.83,814,2.83,815,2.83,816,2.83,817,2.83,818,2.83,819,4.099,820,2.83,821,4.099,822,2.83,823,2.83,824,2.83,825,2.83,826,2.83,827,2.83,828,2.83,829,2.83,830,2.83,831,2.83,832,4.099,833,2.83,834,2.83,835,2.83,836,4.099,837,2.83,838,4.099,839,2.83,840,2.83,841,4.099,842,2.83,843,2.83,844,4.82,845,2.83,846,2.83,847,2.83,848,4.099,849,2.83,850,2.83,851,2.83,852,2.83,853,2.83,854,2.83,855,2.83,856,2.83,857,2.83,858,2.83,859,2.83]],["title/license.html",[604,2.162,756,2.162,860,2.449]],["body/license.html",[4,0.178,12,0.017,15,0.017,16,0.017,119,1.965,136,1.965,226,3.186,320,3.186,434,2.533,679,2.812,771,3.186,779,3.186,786,4.234,860,3.186,861,3.753,862,5.602,863,3.753,864,3.753,865,3.753,866,3.753,867,4.988,868,3.753,869,3.753,870,3.753,871,3.753,872,4.988,873,3.753,874,5.97,875,6.703,876,3.753,877,4.988,878,5.602,879,3.753,880,5.602,881,4.988,882,3.753,883,3.753,884,3.753,885,3.753,886,3.753,887,3.753,888,3.753,889,3.753,890,3.753,891,3.753,892,3.753,893,3.753,894,4.988,895,4.988,896,3.753,897,3.753,898,4.988,899,3.753,900,3.753,901,3.753,902,3.753,903,3.753,904,3.753,905,3.753,906,3.753,907,3.753,908,3.753,909,3.753,910,3.753,911,3.753,912,3.753,913,3.753,914,3.753,915,3.753,916,3.753,917,3.753]],["title/modules.html",[114,1.288]],["body/modules.html",[12,0.02,15,0.02,16,0.02,68,4.006,114,1.294,115,3.199,125,2.917,126,2.917,127,2.917,128,2.917,376,3.199,380,2.917,918,6.509,919,6.509,920,6.875,921,6.25,922,6.25]],["title/overview.html",[923,4.005]],["body/overview.html",[0,1.352,12,0.023,13,0.203,15,0.015,16,0.015,17,0.926,18,2.649,74,0.23,93,1.266,100,2.045,103,2.183,106,2.045,109,2.045,111,2.045,114,1.218,115,4.742,116,1.67,117,1.805,118,1.67,119,1.67,120,2.707,121,2.707,122,2.707,123,2.707,124,2.707,125,3.169,126,3.613,127,3.169,128,3.985,129,3.475,130,3.475,131,3.475,132,3.475,133,3.475,134,2.747,135,1.963,136,1.67,221,2.707,235,1.963,251,2.389,261,0.479,281,2.707,282,2.707,376,4.105,377,2.707,378,2.707,379,2.707,380,3.169,409,2.707,410,2.707,758,2.707,769,2.707,923,2.707,924,4.463,925,3.189,926,3.189]],["title/routes.html",[235,2.904]],["body/routes.html",[12,0.021,15,0.021,16,0.021,235,3.393]],["title/miscellaneous/variables.html",[688,3.115,752,1.947]],["body/miscellaneous/variables.html",[7,0.465,11,0.943,12,0.024,15,0.018,16,0.018,84,3.128,174,4.476,189,4.47,218,2.894,266,3.213,394,4.707,395,4.707,687,3.641,688,3.213,692,3.641,693,3.641,752,2.894,927,5.439,928,4.289,929,4.289,930,4.289,931,4.289,932,4.289,933,4.289,934,4.289,935,5.439]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0.1.18",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":926,"title":{},"body":{"overview.html":{}}}],["1.1.0",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["1.10.1",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["2.0.6",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":864,"title":{},"body":{"license.html":{}}}],["255",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{}}}],["3.0.1",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":769,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.1.3",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":758,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6.0.0",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":924,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":404,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["9",{"_index":925,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["98",{"_index":843,"title":{},"body":{"index.html":{}}}],["_angulartics2googletagmanag",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["_authservic",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["_configservic",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["_configur",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["_configuretransl",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["_datehelp",{"_index":645,"title":{},"body":{"injectables/UserFactory.html":{}}}],["_email",{"_index":614,"title":{},"body":{"classes/User.html":{}}}],["_errorhandl",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["_errorhandler(result",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{}}}],["_formbuild",{"_index":538,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["_formfactori",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{}}}],["_http",{"_index":583,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_injector",{"_index":301,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["_jsonencodeverb",{"_index":391,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["_lastlogin",{"_index":615,"title":{},"body":{"classes/User.html":{}}}],["_logger",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TimingInterceptor.html":{}}}],["_loginservic",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{}}}],["_loginuri",{"_index":551,"title":{},"body":{"injectables/LoginService.html":{}}}],["_logoutservic",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_logouturi",{"_index":581,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_name",{"_index":616,"title":{},"body":{"classes/User.html":{}}}],["_ngxlogger",{"_index":444,"title":{},"body":{"injectables/LogService.html":{}}}],["_password",{"_index":617,"title":{},"body":{"classes/User.html":{}}}],["_requestinspector",{"_index":418,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_router",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LogoutService.html":{}}}],["_setus",{"_index":552,"title":{},"body":{"injectables/LoginService.html":{}}}],["_setuser(result",{"_index":559,"title":{},"body":{"injectables/LoginService.html":{}}}],["_successhandl",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["_titleservic",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["_toastr",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LogoutService.html":{}}}],["_translateservic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["_userfactori",{"_index":553,"title":{},"body":{"injectables/LoginService.html":{}}}],["_userservic",{"_index":555,"title":{},"body":{"injectables/LoginService.html":{}}}],["abov",{"_index":893,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":466,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["accept",{"_index":399,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["accessor",{"_index":618,"title":{},"body":{"classes/User.html":{}}}],["action",{"_index":912,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["add",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["address",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{}}}],["against",{"_index":788,"title":{},"body":{"index.html":{}}}],["analyt",{"_index":814,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":887,"title":{},"body":{"license.html":{}}}],["angular",{"_index":757,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compil",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"dependencies.html":{}}}],["angular/http",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["angular2",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["angulartics2",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":776,"title":{},"body":{"index.html":{}}}],["apibaseuri",{"_index":476,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["apirespons",{"_index":1,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["app.compon",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing.modul",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":18,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":774,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":400,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["appmodul",{"_index":115,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":125,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":916,"title":{},"body":{"license.html":{}}}],["around",{"_index":842,"title":{},"body":{"index.html":{}}}],["assets/config.json",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lang",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["associ",{"_index":876,"title":{},"body":{"license.html":{}}}],["auth",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["auth.component.html",{"_index":270,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.component.scss",{"_index":269,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth/auth.modul",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/component/login/login.compon",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/login",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout.servic",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authconfig",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":787,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":237,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authlayoutcompon",{"_index":100,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":126,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":320,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["authreq",{"_index":317,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["authservic",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["authservice.gettoken",{"_index":315,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authtokeninterceptor",{"_index":129,"title":{"interceptors/AuthTokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"overview.html":{}}}],["autoseri",{"_index":623,"title":{},"body":{"classes/User.html":{}}}],["avail",{"_index":922,"title":{},"body":{"modules.html":{}}}],["aw",{"_index":823,"title":{},"body":{"index.html":{}}}],["back",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["backend",{"_index":773,"title":{},"body":{"index.html":{}}}],["backtologincompon",{"_index":103,"title":{"components/BackToLoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bar",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["baseurl",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beanstalk",{"_index":812,"title":{},"body":{"index.html":{}}}],["blacklist",{"_index":790,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/RequestInspectorService.html":{}}}],["bootstrap",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["brows",{"_index":920,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["browseranimationsmodul",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["browsermodul",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":827,"title":{},"body":{"index.html":{}}}],["build",{"_index":797,"title":{},"body":{"index.html":{}}}],["builder",{"_index":849,"title":{},"body":{"index.html":{}}}],["burkindin",{"_index":866,"title":{},"body":{"license.html":{}}}],["c",{"_index":863,"title":{},"body":{"license.html":{}}}],["call",{"_index":789,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cart",{"_index":798,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":587,"title":{},"body":{"injectables/LogoutService.html":{}}}],["cerial",{"_index":635,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["changedetectionstrategy.push",{"_index":802,"title":{},"body":{"index.html":{}}}],["charact",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{}}}],["charg",{"_index":871,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":403,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["check",{"_index":799,"title":{},"body":{"index.html":{}}}],["children",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chromedriv",{"_index":854,"title":{},"body":{"index.html":{}}}],["ci",{"_index":856,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":822,"title":{},"body":{"index.html":{}}}],["claim",{"_index":908,"title":{},"body":{"license.html":{}}}],["class",{"_index":74,"title":{"classes/LogServiceAbstract.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["close",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{}}}],["cluster_appmodul",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_homemodul",{"_index":377,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":378,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_import",{"_index":379,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutmodul",{"_index":409,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declar",{"_index":410,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["code",{"_index":820,"title":{},"body":{"index.html":{}}}],["codepipline/codebuild",{"_index":824,"title":{},"body":{"index.html":{}}}],["combin",{"_index":784,"title":{},"body":{"index.html":{}}}],["commit",{"_index":836,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["compodoc",{"_index":818,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":17,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component/auth/auth.compon",{"_index":412,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/back",{"_index":413,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/error/error.compon",{"_index":415,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/home/home.compon",{"_index":382,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["component/login/login.compon",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{}}}],["component_templ",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["compos",{"_index":767,"title":{},"body":{"index.html":{}}}],["condit",{"_index":892,"title":{},"body":{"license.html":{}}}],["config",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.auth.heroimageuri",{"_index":278,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["config.core.apibaseuri",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.core.apibaseuri}${config.auth.loginuri",{"_index":572,"title":{},"body":{"injectables/LoginService.html":{}}}],["config.core.apibaseuri}${config.auth.logouturi",{"_index":592,"title":{},"body":{"injectables/LogoutService.html":{}}}],["config.core.apibaseuri}${config.logging.logerroruri",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["config.core.apibaseuri}/auth/login",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.json",{"_index":848,"title":{},"body":{"index.html":{}}}],["config/auth.config",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["config/cor",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["config/http",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["configfactori",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configfactory(http",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["confighttpload",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["confighttploader(http",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["configload",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["configservic",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["configur",{"_index":807,"title":{},"body":{"index.html":{}}}],["connect",{"_index":917,"title":{},"body":{"license.html":{}}}],["consol",{"_index":477,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["console.log(data",{"_index":478,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["const",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["constructor(_angulartics2googletagmanag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_authservic",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["constructor(_configservic",{"_index":272,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["constructor(_datehelp",{"_index":643,"title":{},"body":{"injectables/UserFactory.html":{}}}],["constructor(_formbuild",{"_index":535,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["constructor(_injector",{"_index":298,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["constructor(_logg",{"_index":354,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_ngxlogg",{"_index":441,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(email",{"_index":619,"title":{},"body":{"classes/User.html":{}}}],["constructor(priv",{"_index":276,"title":{},"body":{"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{}}}],["consum",{"_index":795,"title":{},"body":{"index.html":{}}}],["contract",{"_index":913,"title":{},"body":{"license.html":{}}}],["copi",{"_index":874,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":862,"title":{},"body":{"license.html":{}}}],["core",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["core/core.modul",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interface/service/log.service.abstract",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["core/model/payload/login",{"_index":565,"title":{},"body":{"injectables/LoginService.html":{}}}],["core/model/user.model",{"_index":568,"title":{},"body":{"injectables/LoginService.html":{}}}],["core/service/error",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/factory/user.factori",{"_index":569,"title":{},"body":{"injectables/LoginService.html":{}}}],["core/service/guard/auth.guard",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/service/interceptor/auth",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/json",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/log",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/timing.interceptor.servic",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/log.servic",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/user.servic",{"_index":570,"title":{},"body":{"injectables/LoginService.html":{}}}],["coremodul",{"_index":127,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":839,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":678,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtranslateload",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":763,"title":{},"body":{"index.html":{}}}],["custom",{"_index":796,"title":{},"body":{"index.html":{}}}],["customvalid",{"_index":540,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["customvalidators.email",{"_index":543,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["d3",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["damag",{"_index":909,"title":{},"body":{"license.html":{}}}],["data",{"_index":471,"title":{},"body":{"classes/LogServiceAbstract.html":{},"index.html":{}}}],["date",{"_index":339,"title":{},"body":{"injectables/DateHelperService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["date.now",{"_index":606,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["datehelperservic",{"_index":332,"title":{"injectables/DateHelperService.html":{}},"body":{"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["ddthh:mm:ssza",{"_index":343,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["deal",{"_index":877,"title":{},"body":{"license.html":{}}}],["debug",{"_index":438,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["debug(messag",{"_index":445,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["declar",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["decod",{"_index":653,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":660,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.email",{"_index":663,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.nam",{"_index":664,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decor",{"_index":622,"title":{},"body":{"classes/User.html":{}}}],["default",{"_index":394,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["demo",{"_index":760,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":762,"title":{},"body":{"index.html":{}}}],["dep",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":116,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":821,"title":{},"body":{"index.html":{}}}],["deseri",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["deserialize(sessionstorage.getitem('us",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["devlog",{"_index":467,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["devlog(data",{"_index":469,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["direct",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["disabl",{"_index":852,"title":{},"body":{"index.html":{}}}],["disabletimeout",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":885,"title":{},"body":{"license.html":{}}}],["document",{"_index":679,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["dynam",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":851,"title":{},"body":{"index.html":{}}}],["ec2",{"_index":825,"title":{},"body":{"index.html":{}}}],["effort",{"_index":845,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":607,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["elast",{"_index":811,"title":{},"body":{"index.html":{}}}],["element",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["email",{"_index":408,"title":{},"body":{"interfaces/JwtPayload.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["en",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["enablehtml",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":794,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":809,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":832,"title":{},"body":{"index.html":{}}}],["enter",{"_index":522,"title":{},"body":{"components/LoginComponent.html":{}}}],["environ",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["environments/environ",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["error",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["error(`provid",{"_index":347,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["error(messag",{"_index":448,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["error.component.html",{"_index":364,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error.component.scss",{"_index":363,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["errorhandl",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":191,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errorpagecompon",{"_index":106,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorrespons",{"_index":368,"title":{"interfaces/ErrorResponse.html":{}},"body":{"interfaces/ErrorResponse.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["es",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["es6",{"_index":831,"title":{},"body":{"index.html":{}}}],["event",{"_index":434,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{},"license.html":{}}}],["exce",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{}}}],["expect",{"_index":348,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["expos",{"_index":777,"title":{},"body":{"index.html":{}}}],["express",{"_index":771,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":456,"title":{},"body":{"injectables/LogService.html":{}}}],["fals",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["fast_rewind",{"_index":329,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["feed",{"_index":808,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fit",{"_index":902,"title":{},"body":{"license.html":{}}}],["follow",{"_index":891,"title":{},"body":{"license.html":{}}}],["fontawesome5",{"_index":770,"title":{},"body":{"index.html":{}}}],["fork",{"_index":783,"title":{},"body":{"index.html":{}}}],["form",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["format",{"_index":350,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["formbuild",{"_index":536,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["formgroup",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{}}}],["formsmodul",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["free",{"_index":870,"title":{},"body":{"license.html":{}}}],["front",{"_index":793,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":792,"title":{},"body":{"index.html":{}}}],["full",{"_index":387,"title":{},"body":{"modules/HomeRoutingModule.html":{},"index.html":{}}}],["function",{"_index":194,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":889,"title":{},"body":{"license.html":{}}}],["get",{"_index":756,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdatefromutcstr",{"_index":335,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getdatefromutcstring(utcdatestr",{"_index":336,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getemail",{"_index":627,"title":{},"body":{"classes/User.html":{}}}],["getform",{"_index":534,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["getfrompayload",{"_index":641,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload(payload",{"_index":646,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getlastlogin",{"_index":629,"title":{},"body":{"classes/User.html":{}}}],["getnam",{"_index":631,"title":{},"body":{"classes/User.html":{}}}],["getpassword",{"_index":633,"title":{},"body":{"classes/User.html":{}}}],["getus",{"_index":642,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["getuser(email",{"_index":649,"title":{},"body":{"injectables/UserFactory.html":{}}}],["gitignor",{"_index":859,"title":{},"body":{"index.html":{}}}],["googl",{"_index":813,"title":{},"body":{"index.html":{}}}],["gotosignup",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{}}}],["grant",{"_index":869,"title":{},"body":{"license.html":{}}}],["graph",{"_index":921,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":251,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["hammerj",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":353,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":356,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.servic",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":352,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":357,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:8",{"_index":355,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["header",{"_index":398,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.servic",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["header.interceptor.service.t",{"_index":390,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:12",{"_index":392,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:17",{"_index":393,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["headers['cont",{"_index":402,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["helper",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["helper.servic",{"_index":659,"title":{},"body":{"injectables/UserFactory.html":{}}}],["helper.service.t",{"_index":334,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:8",{"_index":337,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["helper/d",{"_index":658,"title":{},"body":{"injectables/UserFactory.html":{}}}],["herebi",{"_index":868,"title":{},"body":{"license.html":{}}}],["heroimageuri",{"_index":271,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["holder",{"_index":906,"title":{},"body":{"license.html":{}}}],["home",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["home.component.html",{"_index":372,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":371,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.routing.modul",{"_index":383,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/home.module#homemodul",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homecompon",{"_index":109,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodul",{"_index":376,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homerout",{"_index":385,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["homeroutingmodul",{"_index":380,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["http",{"_index":755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http/request",{"_index":422,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["http_interceptor",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogoutService.html":{}}}],["httpclientmodul",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":308,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httphandler",{"_index":304,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":309,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":303,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprespons",{"_index":429,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["identifi",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["immut",{"_index":804,"title":{},"body":{"index.html":{}}}],["implement",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{}}}],["impli",{"_index":900,"title":{},"body":{"license.html":{}}}],["import",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["includ",{"_index":880,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":261,"title":{"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":299,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["inspector.servic",{"_index":423,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["inspector.service.t",{"_index":596,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["inspector.service.ts:7",{"_index":599,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["instanceof",{"_index":435,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["instruct",{"_index":857,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":297,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":302,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interceptor",{"_index":294,"title":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"coverage.html":{},"overview.html":{}}}],["interface/service/log.service.abstract",{"_index":358,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["isconfigfilerequest",{"_index":597,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest(req",{"_index":598,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isnan(date.gettim",{"_index":345,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["issu",{"_index":853,"title":{},"body":{"index.html":{}}}],["it'",{"_index":781,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["json.stringify(serialize(us",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["jsonheaderinterceptor",{"_index":130,"title":{"interceptors/JsonHeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["jwt",{"_index":652,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{},"index.html":{}}}],["jwtdecod",{"_index":651,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtdecode(payload.token",{"_index":661,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtpayload",{"_index":405,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["kind",{"_index":899,"title":{},"body":{"license.html":{}}}],["lang",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["lastlogin",{"_index":549,"title":{},"body":{"interfaces/LoginResult.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["layout",{"_index":268,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["layout/component/auth/auth.compon",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout/component/error/error.compon",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout/layout.modul",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutmodul",{"_index":128,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["level",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["liabil",{"_index":910,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":907,"title":{},"body":{"license.html":{}}}],["licens",{"_index":860,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":881,"title":{},"body":{"license.html":{}}}],["line",{"_index":838,"title":{},"body":{"index.html":{}}}],["line:no",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["lint",{"_index":729,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["loadchildren",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lock.json",{"_index":858,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":439,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"index.html":{}}}],["log(messag",{"_index":450,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["logerroruri",{"_index":454,"title":{},"body":{"injectables/LogService.html":{}}}],["logger",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["loggerconfig",{"_index":455,"title":{},"body":{"injectables/LogService.html":{}}}],["loggermodul",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["login'},{'nam",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["login(email",{"_index":561,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.compon",{"_index":414,"title":{},"body":{"modules/LayoutModule.html":{}}}],["login.component.html",{"_index":326,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":325,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.t",{"_index":324,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:11",{"_index":328,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login.component.ts:8",{"_index":327,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login/back",{"_index":323,"title":{},"body":{"components/BackToLoginComponent.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["logincompon",{"_index":111,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginformfactori",{"_index":486,"title":{"injectables/LoginFormFactory.html":{}},"body":{"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"coverage.html":{}}}],["loginresult",{"_index":546,"title":{"interfaces/LoginResult.html":{}},"body":{"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["loginservic",{"_index":488,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":582,"title":{},"body":{"injectables/LogoutService.html":{},"index.html":{}}}],["logoutservic",{"_index":256,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["logrequestinterceptor",{"_index":131,"title":{"interceptors/LogRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"overview.html":{}}}],["logresponseinterceptor",{"_index":132,"title":{"interceptors/LogResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogResponseInterceptor.html":{},"overview.html":{}}}],["logservic",{"_index":185,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logserviceabstract",{"_index":46,"title":{"classes/LogServiceAbstract.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["made",{"_index":846,"title":{},"body":{"index.html":{}}}],["map",{"_index":563,"title":{},"body":{"injectables/LoginService.html":{}}}],["map(this._setuser.bind(thi",{"_index":575,"title":{},"body":{"injectables/LoginService.html":{}}}],["matbuttonmodul",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{}}}],["matcardmodul",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["match",{"_index":16,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":768,"title":{},"body":{"index.html":{}}}],["matformfieldmodul",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{}}}],["maticonmodul",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["matinputmodul",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{}}}],["matprogressspinnermodul",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{}}}],["max",{"_index":837,"title":{},"body":{"index.html":{}}}],["maxopen",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":766,"title":{},"body":{"index.html":{}}}],["measur",{"_index":834,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":901,"title":{},"body":{"license.html":{}}}],["merg",{"_index":883,"title":{},"body":{"license.html":{}}}],["messag",{"_index":447,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":752,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":861,"title":{},"body":{"license.html":{}}}],["mm",{"_index":342,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["model/payload/api",{"_index":588,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/error",{"_index":590,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/jwt",{"_index":654,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/login",{"_index":656,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/user.model",{"_index":657,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["modifi",{"_index":882,"title":{},"body":{"license.html":{}}}],["modul",{"_index":114,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":340,"title":{},"body":{"injectables/DateHelperService.html":{},"dependencies.html":{}}}],["mongodb",{"_index":772,"title":{},"body":{"index.html":{}}}],["ms",{"_index":612,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["msg",{"_index":9,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{}}}],["multi",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nav.backtologin",{"_index":330,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["nav.errorpag",{"_index":367,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["new",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["next",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(authreq",{"_index":321,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["next.handle(req",{"_index":316,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req).pip",{"_index":432,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["ng",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["ng2",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["ng2uiauthmodul",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["ng2uiauthmodule.forroot(authconfig",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["ngrx/effect",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":707,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":442,"title":{},"body":{"injectables/LogService.html":{}}}],["ngxloggerlevel",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.off",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.trac",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":905,"title":{},"body":{"license.html":{}}}],["note",{"_index":844,"title":{},"body":{"index.html":{}}}],["notic",{"_index":894,"title":{},"body":{"license.html":{}}}],["null",{"_index":594,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/UserFactory.html":{}}}],["number",{"_index":605,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["observ",{"_index":307,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{}}}],["obtain",{"_index":873,"title":{},"body":{"license.html":{}}}],["of(us",{"_index":579,"title":{},"body":{"injectables/LoginService.html":{}}}],["old",{"_index":817,"title":{},"body":{"index.html":{}}}],["onactivatetick",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["option",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":915,"title":{},"body":{"license.html":{}}}],["out",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outdatedbrows",{"_index":815,"title":{},"body":{"index.html":{}}}],["overview",{"_index":923,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":696,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":362,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page'},{'nam",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["pages.login.loginbutton",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{}}}],["pages.login.signuplink",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{}}}],["pages.login.titl",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{}}}],["paramet",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":903,"title":{},"body":{"license.html":{}}}],["passport",{"_index":785,"title":{},"body":{"index.html":{}}}],["password",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"dependencies.html":{}}}],["path",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":386,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["pattern",{"_index":764,"title":{},"body":{"index.html":{}}}],["payload",{"_index":648,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.lastlogin",{"_index":665,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model",{"_index":655,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model.t",{"_index":407,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["perform",{"_index":803,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":867,"title":{},"body":{"license.html":{}}}],["permit",{"_index":888,"title":{},"body":{"license.html":{}}}],["person",{"_index":872,"title":{},"body":{"license.html":{}}}],["pete",{"_index":865,"title":{},"body":{"license.html":{}}}],["pipelin",{"_index":819,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["popper.j",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":897,"title":{},"body":{"license.html":{}}}],["positionclass",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":396,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["pre",{"_index":835,"title":{},"body":{"index.html":{}}}],["preloadallmodul",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategi",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["privat",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["product",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":761,"title":{},"body":{"index.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AuthLayoutComponent.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LoginComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/User.html":{}}}],["protect",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["provid",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["public",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["publish",{"_index":884,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":904,"title":{},"body":{"license.html":{}}}],["put",{"_index":397,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["qualiti",{"_index":833,"title":{},"body":{"index.html":{}}}],["reactiv",{"_index":801,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["readonli",{"_index":14,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"classes/User.html":{}}}],["recaptcha",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["redi",{"_index":791,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":816,"title":{},"body":{"index.html":{}}}],["regist",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["repositori",{"_index":850,"title":{},"body":{"index.html":{}}}],["req",{"_index":306,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clon",{"_index":318,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["req.url.endswith('/assets/config.json",{"_index":600,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.urlwithparam",{"_index":610,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":609,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request.interceptor.servic",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["request.interceptor.service.t",{"_index":417,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:14",{"_index":420,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:21",{"_index":421,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["requestinspectorservic",{"_index":419,"title":{"injectables/RequestInspectorService.html":{}},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["requir",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{}}}],["require('../../assets/config.json",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["response.interceptor.servic",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.service.t",{"_index":426,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:16",{"_index":427,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:23",{"_index":428,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.model",{"_index":589,"title":{},"body":{"injectables/LogoutService.html":{}}}],["response.model.t",{"_index":6,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["rest",{"_index":775,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":879,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.model",{"_index":566,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserFactory.html":{}}}],["result.model.t",{"_index":548,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["return",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["right",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["root",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["root'},{'nam",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["rout",{"_index":235,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LogoutService.html":{}}}],["routermodul",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["routermodule.forchild(homerout",{"_index":388,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":855,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":806,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":310,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/internal/oper",{"_index":564,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["rxjs/oper",{"_index":431,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["s3",{"_index":826,"title":{},"body":{"index.html":{}}}],["scss",{"_index":830,"title":{},"body":{"index.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["sell",{"_index":779,"title":{},"body":{"index.html":{},"license.html":{}}}],["serial",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["serverloglevel",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["service/factory/form/login.form.factori",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{}}}],["service/login.servic",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{}}}],["sessionstorage.setitem('us",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["sethead",{"_index":319,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["setlang",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["setlang(lang",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["setus",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(us",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["shall",{"_index":895,"title":{},"body":{"license.html":{}}}],["showspinn",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{}}}],["sitetitl",{"_index":279,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["softwar",{"_index":875,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["spoon",{"_index":782,"title":{},"body":{"index.html":{}}}],["spork",{"_index":780,"title":{},"body":{"index.html":{}}}],["src/.../app.module.t",{"_index":753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.config.t",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.routing.module.t",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/component/login/login.component.t",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/login/login.component.ts:17",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:18",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:29",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:34",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:44",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:51",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:57",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.t",{"_index":533,"title":{},"body":{"injectables/LoginFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:11",{"_index":539,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:8",{"_index":537,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/login.service.t",{"_index":550,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/auth/service/login.service.ts:17",{"_index":557,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:29",{"_index":558,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:36",{"_index":562,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:42",{"_index":560,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/config/auth.config.t",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.t",{"_index":331,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/interface/service/log.service.abstract.t",{"_index":465,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:10",{"_index":475,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:13",{"_index":470,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:5",{"_index":468,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:6",{"_index":472,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:7",{"_index":473,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/model/payload/api",{"_index":5,"title":{},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/error",{"_index":369,"title":{},"body":{"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/jwt",{"_index":406,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/app/core/model/payload/login",{"_index":547,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.t",{"_index":613,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:17",{"_index":628,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:21",{"_index":630,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:25",{"_index":632,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:29",{"_index":634,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:4",{"_index":624,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:5",{"_index":625,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:6",{"_index":626,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:7",{"_index":620,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/service/auth/logout.service.t",{"_index":580,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{}}}],["src/app/core/service/auth/logout.service.ts:17",{"_index":584,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:29",{"_index":585,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:36",{"_index":586,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/error",{"_index":351,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.t",{"_index":640,"title":{},"body":{"injectables/UserFactory.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.ts:12",{"_index":644,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:17",{"_index":647,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:27",{"_index":650,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/guard/auth.guard.t",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:10",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:16",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/helper/d",{"_index":333,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["src/app/core/service/http/request",{"_index":595,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["src/app/core/service/interceptor/auth",{"_index":295,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["src/app/core/service/interceptor/json",{"_index":389,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["src/app/core/service/interceptor/log",{"_index":416,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.t",{"_index":601,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:16",{"_index":602,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:23",{"_index":603,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/log.service.t",{"_index":437,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/core/service/log.service.ts:13",{"_index":446,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:18",{"_index":449,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:23",{"_index":451,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:27",{"_index":453,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:7",{"_index":443,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/user.service.t",{"_index":668,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/service/user.service.ts:10",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:14",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/home/component/home/home.component.t",{"_index":370,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/component/home/home.component.ts:11",{"_index":374,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/home/home.component.ts:8",{"_index":373,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.t",{"_index":381,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routing.module.t",{"_index":384,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/layout/component/auth/auth.component.t",{"_index":267,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/auth/auth.component.ts:10",{"_index":273,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:16",{"_index":274,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:23",{"_index":275,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/back",{"_index":322,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.t",{"_index":361,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.ts:11",{"_index":366,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/error/error.component.ts:8",{"_index":365,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/layout.module.t",{"_index":411,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/environments/environment.prod.t",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabil",{"_index":805,"title":{},"body":{"index.html":{}}}],["stack",{"_index":759,"title":{},"body":{"index.html":{}}}],["stage",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":604,"title":{"index.html":{},"license.html":{}},"body":{"interceptors/TimingInterceptor.html":{}}}],["statement",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":778,"title":{},"body":{"index.html":{}}}],["strength",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["strict",{"_index":828,"title":{},"body":{"index.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["stripe",{"_index":800,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["subject",{"_index":890,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":886,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["substanti",{"_index":896,"title":{},"body":{"license.html":{}}}],["super",{"_index":457,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":918,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":919,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":430,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((ev",{"_index":433,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["taptodismiss",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["templat",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["test",{"_index":841,"title":{},"body":{"index.html":{}}}],["this._authservice.isauthent",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._authservice.login",{"_index":573,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._authservice.logout",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LogoutService.html":{}}}],["this._configservice.getset",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["this._configur",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["this._configuretransl",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["this._datehelper.getdatefromutcstring(payload.lastlogin",{"_index":666,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this._email",{"_index":636,"title":{},"body":{"classes/User.html":{}}}],["this._errorhandler.bind(thi",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._formbuilder.control(nul",{"_index":542,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["this._formbuilder.group",{"_index":541,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["this._formfactory.getform",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._http.post(this._logouturi",{"_index":593,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._injector.get",{"_index":313,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["this._jsonencodeverbs.includes(req.method.touppercas",{"_index":401,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["this._lastlogin",{"_index":637,"title":{},"body":{"classes/User.html":{}}}],["this._logger.devlog",{"_index":608,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["this._logger.devlog(error",{"_index":359,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.devlog(ev",{"_index":436,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["this._logger.devlog(req",{"_index":425,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["this._logger.devlog(result",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._logger.devlog(us",{"_index":577,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logger.error(error",{"_index":360,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.updateloggeruri",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this._loginservice.login(this.form.value.email",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._loginuri",{"_index":571,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._loginuri).pip",{"_index":574,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logoutservice.logout",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._logouturi",{"_index":591,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._nam",{"_index":638,"title":{},"body":{"classes/User.html":{}}}],["this._ngxlogger.debug(messag",{"_index":458,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.error(messag",{"_index":459,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.getconfigsnapshot",{"_index":462,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.log(messag",{"_index":460,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.updateconfig(updatedconfig",{"_index":464,"title":{},"body":{"injectables/LogService.html":{}}}],["this._password",{"_index":639,"title":{},"body":{"classes/User.html":{}}}],["this._requestinspector.isconfigfilerequest(req",{"_index":424,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["this._router.navigate(['auth",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LogoutService.html":{}}}],["this._router.navigate(['hom",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._successhandler.bind(thi",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._titleservice.settitle(sitetitl",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastr.error('login",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._toastr.success('log",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._translateservice.get('sitetitle').subscribe((sitetitl",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.setdefaultlang('en",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use(lang",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this._userfactory.getfrompayload(result",{"_index":576,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._userservice.setuser(us",{"_index":578,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.form",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.form.value.password",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getus",{"_index":662,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.heroimageuri",{"_index":277,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["this.setlang('en",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showspinn",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{}}}],["throw",{"_index":346,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["time",{"_index":847,"title":{},"body":{"index.html":{}}}],["timinginterceptor",{"_index":133,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["titl",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservic",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LogoutService.html":{}}}],["todat",{"_index":344,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["todo",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["token",{"_index":314,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interfaces/LoginResult.html":{}}}],["token.interceptor.servic",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["token.interceptor.service.t",{"_index":296,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:12",{"_index":300,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:16",{"_index":305,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["took",{"_index":611,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["tort",{"_index":914,"title":{},"body":{"license.html":{}}}],["translat",{"_index":280,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["translate/cor",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["translatemodule.forroot",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["translatepip",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["true",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:disable:no",{"_index":311,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:enable:no",{"_index":312,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":829,"title":{},"body":{"index.html":{}}}],["ui",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["undefin",{"_index":754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":765,"title":{},"body":{"index.html":{}}}],["unit",{"_index":840,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["updatedconfig",{"_index":461,"title":{},"body":{"injectables/LogService.html":{}}}],["updatedconfig.serverloggingurl",{"_index":463,"title":{},"body":{"injectables/LogService.html":{}}}],["updateloggeruri",{"_index":440,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(apibaseuri",{"_index":474,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(logerroruri",{"_index":452,"title":{},"body":{"injectables/LogService.html":{}}}],["us",{"_index":786,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":567,"title":{"classes/User.html":{}},"body":{"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user(email",{"_index":667,"title":{},"body":{"injectables/UserFactory.html":{}}}],["userfactori",{"_index":554,"title":{"injectables/UserFactory.html":{}},"body":{"injectables/LoginService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["userservic",{"_index":556,"title":{"injectables/UserService.html":{}},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["utc",{"_index":349,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["utcdatestr",{"_index":338,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["valid",{"_index":523,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginFormFactory.html":{},"dependencies.html":{}}}],["validators.maxlength(255",{"_index":545,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["validators.requir",{"_index":544,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["valu",{"_index":395,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["variabl",{"_index":688,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/UserService.html":{}}}],["warranti",{"_index":898,"title":{},"body":{"license.html":{}}}],["whether",{"_index":911,"title":{},"body":{"license.html":{}}}],["winston",{"_index":810,"title":{},"body":{"index.html":{}}}],["without",{"_index":878,"title":{},"body":{"license.html":{}}}],["work",{"_index":375,"title":{},"body":{"components/HomeComponent.html":{}}}],["yarn",{"_index":748,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ye",{"_index":621,"title":{},"body":{"classes/User.html":{},"injectables/UserFactory.html":{}}}],["yyyi",{"_index":341,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["zone.j",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/api-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  readonly msg: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _configureTranslation\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_angulartics2GoogleTagManager: Angulartics2GoogleTagManager, _configService: ConfigService, _logger: LogServiceAbstract, _titleService: Title, _translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _angulartics2GoogleTagManager\n                                                  \n                                                        \n                                                                    Angulartics2GoogleTagManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configureTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configureTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ConfigService } from '@ngx-config/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private _angulartics2GoogleTagManager: Angulartics2GoogleTagManager,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _titleService: Title,\n    private _translateService: TranslateService\n  ) {\n    this._configureTranslation();\n  }\n\n  public ngOnInit(): void {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    this._translateService.get('siteTitle').subscribe((siteTitle: string) => {\n      this._titleService.setTitle(siteTitle);\n    });\n\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logger.updateLoggerUri(\n      `${config.core.apiBaseUri}${config.logging.logErrorUri}`\n    );\n  }\n\n  protected _configureTranslation(): void {\n    this._translateService.setDefaultLang('en');\n    this.setLang('en');\n  }\n\n  public setLang(lang: string): void {\n    this._translateService.use(lang);\n  }\n}\n\n    \n\n    \n        \n  en |\n  es\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  en |  es'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthTokenInterceptor\n                            \n                            \n                                     JsonHeaderInterceptor\n                            \n                            \n                                     LogRequestInterceptor\n                            \n                            \n                                     LogResponseInterceptor\n                            \n                            \n                                     TimingInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { ConfigLoader, ConfigModule, ConfigService } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { Ng2UiAuthModule } from 'ng2-ui-auth';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AuthConfig } from './config/auth.config';\nimport { CoreModule } from './core/core.module';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\nimport { AuthTokenInterceptor } from './core/service/interceptor/auth-token.interceptor.service';\nimport { JsonHeaderInterceptor } from './core/service/interceptor/json-header.interceptor.service';\nimport { LogRequestInterceptor } from './core/service/interceptor/log-request.interceptor.service';\nimport { LogResponseInterceptor } from './core/service/interceptor/log-response.interceptor.service';\nimport { TimingInterceptor } from './core/service/interceptor/timing.interceptor.service';\nimport { LogService } from './core/service/log.service';\nimport { LayoutModule } from './layout/layout.module';\nimport { AuthModule } from './auth/auth.module';\nimport { environment } from '../environments/environment';\nimport { ErrorHandlerService } from './core/service/error-handler.service';\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  return new ConfigHttpLoader(http, './assets/config.json');\n}\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AppRoutingModule,\n    AuthModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient],\n    }),\n    CoreModule,\n    FormsModule,\n    HttpClientModule,\n    LayoutModule,\n    LoggerModule.forRoot({\n      level: environment.production ? NgxLoggerLevel.OFF : NgxLoggerLevel.TRACE,\n      serverLogLevel: NgxLoggerLevel.ERROR,\n    }),\n    Ng2UiAuthModule.forRoot(AuthConfig),\n    ReactiveFormsModule,\n    RouterModule,\n    ToastrModule.forRoot({\n      enableHtml: true,\n      disableTimeOut: true,\n      maxOpened: 2,\n      onActivateTick: true,\n      positionClass: 'toast-bottom-right',\n      tapToDismiss: true,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  declarations: [AppComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TimingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JsonHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogRequestInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n\n    {\n      provide: ErrorHandler,\n      useClass: ErrorHandlerService,\n    },\n\n    ConfigService,\n    TranslatePipe,\n\n    {\n      provide: LogServiceAbstract,\n      useClass: LogService,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './auth/component/login/login.component';\nimport { AuthGuard } from './core/service/guard/auth.guard';\nimport { AuthLayoutComponent } from './layout/component/auth/auth.component';\nimport { ErrorPageComponent } from './layout/component/error/error.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'auth/login',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: LoginComponent,\n      },\n    ],\n  },\n  {\n    path: 'home',\n    canActivate: [AuthGuard],\n    loadChildren: './home/home.module#HomeModule'\n  },\n  {\n    path: '**',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: '**',\n        component: ErrorPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/service/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_authService: AuthService, _logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/guard/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        canActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/guard/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\n\nimport { LogoutService } from '../auth/logout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  public constructor(\n    private _authService: AuthService,\n    private _logoutService: LogoutService\n  ) {}\n\n  public canActivate(): boolean {\n    if (this._authService.isAuthenticated()) {\n      return true;\n    }\n\n    this._logoutService.logout();\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n            \n                styleUrls\n                auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                heroImageUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heroImageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heroImageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthLayoutComponent implements OnInit {\n  public heroImageUri: string;\n\n  constructor(private _configService: ConfigService) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this.heroImageUri = `${config.auth.heroImageUri}`;\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'siteTitle' | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'siteTitle\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatProgressSpinnerModule\n} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LoginComponent } from './component/login/login.component';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [LoginComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthTokenInterceptor.html":{"url":"interceptors/AuthTokenInterceptor.html","title":"interceptor - AuthTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/auth-token.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  public constructor(private _injector: Injector) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    const authService: AuthService = this._injector.get(\n      AuthService\n    );\n    const token: string = authService.getToken();\n    if (!token) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: { Authorization: token },\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackToLoginComponent.html":{"url":"components/BackToLoginComponent.html","title":"component - BackToLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BackToLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/back-to-login/back-to-login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-to-login\n            \n\n            \n                styleUrls\n                back-to-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./back-to-login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-back-to-login',\n  templateUrl: './back-to-login.component.html',\n  styleUrls: ['./back-to-login.component.scss'],\n})\nexport class BackToLoginComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      fast_rewind{{ 'nav.backToLogin' | translate }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              fast_rewind{{ \\'nav.backToLogin\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackToLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateHelperService.html":{"url":"injectables/DateHelperService.html","title":"injectable - DateHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DateHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/helper/date-helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDateFromUtcString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDateFromUtcString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDateFromUtcString(utcDateString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/helper/date-helper.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utcDateString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateHelperService {\n  public getDateFromUtcString(utcDateString: string): Date {\n    const date: Date = moment(\n      utcDateString,\n      'YYYY-MM-DDTHH:mm:ssZa'\n    ).toDate();\n\n    if (isNaN(date.getTime())) {\n      throw new Error(`Provided date string is not in expected UTC format`);\n    }\n\n    return date;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/error-handler.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-handler.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(private _logger: LogServiceAbstract) {}\n\n  // tslint:disable-next-line:no-any\n  handleError(error: any): void {\n    this._logger.devLog(error);\n    this._logger.error(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/error/error.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ 'nav.errorPage' | translate }}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'nav.errorPage\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorResponse.html":{"url":"interfaces/ErrorResponse.html","title":"interface - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/error-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errors\n                                \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorResponse {\n  readonly msg: string;\n  readonly errors: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/home/home.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  home works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  home works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomeRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HomeComponent } from './component/home/home.component';\nimport { HomeRoutingModule } from './home.routing.module';\n\n@NgModule({\n  imports: [CommonModule, HomeRoutingModule],\n  declarations: [HomeComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './component/home/home.component';\n\nconst homeRoutes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(homeRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JsonHeaderInterceptor.html":{"url":"interceptors/JsonHeaderInterceptor.html","title":"interceptor - JsonHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JsonHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/json-header.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonEncodeVerbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jsonEncodeVerbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _jsonEncodeVerbs:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['POST', 'PUT']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JsonHeaderInterceptor implements HttpInterceptor {\n  private _jsonEncodeVerbs: string[] = ['POST', 'PUT'];\n\n  public constructor() {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    // tslint:disable-next-line:no-any\n    const headers: any = {\n      Accept: 'application/json',\n    };\n\n    if (this._jsonEncodeVerbs.includes(req.method.toUpperCase())) {\n      headers['Content-Type'] = 'application/json; charset=utf-8';\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: headers,\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/jwt-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  readonly email: string;\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthLayoutComponent\n                            \n                            \n                                BackToLoginComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule, MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AuthLayoutComponent } from './component/auth/auth.component';\nimport { BackToLoginComponent } from './component/back-to-login/back-to-login.component';\nimport { ErrorPageComponent } from './component/error/error.component';\n\n@NgModule({\n  imports: [CommonModule, MatCardModule, MatIconModule, RouterModule, TranslateModule],\n  declarations: [AuthLayoutComponent, BackToLoginComponent, ErrorPageComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class LayoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogRequestInterceptor.html":{"url":"interceptors/LogRequestInterceptor.html","title":"interceptor - LogRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-request.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogRequestInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    this._logger.devLog(req);\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogResponseInterceptor.html":{"url":"interceptors/LogResponseInterceptor.html","title":"interceptor - LogResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-response.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        this._logger.devLog(event);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/log.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxLogger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxLogger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateLoggerUri(logErrorUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logErrorUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerConfig, NGXLogger } from 'ngx-logger';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable()\nexport class LogService extends LogServiceAbstract {\n  constructor(private _ngxLogger: NGXLogger) {\n    super();\n  }\n\n  // tslint:disable-next-line:no-any\n  debug(message: any): void {\n    this._ngxLogger.debug(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  error(message: any): void {\n    this._ngxLogger.error(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  log(message: any): void {\n    this._ngxLogger.log(message);\n  }\n\n  updateLoggerUri(logErrorUri: string): void {\n    const updatedConfig: LoggerConfig = this._ngxLogger.getConfigSnapshot();\n    updatedConfig.serverLoggingUrl = logErrorUri;\n\n    this._ngxLogger.updateConfig(updatedConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogServiceAbstract.html":{"url":"classes/LogServiceAbstract.html","title":"class - LogServiceAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogServiceAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interface/service/log.service.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                devLog\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        devLog(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLoggerUri(apiBaseUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiBaseUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../../environments/environment';\n\nexport abstract class LogServiceAbstract {\n  // tslint:disable:no-any\n  public abstract debug(message: any): void;\n  public abstract error(message: any): void;\n  public abstract log(message: any): void;\n  // tslint:enable:no-any\n\n  public abstract updateLoggerUri(apiBaseUri: string): void;\n\n  // tslint:disable-next-line:no-any\n  public devLog(data: any): void {\n    if (environment.production) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                showSpinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToSignUp\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _formFactory: LoginFormFactory, _loginService: LoginService, _logger: LogServiceAbstract, _router: Router, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    LoginFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _loginService\n                                                  \n                                                        \n                                                                    LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(result: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showSpinner:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { LoginFormFactory } from '../../service/factory/form/login.form.factory';\nimport { LoginService } from '../../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  public form: FormGroup;\n  public showSpinner: boolean = false;\n\n  constructor(\n    private _authService: AuthService,\n    private _formFactory: LoginFormFactory,\n    private _loginService: LoginService,\n    private _logger: LogServiceAbstract,\n    private _router: Router,\n    private _toastr: ToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this._authService.logout();\n    this.form = this._formFactory.getForm();\n  }\n\n  public login(): void {\n    this.showSpinner = true;\n\n    this._loginService.login(this.form.value.email, this.form.value.password)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this.showSpinner = false;\n    this._toastr.success('Logged in...');\n    this._router.navigate(['home']);\n  }\n\n  // tslint:disable-next-line:no-any\n  protected _errorHandler(result: any): void {\n    this.showSpinner = false;\n    this._logger.devLog(result);\n    this._toastr.error('Login error');\n  }\n\n  public goToSignUp(): void {\n    this._router.navigate(['auth', 'register']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.login.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n      \n    \n    \n  \n  \n    {{ 'pages.login.loginButton' | translate }}\n  \n\n\n  {{ 'pages.login.signUpLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.login.title\\' | translate }}                                        close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                              {{ \\'pages.login.loginButton\\' | translate }}    {{ \\'pages.login.signUpLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginFormFactory.html":{"url":"injectables/LoginFormFactory.html","title":"injectable - LoginFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/login.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/login.form.factory.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/login.form.factory.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginFormFactory {\n  constructor(private _formBuilder: FormBuilder) { }\n\n  public getForm(): FormGroup {\n    return this._formBuilder.group({\n      'email': this._formBuilder.control(null, [CustomValidators.email, Validators.required]),\n      'password': this._formBuilder.control(null, [Validators.required, Validators.maxLength(255)]),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResult.html":{"url":"interfaces/LoginResult.html","title":"interface - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/login-result.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastLogin\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResult {\n  readonly token: string;\n  readonly lastLogin: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/login.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loginUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _setUser\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _logger: LogServiceAbstract, _userFactory: UserFactory, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _setUser(result: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loginUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _loginUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { LogServiceAbstract } from '../../core/interface/service/log.service.abstract';\nimport { LoginResult } from '../../core/model/payload/login-result.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\nimport { UserService } from '../../core/service/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private _loginUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _userFactory: UserFactory,\n    private _userService: UserService,\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._loginUri = `${config.core.apiBaseUri}${config.auth.loginUri}`;\n  }\n\n  public login(email: string, password: string): Observable {\n    return this._authService.login({ email, password }, this._loginUri).pipe(\n      map(this._setUser.bind(this))\n    );\n  }\n\n  protected _setUser(result: LoginResult): Observable {\n    const user: User = this._userFactory.getFromPayload(result);\n    this._logger.devLog(user);\n    this._userService.setUser(user);\n\n    return of(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/auth/logout.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logoutUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _http: HttpClient, _router: Router, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _logoutUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _logoutUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/internal/operators';\nimport { ApiResponse } from '../../model/payload/api-response.model';\nimport { ErrorResponse } from '../../model/payload/error-response.model';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutService {\n  private _logoutUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _router: Router,\n    private _toastr: ToastrService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logoutUri = `${config.core.apiBaseUri}${config.auth.logoutUri}`;\n  }\n\n  public logout(): Observable {\n    this._authService.logout();\n    this._router.navigate(['auth', 'login']);\n\n    return this._http.post(this._logoutUri, null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInspectorService.html":{"url":"injectables/RequestInspectorService.html","title":"injectable - RequestInspectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestInspectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/http/request-inspector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isConfigFileRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isConfigFileRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isConfigFileRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/http/request-inspector.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class RequestInspectorService {\n  // tslint:disable-next-line:no-any\n  public isConfigFileRequest(req: HttpRequest): boolean {\n    return req.url.endsWith('/assets/config.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/timing.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    const started: number = Date.now();\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return event;\n        }\n\n        const elapsed: number = Date.now() - started;\n        this._logger.devLog(\n          `Request for ${req.urlWithParams} took ${elapsed} ms.`\n        );\n\n        return event;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _email\n                            \n                            \n                                    Private\n                                    Readonly\n                                _lastLogin\n                            \n                            \n                                    Private\n                                    Readonly\n                                _name\n                            \n                            \n                                    Private\n                                    Readonly\n                                _password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    lastLogin\n                                \n                                \n                                    name\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, name: string, lastLogin: Date, password?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/user.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastLogin\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _lastLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _lastLogin:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastLogin\n                    \n                \n\n                \n                    \n                        getlastLogin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { autoserialize } from 'cerialize';\n\nexport class User {\n  @autoserialize private readonly _email: string;\n  @autoserialize private readonly _lastLogin: Date;\n  @autoserialize private readonly _name: string;\n  @autoserialize private readonly _password: string;\n\n\n  constructor(email: string, name: string, lastLogin: Date, password?: string) {\n    this._email = email;\n    this._lastLogin = lastLogin;\n    this._name = name;\n    this._password = password;\n  }\n\n  get email(): string {\n    return this._email;\n  }\n\n  get lastLogin(): Date {\n    return this._lastLogin;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get password(): string {\n    return this._password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFactory.html":{"url":"injectables/UserFactory.html","title":"injectable - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/factory/user.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dateHelper: DateHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/factory/user.factory.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dateHelper\n                                                  \n                                                        \n                                                                    DateHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(payload: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser(email: string, name: string, lastLogin: Date, password?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastLogin\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as jwtDecode from 'jwt-decode';\n\nimport { JwtPayload } from '../../model/payload/jwt-payload.model';\nimport { LoginResult } from '../../model/payload/login-result.model';\nimport { User } from '../../model/user.model';\nimport { DateHelperService } from '../helper/date-helper.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserFactory {\n  constructor(\n    private _dateHelper: DateHelperService,\n  ) { }\n\n  public getFromPayload(payload: LoginResult): User {\n    const decodedToken: JwtPayload = jwtDecode(payload.token);\n\n    return this.getUser(\n      decodedToken.email,\n      decodedToken.name,\n      payload.lastLogin ? this._dateHelper.getDateFromUtcString(payload.lastLogin) : null\n    );\n  }\n\n  public getUser(email: string, name: string, lastLogin: Date, password?: string): User {\n    return new User(email, name, lastLogin, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Deserialize, Serialize } from 'cerialize';\n\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public getUser(): User {\n    return Deserialize(sessionStorage.getItem('user'));\n  }\n\n  public setUser(user: User): void {\n    sessionStorage.setItem('user', JSON.stringify(Serialize(user)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                configFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/component/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/login.form.factory.ts\n            \n            \n                injectable\n            \n            \n                LoginFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/login.service.ts\n            \n            \n                injectable\n            \n            \n                LoginService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                AuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interface/service/log.service.abstract.ts\n            \n            \n                class\n            \n            \n                LogServiceAbstract\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/api-response.model.ts\n            \n            \n                interface\n            \n            \n                ApiResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/error-response.model.ts\n            \n            \n                interface\n            \n            \n                ErrorResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/jwt-payload.model.ts\n            \n            \n                interface\n            \n            \n                JwtPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/login-result.model.ts\n            \n            \n                interface\n            \n            \n                LoginResult\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/auth/logout.service.ts\n            \n            \n                injectable\n            \n            \n                LogoutService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/service/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/service/factory/user.factory.ts\n            \n            \n                injectable\n            \n            \n                UserFactory\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/service/helper/date-helper.service.ts\n            \n            \n                injectable\n            \n            \n                DateHelperService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/http/request-inspector.service.ts\n            \n            \n                injectable\n            \n            \n                RequestInspectorService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/component/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthLayoutComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/component/back-to-login/back-to-login.component.ts\n            \n            \n                component\n            \n            \n                BackToLoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngx-config/core : ^6.0.0\n        \n            @ngx-config/http-loader : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            add : ^2.0.6\n        \n            angular2-recaptcha : ^1.1.0\n        \n            angulartics2 : ^6.3.0\n        \n            bootstrap : ^4.1.3\n        \n            cerialize : ^0.1.18\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            jwt-decode : ^2.2.0\n        \n            lint-staged : ^7.3.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.22.2\n        \n            ng-password-helper : ^5.0.3\n        \n            ng2-password-strength-bar : ^1.2.1\n        \n            ng2-ui-auth : ^9.0.0\n        \n            ng2-validation : ^4.2.0\n        \n            ngx-logger : ^3.3.2\n        \n            ngx-toastr : ^9.1.0\n        \n            popper.js : ^1.14.4\n        \n            rxjs : ~6.2.0\n        \n            yarn : ^1.10.1\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 6 Full-Stack Demo\nIn this project I am demonstrating my current patterns and understanding in the\nMEAN stack composed of Angular 6, Angular Material, Bootstrap 4, FontAwesome5, express,\nand MongoDB.\nBackend\nIn this application, an express REST API backed by MongoDB exposes a store\nselling sporks (it's a spoon and fork combined!).\nPassport and JWT are used for authentication against MongoDB and call authentication.\nTODO is JWT blacklisting and logout since Redis is not in the stack\nFrontend\nAn Angular Material front-end consumes the API.  The customer registers, builds a cart, then checks out using Stripe.\nIn the Angular app, we use @ngrx/store, reactive forms, and ChangeDetectionStrategy.Push for performance, immutability and stability.\nngx-translate and ngx-config provide runtime configuration and translation.\nngx-logger feeds errors and events to an API endpoint where winston feeds them to the Elastic Beanstalk logs\nangulartics2 feeds data to Google Analytics.\nOutdatedBrowser is used to redirect users of old browsers.  Compodoc provides documentation.\nPipeline\nCode is deployed CI/CD using AWS CodePipline/CodeBuild.\nThe backend is deployed to an EC2 using Elastic Beanstalk, and the frontend\nis exposed in an S3 bucket.\nStrict linting of TypeScript, SCSS, JSON and HTML on the front-end\nand ES6 in the backend enforce quality measures at pre-commit and in the pipeline. no-any, max-file-line-count, and\nimmutability are enforced.\nUnit test coverage is around 98% lines.\nNOTE: There is no effort made at this time to implement a config.json builder,\nruntime config.json is committed to the repository\nNOTE: e2e tests are disabled because of issues getting ChromeDriver to run in CI\nInstructions for Use\n** Please note that this project uses yarn and that package-lock.json is in\nthe .gitignore **\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Pete Burkindine\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthConfig   (src/.../auth.config.ts)\n                        \n                        \n                            config   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/config/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthConfig:     ɵa\n\n                    \n                \n                    \n                        \n                            Type :     ɵa\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: config.core.apiBaseUri,\n  loginUrl: `${config.core.apiBaseUri}/auth/login`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : require('../../assets/config.json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
