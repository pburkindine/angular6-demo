var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiResponse.html",[0,1.394,1,2.232]],["body/interfaces/ApiResponse.html",[0,2.405,1,3.85,2,0.316,3,0.316,4,0.209,5,4.366,6,3.872,7,0.515,8,2.269,9,5.82,10,1.837,11,0.696,12,0.021,13,0.28,14,2.964,15,0.018,16,0.018]],["title/components/AppComponent.html",[17,0.94,18,1.479]],["body/components/AppComponent.html",[2,0.154,3,0.154,4,0.102,7,0.251,10,1.41,11,0.511,12,0.022,13,0.136,15,0.011,16,0.011,17,1.431,18,2.097,19,1.34,20,1.34,21,1.34,22,2.125,23,1.241,24,2.438,25,1.34,26,3.354,27,3.13,28,1.473,29,2.024,30,3.759,31,2.024,32,3.759,33,0.704,34,3.066,35,3.165,36,5.045,37,1.346,38,2.716,39,3.759,40,0.839,41,2.489,42,4.306,43,2.841,44,2.923,45,2.275,46,1.865,47,4.528,48,5.045,49,4.528,50,5.045,51,0.955,52,2.489,53,0.747,54,0.734,55,0.747,56,3.759,57,2.489,58,0.836,59,2.126,60,2.489,61,2.489,62,3.759,63,2.489,64,1.884,65,0.573,66,0.272,67,1.884,68,1.562,69,1.39,70,1.34,71,1.562,72,2.125,73,1.562,74,0.172,75,2.003,76,2.489,77,1.562,78,2.489,79,2.489,80,0.556,81,0.525,82,0.556,83,0.777,84,1.251,85,1.562,86,2.489,87,2.489,88,2.489,89,2.489,90,2.489,91,3.759,92,3.759,93,0.975,94,1.889,95,2.024,96,2.024,97,2.716,98,1.34,99,1.34,100,0.92,101,0.869,102,1.34,103,1.035,104,1.251,105,2.024,106,0.975,107,0.975,108,1.34,109,0.975,110,1.34,111,0.92,112,0.92,113,1.1,114,1.34]],["title/modules/AppModule.html",[115,0.94,116,2.437]],["body/modules/AppModule.html",[2,0.112,3,0.112,4,0.074,12,0.022,13,0.232,15,0.009,16,0.009,18,2.511,42,1.544,44,1.697,46,1.083,58,0.485,65,0.705,66,0.197,67,2.217,68,1.135,69,1.842,70,0.974,71,1.135,72,1.544,73,1.135,74,0.203,80,0.404,81,0.381,82,0.404,93,0.709,101,0.632,115,0.774,116,4.651,117,0.974,118,2.137,119,1.986,120,3.252,121,1.544,122,1.544,123,1.544,124,1.544,125,1.544,126,3.125,127,3.125,128,3.125,129,2.886,130,3.412,131,3.412,132,3.412,133,3.412,134,3.412,135,1.837,136,1.135,137,0.974,138,1.37,139,1.544,140,1.239,141,1.239,142,1.37,143,1.37,144,4.981,145,3.524,146,2.928,147,0.8,148,2.499,149,1.471,150,2.499,151,2.499,152,0.974,153,2.928,154,2.928,155,1.809,156,1.697,157,0.752,158,3.688,159,1.809,160,1.809,161,1.544,162,3.148,163,2.928,164,1.37,165,2.928,166,2.928,167,1.544,168,1.809,169,1.37,170,1.809,171,0.851,172,0.974,173,1.809,174,1.809,175,1.239,176,1.809,177,1.135,178,1.239,179,1.544,180,1.809,181,1.809,182,1.809,183,1.37,184,1.809,185,1.809,186,2.005,187,1.809,188,1.809,189,1.809,190,1.809,191,1.809,192,1.809,193,2.928,194,1.809,195,1.809,196,1.809,197,2.005,198,1.809,199,1.544,200,1.048,201,1.809,202,2.005,203,1.544,204,2.005,205,1.809,206,1.809,207,1.544,208,1.809,209,1.809,210,1.544,211,1.809,212,1.809,213,2.928,214,1.37,215,2.928,216,1.809,217,1.809,218,1.544,219,1.809,220,1.809,221,1.809,222,1.809,223,1.809,224,1.809,225,1.809,226,1.809,227,4.27,228,1.809,229,1.809,230,1.544,231,1.809,232,1.809,233,1.809,234,1.809,235,1.544,236,1.809,237,1.809,238,1.37,239,5.244,240,4.655,241,0.909]],["title/modules/AppRoutingModule.html",[115,0.94,126,2.232]],["body/modules/AppRoutingModule.html",[2,0.233,3,0.233,4,0.154,12,0.022,13,0.276,15,0.015,16,0.015,17,1.337,65,0.684,66,0.411,74,0.35,80,0.842,81,0.795,82,0.842,83,1.178,100,1.87,101,1.318,106,1.982,111,1.395,112,1.395,115,0.997,126,3.173,149,2.541,156,2.93,157,1.568,241,1.896,242,3.773,243,5.058,244,2.93,245,3.773,246,3.773,247,3.828,248,3.773,249,3.22,250,3.773,251,3.773,252,4.812,253,5.058,254,3.773,255,3.22,256,2.856,257,3.773,258,3.773,259,3.22,260,3.22,261,3.773,262,3.22,263,3.773,264,3.773]],["title/guards/AuthGuard.html",[247,2.694,265,2.694]],["body/guards/AuthGuard.html",[2,0.246,3,0.246,4,0.162,7,0.4,11,0.54,12,0.022,13,0.217,15,0.015,16,0.015,23,1.312,28,1.557,33,0.981,37,1.528,40,1.169,51,0.923,53,0.79,54,0.578,55,0.79,58,0.97,65,0.626,66,0.433,74,0.275,75,1.936,101,1.388,157,1.652,171,1.87,172,2.139,227,3.008,247,3.963,260,5.668,265,3.008,266,3.974,267,2.722,268,3.904,269,5.855,270,4.262,271,3.974,272,3.585,273,3.974,274,4.468,275,0.712,276,3.974,277,1.652,278,3.974,279,3.974,280,3.391]],["title/components/AuthLayoutComponent.html",[17,0.94,100,1.316]],["body/components/AuthLayoutComponent.html",[2,0.186,3,0.186,4,0.123,7,0.302,8,1.596,10,1.412,11,0.587,12,0.022,13,0.164,15,0.013,16,0.013,17,1.546,18,1.249,19,1.617,20,1.617,21,1.617,23,1.425,24,2.72,25,1.617,26,3.521,27,3.286,29,2.324,31,2.324,33,0.809,34,2.72,35,3.465,37,1.194,38,2.974,40,0.67,43,2.708,44,3.201,51,0.974,53,0.597,54,0.735,55,0.597,58,0.715,59,1.929,65,0.434,66,0.328,69,1.11,70,1.617,74,0.208,77,1.884,80,0.67,81,0.633,82,0.67,83,0.938,84,1.509,85,1.884,93,1.177,94,2.169,95,2.324,96,2.324,97,2.974,98,1.617,99,1.617,100,2.043,101,1.765,102,1.617,103,1.249,104,1.509,105,2.324,106,1.177,107,1.177,108,1.617,109,1.177,110,1.617,111,1.11,112,1.11,113,1.327,114,1.617,281,2.563,282,4.316,283,4.316,284,4.316,285,5.524,286,2.563,287,4.316,288,3.003,289,3.003,290,1.74,291,3.003,292,3.003,293,4.316,294,2.501]],["title/modules/AuthModule.html",[115,0.94,127,2.232]],["body/modules/AuthModule.html",[2,0.206,3,0.206,4,0.136,12,0.022,13,0.254,15,0.014,16,0.014,65,0.702,66,0.364,69,1.235,71,2.095,74,0.322,80,0.746,81,0.704,82,0.746,93,1.309,111,2.332,112,2.332,115,1.23,117,1.798,118,3.103,119,1.798,120,1.798,127,4.342,129,3.654,135,2.919,136,2.095,137,1.798,139,3.971,140,2.287,141,2.287,142,2.528,143,2.528,149,2.338,150,3.971,151,3.971,152,1.798,156,2.696,157,1.388,164,3.522,199,2.85,200,3.654,241,1.678,295,2.85,296,2.85,297,2.85,298,3.34,299,3.187,300,2.095,301,4.653,302,3.971,303,4.653,304,3.971,305,4.653,306,4.653,307,2.528,308,3.34,309,2.85,310,2.85]],["title/modules/AuthRoutingModule.html",[115,0.94,200,2.062]],["body/modules/AuthRoutingModule.html",[2,0.26,3,0.26,4,0.172,12,0.022,13,0.297,15,0.016,16,0.016,17,1.592,65,0.679,66,0.459,74,0.376,80,0.94,81,0.888,82,0.94,83,1.315,100,2.011,111,2.011,112,2.011,113,1.861,115,1.113,149,2.732,156,3.151,157,1.751,200,3.151,241,2.116,244,3.151,249,3.595,252,4.559,262,3.595,309,3.595,310,3.595,311,4.212,312,4.212,313,2.441,314,4.212]],["title/interceptors/AuthTokenInterceptor.html",[130,2.437,315,1.572]],["body/interceptors/AuthTokenInterceptor.html",[2,0.215,3,0.215,4,0.142,7,0.351,10,0.974,11,0.652,12,0.022,13,0.19,15,0.014,16,0.014,23,1.151,33,0.898,37,1.461,40,0.778,51,0.845,53,0.953,54,0.698,55,0.953,58,0.908,65,0.594,66,0.38,74,0.241,80,0.778,81,1.243,82,0.778,83,1.71,101,1.218,130,3.283,147,1.54,171,1.64,172,1.877,268,3.701,275,0.652,290,2.02,315,1.54,316,5.478,317,3.486,318,3.437,319,3.486,320,5.9,321,3.486,322,4.793,323,2.187,324,3.584,325,3.701,326,3.486,327,2.777,328,2.753,329,2.187,330,3.007,331,1.64,332,2.02,333,2.02,334,3.486,335,4.676,336,3.486,337,2.387,338,2.975,339,2.975,340,2.975,341,2.975,342,2.975]],["title/components/BackToLoginComponent.html",[17,0.94,103,1.479]],["body/components/BackToLoginComponent.html",[2,0.211,3,0.211,4,0.139,7,0.343,12,0.021,13,0.186,15,0.014,16,0.014,17,1.621,18,1.416,19,1.834,20,1.834,21,1.834,23,1.557,24,2.914,25,1.834,26,3.625,27,3.383,29,2.54,31,2.54,33,0.884,37,1.279,38,3.145,40,1.208,51,0.832,54,0.687,58,0.564,59,1.648,65,0.343,66,0.372,74,0.236,93,1.335,94,2.37,95,2.54,96,2.54,97,3.145,98,1.834,99,1.834,100,1.26,101,1.19,102,1.834,103,2.429,104,3.269,105,2.54,106,1.335,107,1.335,108,1.834,109,1.335,110,1.834,111,1.26,112,1.26,113,1.505,114,1.834,294,2.733,313,2.733,343,4.619,344,4.097,345,2.907,346,4.026,347,4.026,348,3.406,349,3.406,350,4.718,351,4.718]],["title/modules/CoreModule.html",[115,0.94,128,2.232]],["body/modules/CoreModule.html",[2,0.307,3,0.307,4,0.203,12,0.021,13,0.271,15,0.018,16,0.018,65,0.653,66,0.542,74,0.417,80,1.109,81,1.047,82,1.109,115,1.313,118,2.878,128,3.782,149,3.029,241,2.495,299,4.129,300,3.116,352,4.966]],["title/injectables/DateHelperService.html",[275,0.484,353,2.437]],["body/injectables/DateHelperService.html",[2,0.261,3,0.261,4,0.173,7,0.425,10,1.78,11,0.575,12,0.021,13,0.231,15,0.016,16,0.016,28,1.656,33,1.021,37,1.425,51,0.745,53,0.84,54,0.615,55,0.84,58,0.903,65,0.549,66,0.461,74,0.292,83,1.32,204,2.895,275,0.82,277,1.757,353,3.733,354,4.652,355,3.608,356,5.45,357,5.45,358,4.227,359,4.227,360,5.112,361,4.652,362,4.227,363,4.227,364,4.227,365,4.227,366,4.227,367,4.227,368,4.227,369,4.227,370,4.227,371,4.227]],["title/injectables/ErrorHandlerService.html",[186,2.437,275,0.484]],["body/injectables/ErrorHandlerService.html",[2,0.261,3,0.261,4,0.173,7,0.425,11,0.741,12,0.021,13,0.231,15,0.016,16,0.016,23,1.396,28,1.656,33,1.021,40,0.944,45,2.739,46,2.356,51,0.961,53,1.084,54,0.793,55,1.084,58,0.7,59,1.904,65,0.549,66,0.461,74,0.292,80,0.944,81,0.891,82,0.944,107,1.656,148,4.652,186,3.733,275,0.82,277,1.757,290,2.449,372,5.148,373,3.608,374,5.45,375,2.895,376,4.227,377,5.45,378,4.227,379,2.652,380,4.227,381,4.227]],["title/components/ErrorPageComponent.html",[17,0.94,106,1.394]],["body/components/ErrorPageComponent.html",[2,0.22,3,0.22,4,0.145,7,0.358,12,0.021,13,0.194,15,0.014,16,0.014,17,1.647,18,1.48,19,1.916,20,1.916,21,1.916,23,1.605,24,2.981,25,1.916,26,3.659,27,3.415,29,2.617,31,2.617,33,0.911,38,3.204,40,1.236,51,0.857,54,0.708,58,0.59,59,1.698,65,0.358,66,0.388,74,0.246,93,1.394,94,2.443,95,2.617,96,2.617,97,3.204,98,1.916,99,1.916,100,1.316,101,1.243,102,1.916,103,1.48,104,1.788,105,2.617,106,2.332,107,2.17,108,1.916,109,1.394,110,1.916,111,1.316,112,1.316,113,1.572,114,1.916,294,2.817,382,3.037,383,4.862,384,4.862,385,4.862,386,3.559,387,3.559,388,4.862]],["title/interfaces/ErrorResponse.html",[0,1.394,389,2.232]],["body/interfaces/ErrorResponse.html",[0,2.345,2,0.303,3,0.303,4,0.2,6,3.713,7,0.494,8,2.213,9,5.738,10,1.959,11,0.814,12,0.021,13,0.268,14,3.467,15,0.018,16,0.018,107,2.634,389,3.754,390,4.186]],["title/components/HomeComponent.html",[17,0.94,109,1.394]],["body/components/HomeComponent.html",[2,0.225,3,0.225,4,0.148,7,0.366,12,0.021,13,0.199,15,0.015,16,0.015,17,1.659,18,1.511,19,1.957,20,1.957,21,1.957,23,1.628,24,3.014,25,1.957,26,3.676,27,3.431,29,2.655,31,2.655,33,0.924,38,3.232,40,1.25,51,0.87,54,0.718,58,0.602,59,1.723,65,0.366,66,0.396,74,0.251,93,1.424,94,2.478,95,2.655,96,2.655,97,3.232,98,1.957,99,1.957,100,1.344,101,1.269,102,1.957,103,1.511,104,1.826,105,2.655,106,1.424,107,1.424,108,1.957,109,2.352,110,1.957,111,1.344,112,1.344,113,1.606,114,1.957,259,5.124,391,3.102,392,4.932,393,4.932,394,3.635,395,3.635,396,4.932]],["title/modules/HomeModule.html",[115,0.94,397,2.437]],["body/modules/HomeModule.html",[2,0.26,3,0.26,4,0.172,12,0.021,13,0.297,15,0.016,16,0.016,65,0.679,66,0.459,74,0.376,80,0.94,81,0.888,82,0.94,93,1.651,109,2.644,115,1.437,117,2.268,118,3.489,119,2.268,120,2.268,135,3.411,136,2.642,137,2.268,149,2.732,241,2.116,299,3.724,300,2.642,397,4.764,398,3.595,399,3.595,400,3.595,401,4.233,402,4.212,403,3.595,404,4.212]],["title/modules/HomeRoutingModule.html",[115,0.94,401,2.232]],["body/modules/HomeRoutingModule.html",[2,0.283,3,0.283,4,0.187,12,0.022,13,0.314,15,0.017,16,0.017,17,1.212,65,0.661,66,0.5,74,0.397,80,1.023,81,0.966,82,1.023,83,1.431,109,2.249,115,1.212,149,2.884,156,3.325,157,1.906,241,2.304,244,3.325,252,3.47,255,3.913,256,3.47,401,3.6,403,3.913,405,4.585,406,4.585,407,4.585]],["title/interceptors/JsonHeaderInterceptor.html",[131,2.437,315,1.572]],["body/interceptors/JsonHeaderInterceptor.html",[2,0.211,3,0.211,4,0.139,7,0.344,8,1.748,10,1.514,11,0.737,12,0.022,13,0.187,15,0.014,16,0.014,23,1.128,33,0.886,37,1.451,40,1.21,51,0.956,53,0.679,54,0.497,55,0.679,58,0.783,65,0.545,66,0.373,74,0.236,75,2.004,80,1.055,81,1.294,82,1.055,83,1.476,131,3.237,147,1.509,275,0.643,315,1.509,318,3.4,323,2.143,324,3.558,325,3.669,327,2.739,328,2.723,329,2.143,330,2.965,331,1.607,332,1.979,333,1.979,338,2.916,339,2.916,340,2.916,342,2.916,408,5.849,409,3.416,410,5.849,411,4.727,412,3.416,413,2.916,414,2.916,415,4.727,416,4.727,417,4.727,418,3.416,419,4.727,420,3.416,421,3.416,422,3.416,423,2.916]],["title/interfaces/JwtPayload.html",[0,1.394,424,2.437]],["body/interfaces/JwtPayload.html",[0,2.345,2,0.303,3,0.303,4,0.2,7,0.494,8,2.213,10,1.959,11,0.814,12,0.021,13,0.268,14,3.467,15,0.018,16,0.018,54,0.978,424,4.098,425,4.186,426,3.713,427,3.163]],["title/modules/LayoutModule.html",[115,0.94,129,2.062]],["body/modules/LayoutModule.html",[2,0.231,3,0.231,4,0.153,12,0.022,13,0.275,15,0.015,16,0.015,65,0.691,66,0.408,69,1.382,71,2.344,74,0.348,80,0.834,81,0.788,82,0.834,93,1.464,100,2.413,103,2.713,106,2.557,115,1.328,117,2.012,118,3.29,119,2.012,120,2.012,129,4.021,135,3.153,136,2.344,137,2.012,149,2.525,156,2.912,157,1.554,164,3.804,241,1.878,299,3.442,300,2.344,302,4.289,304,4.289,307,2.829,344,2.829,428,3.19,429,3.19,430,3.737,431,3.737,432,3.737,433,3.737,434,3.737]],["title/interceptors/LogRequestInterceptor.html",[132,2.437,315,1.572]],["body/interceptors/LogRequestInterceptor.html",[2,0.225,3,0.225,4,0.148,7,0.366,11,0.671,12,0.022,13,0.199,15,0.015,16,0.015,23,1.2,33,0.924,37,1.483,40,1.101,45,2.478,46,2.22,51,0.87,53,0.981,54,0.718,55,0.981,58,0.928,65,0.632,66,0.396,74,0.251,75,1.824,81,1.18,132,3.378,147,1.606,275,0.671,315,1.606,318,3.512,323,2.28,324,3.479,325,3.766,327,2.858,328,2.813,329,2.28,330,3.094,331,1.71,332,2.106,333,2.106,337,3.378,375,2.489,379,2.28,435,4.778,436,3.635,437,4.238,438,3.479,439,3.635,440,3.635,441,2.751,442,2.751,443,2.751,444,3.635]],["title/interceptors/LogResponseInterceptor.html",[133,2.437,315,1.572]],["body/interceptors/LogResponseInterceptor.html",[2,0.211,3,0.211,4,0.139,7,0.343,11,0.642,12,0.022,13,0.186,15,0.014,16,0.014,23,1.125,33,0.884,37,1.449,40,1.053,45,2.37,46,2.16,51,0.832,53,0.938,54,0.687,55,0.938,58,0.968,65,0.639,66,0.372,74,0.236,75,1.744,80,0.76,81,1.231,82,0.76,133,3.231,147,1.505,275,0.642,315,1.505,318,3.395,323,2.137,324,3.385,325,3.665,327,2.733,328,2.719,329,2.959,330,2.959,331,1.603,332,1.974,333,1.974,337,2.333,375,2.333,379,2.137,435,4.619,437,4.097,438,3.385,441,2.578,442,2.578,443,2.578,445,3.406,446,3.406,447,3.406,448,4.026,449,2.578,450,2.907,451,2.907,452,2.907,453,2.333,454,2.907,455,3.406]],["title/injectables/LogService.html",[197,2.437,275,0.484]],["body/injectables/LogService.html",[2,0.205,3,0.205,4,0.136,7,0.334,10,1.492,11,0.827,12,0.022,13,0.181,15,0.014,16,0.014,33,0.868,40,0.741,46,1.714,51,1.072,53,1.208,54,0.885,55,1.208,58,0.957,59,2.302,65,0.537,66,0.362,69,1.228,74,0.23,80,1.192,81,1.125,82,1.192,83,1.037,107,1.816,175,2.274,197,3.174,275,0.726,290,1.924,379,2.083,456,2.834,457,3.956,458,3.509,459,3.956,460,3.321,461,5.778,462,3.321,463,4.635,464,3.956,465,3.321,466,4.557,467,3.956,468,3.321,469,3.956,470,3.321,471,4.635,472,3.321,473,4.635,474,4.635,475,3.321,476,3.321,477,3.321,478,3.321,479,3.321,480,3.321,481,3.321,482,3.321,483,3.321]],["title/classes/LogServiceAbstract.html",[46,1.316,74,0.246]],["body/classes/LogServiceAbstract.html",[2,0.206,3,0.206,4,0.136,7,0.335,10,1.494,11,0.827,12,0.021,13,0.182,15,0.014,16,0.014,33,0.87,37,1.667,46,1.717,51,1.073,53,1.21,54,0.886,55,1.21,58,1.044,59,2.37,65,0.335,74,0.321,80,1.037,81,0.979,82,1.037,107,1.82,178,2.281,179,2.842,218,2.842,332,1.93,333,1.93,457,3.964,458,3.515,459,3.964,464,3.964,466,4.564,467,3.964,469,3.964,484,2.842,485,6.971,486,4.644,487,3.33,488,4.644,489,3.33,490,2.842,491,3.33,492,3.33,493,4.644,494,3.33,495,3.33,496,3.33,497,3.33]],["title/injectables/LoginFormFactory.html",[275,0.484,498,2.437]],["body/injectables/LoginFormFactory.html",[2,0.254,3,0.254,4,0.168,7,0.414,11,0.559,12,0.022,13,0.225,15,0.016,16,0.016,28,1.611,33,1.003,37,1.406,40,0.918,51,0.944,53,0.817,54,0.598,55,0.817,58,0.887,65,0.599,66,0.448,74,0.284,152,2.213,171,1.934,275,0.809,277,1.709,290,2.382,427,1.934,498,3.666,499,3.508,500,5.381,501,3.508,502,5.381,503,4.111,504,4.568,505,4.111,506,4.076,507,3.358,508,3.508,509,3.508,510,4.568,511,3.508,512,4.568,513,2.065,514,3.508]],["title/components/LoginPageComponent.html",[17,0.94,111,1.316]],["body/components/LoginPageComponent.html",[2,0.125,3,0.125,4,0.083,7,0.204,8,1.186,11,0.541,12,0.022,13,0.111,15,0.012,16,0.009,17,1.302,18,0.843,19,1.092,20,1.092,21,1.092,23,1.059,24,2.142,25,1.092,26,3.154,27,2.944,29,1.727,31,1.727,33,0.601,34,2.821,37,1.384,38,2.435,40,0.716,45,2,46,1.673,51,0.968,53,0.638,54,0.658,55,0.638,58,0.816,59,2.096,64,4.308,65,0.573,66,0.221,69,0.75,73,1.272,74,0.14,75,1.938,80,0.453,81,0.427,82,0.453,93,0.795,94,1.612,95,1.727,96,1.727,97,2.435,98,1.092,99,1.092,100,0.75,101,1.12,102,1.092,103,0.843,104,1.019,105,1.727,106,0.795,107,1.257,108,1.092,109,0.795,110,1.092,111,1.673,112,0.75,113,1.417,114,1.092,152,1.092,157,0.843,171,0.954,172,1.092,177,1.272,267,1.389,268,2.838,272,2.197,294,3.036,313,3.036,346,2.738,347,2.738,427,2.129,498,3.098,506,3.098,507,2.012,513,2.273,515,1.731,516,3.424,517,2.738,518,3.861,519,4.524,520,3.396,521,3.979,522,3.098,523,3.012,524,3.424,525,3.012,526,3.424,527,3.208,528,3.208,529,2.028,530,2.028,531,2.028,532,2.028,533,2.028,534,2.028,535,2.028,536,1.731,537,1.731,538,1.731,539,2.028,540,2.028,541,2.028,542,1.731,543,1.731,544,1.731,545,2.028,546,2.028,547,2.028,548,2.028,549,1.535,550,3.208,551,3.861,552,2.428,553,2.738,554,2.738,555,4.308,556,3.861,557,2.738,558,2.738,559,2.738,560,3.208,561,3.208]],["title/interfaces/LoginResult.html",[0,1.394,562,2.232]],["body/interfaces/LoginResult.html",[0,2.345,2,0.303,3,0.303,4,0.2,7,0.494,8,2.213,10,1.959,11,0.814,12,0.021,13,0.268,14,3.467,15,0.018,16,0.018,335,5.738,562,3.754,563,4.186,564,4.186,565,5.089]],["title/injectables/LoginService.html",[275,0.484,522,2.437]],["body/injectables/LoginService.html",[2,0.167,3,0.167,4,0.11,7,0.272,8,1.478,10,1.78,11,0.715,12,0.022,13,0.148,15,0.014,16,0.012,28,1.059,33,0.749,34,3.161,35,3.297,37,1.124,40,0.893,43,2.984,44,3.045,45,2.39,46,1.944,51,0.989,53,0.946,54,0.692,55,0.946,58,0.929,59,1.396,65,0.652,66,0.295,69,1,70,1.456,73,1.696,74,0.187,75,2.306,77,1.696,80,0.604,81,0.57,82,0.604,83,1.248,84,1.358,85,1.696,101,0.944,171,1.272,172,1.456,267,1.852,268,3.297,272,2.738,275,0.647,277,1.124,313,2.756,328,2.818,331,1.272,427,1.881,513,2.641,522,2.738,562,3.297,566,2.308,567,5.256,568,3.998,569,3.601,570,3.045,571,4.757,572,3.6,573,3.998,574,2.704,575,3.998,576,2.704,577,3.998,578,2.704,579,2.704,580,2.308,581,2.704,582,2.308,583,2.239,584,2.047,585,2.047,586,2.704,587,3.998,588,2.704,589,2.704,590,2.704,591,2.704,592,2.704,593,2.704,594,2.704]],["title/injectables/LogoutService.html",[270,2.437,275,0.484]],["body/injectables/LogoutService.html",[1,1.898,2,0.187,3,0.187,4,0.124,7,0.305,8,1.605,10,1.418,11,0.59,12,0.022,13,0.165,15,0.013,16,0.013,28,1.186,33,0.813,34,2.732,35,3.477,37,1.199,40,0.969,43,3.183,44,3.212,51,0.977,53,0.602,54,0.44,55,0.602,58,0.841,59,1.516,65,0.669,66,0.33,69,1.605,70,1.629,74,0.209,75,2.38,77,1.898,80,0.676,81,0.638,82,0.676,83,0.945,84,1.52,85,1.898,101,1.057,145,4.196,147,1.337,157,1.258,171,1.424,172,1.629,177,1.898,267,2.072,268,3.477,270,2.972,272,2.972,275,0.69,277,1.258,313,1.753,328,2.55,331,1.424,389,1.898,449,2.291,523,3.841,524,4.196,525,3.841,526,4.196,536,2.583,549,2.291,580,2.583,595,2.583,596,5.543,597,4.731,598,4.331,599,4.34,600,3.026,601,3.026,602,3.026,603,3.026,604,3.704,605,3.026,606,3.026,607,3.026,608,3.026,609,2.583]],["title/injectables/RegisterFormFactory.html",[275,0.484,610,2.437]],["body/injectables/RegisterFormFactory.html",[2,0.234,3,0.234,4,0.154,7,0.381,11,0.515,12,0.022,13,0.207,15,0.015,16,0.015,28,1.483,33,0.95,37,1.35,40,1.131,51,0.894,53,0.752,54,0.738,55,0.752,58,0.84,65,0.575,66,0.413,74,0.262,75,1.399,83,1.582,152,2.037,171,1.781,275,0.777,277,1.573,427,1.781,500,5.209,501,3.23,502,5.209,504,4.326,506,3.914,507,3.179,508,3.23,509,3.23,510,5.209,511,3.23,512,5.209,513,1.902,514,4.326,610,3.471,611,3.23,612,3.785,613,3.785,614,5.714,615,5.068,616,5.068,617,3.785,618,3.785]],["title/components/RegisterPageComponent.html",[17,0.94,112,1.316]],["body/components/RegisterPageComponent.html",[2,0.104,3,0.104,4,0.069,7,0.17,8,1.021,10,1.135,11,0.552,12,0.022,13,0.092,15,0.008,16,0.014,17,1.185,18,0.7,19,0.907,20,0.907,21,0.907,23,0.912,24,1.89,25,0.907,26,2.96,27,2.763,29,1.487,31,1.487,33,0.517,34,2.96,37,1.299,38,2.187,40,0.617,45,1.764,46,1.502,51,0.936,53,0.698,54,0.8,55,0.698,58,0.843,59,1.976,64,4.849,65,0.57,66,0.184,69,0.623,73,1.057,74,0.117,75,1.781,83,0.526,93,0.66,94,1.388,95,1.487,96,1.487,97,2.187,98,0.907,99,0.907,100,0.623,101,0.588,102,0.907,103,0.7,104,0.846,105,1.487,106,0.66,107,1.082,108,0.907,109,0.66,110,0.907,111,0.623,112,1.502,113,2.248,114,0.907,147,0.744,152,0.907,157,0.7,177,1.057,294,2.791,313,1.6,389,1.733,427,1.911,506,2.782,507,1.733,513,2.843,516,3.074,517,2.357,518,3.466,520,2.357,523,2.658,524,3.074,525,2.658,526,3.074,537,1.438,538,1.438,542,1.438,543,1.438,544,1.438,549,2.091,551,4.533,552,3.074,553,2.357,554,2.357,555,4.849,556,4.111,557,2.357,558,3.466,559,3.466,569,2.658,570,2.353,583,1.652,584,1.275,585,1.275,610,2.782,619,1.438,620,2.762,621,2.762,622,2.762,623,4.062,624,1.684,625,3.511,626,2.782,627,2.762,628,2.762,629,5.087,630,1.684,631,2.762,632,1.684,633,1.684,634,1.684,635,1.684,636,1.684,637,1.684,638,1.684,639,1.684,640,1.684,641,1.438,642,1.684,643,1.684,644,1.684,645,1.684,646,1.684,647,3.511,648,1.684,649,1.684,650,2.762,651,2.762,652,1.684,653,2.762,654,1.684,655,2.762,656,2.762,657,2.762,658,1.684,659,2.762,660,2.762,661,1.684,662,1.684,663,1.684]],["title/injectables/RegisterService.html",[275,0.484,626,2.437]],["body/injectables/RegisterService.html",[1,2.043,2,0.201,3,0.201,4,0.133,7,0.328,8,1.691,10,1.476,11,0.719,12,0.022,13,0.178,15,0.013,16,0.013,28,1.276,33,0.857,34,2.845,35,3.594,37,1.249,40,1.021,43,2.869,44,3.32,51,1.01,53,0.909,54,0.666,55,0.909,58,0.875,59,1.597,65,0.647,66,0.355,69,1.204,70,1.754,74,0.225,75,2.314,77,2.043,80,0.727,81,0.687,82,0.727,83,1.017,84,1.637,85,2.043,113,2.02,145,4.337,147,1.439,275,0.719,277,1.354,286,2.78,328,2.655,331,1.533,569,4,570,3.32,583,2.84,584,2.466,585,2.466,598,4.51,604,2.78,626,3.132,641,3.903,664,2.78,665,5.73,666,4.573,667,3.257,668,3.257,669,3.257,670,3.257,671,3.257,672,3.257,673,3.257]],["title/injectables/RequestInspectorService.html",[275,0.484,438,2.062]],["body/injectables/RequestInspectorService.html",[2,0.275,3,0.275,4,0.182,7,0.448,11,0.605,12,0.021,13,0.243,15,0.017,16,0.017,28,1.743,33,1.055,37,1.46,51,0.784,53,0.884,54,0.647,55,0.884,58,0.933,65,0.567,66,0.485,74,0.308,80,0.993,81,0.937,82,0.993,147,1.965,274,4.806,275,0.84,277,1.849,324,3.763,327,2.577,438,3.262,674,4.806,675,3.796,676,5.631,677,5.631,678,4.448,679,4.448]],["title/interceptors/TimingInterceptor.html",[134,2.437,315,1.572]],["body/interceptors/TimingInterceptor.html",[2,0.201,3,0.201,4,0.133,7,0.327,11,0.621,12,0.022,13,0.178,15,0.013,16,0.013,23,1.072,33,0.855,37,1.425,40,1.019,45,2.293,46,2.116,51,0.805,53,0.907,54,0.664,55,0.907,58,0.999,65,0.629,66,0.354,74,0.225,75,1.688,80,0.725,81,1.206,82,0.725,83,1.425,134,3.126,147,1.435,275,0.621,315,1.435,318,3.31,323,2.038,324,3.316,325,3.59,327,2.644,328,2.651,329,2.863,330,2.863,331,1.529,332,1.882,333,1.882,337,2.225,375,2.225,379,2.038,437,3.994,438,3.316,441,2.459,442,2.459,443,2.459,448,3.895,449,2.459,450,2.773,451,2.773,452,2.773,453,3.614,454,2.773,680,3.249,681,3.249,682,3.249,683,3.455,684,4.564,685,4.564,686,4.564,687,3.249,688,3.249,689,3.249,690,3.249,691,3.249]],["title/classes/User.html",[74,0.246,583,1.674]],["body/classes/User.html",[2,0.18,3,0.18,4,0.119,7,0.293,8,1.562,10,1.988,11,0.786,12,0.021,13,0.159,14,3.912,15,0.012,16,0.012,40,0.651,51,1.145,53,0.58,54,0.927,55,1.15,58,0.903,65,0.293,74,0.292,75,2.497,360,4.709,427,2.721,513,3.126,565,4.709,583,1.988,692,2.488,693,5.448,694,5.448,695,5.448,696,5.448,697,4.225,698,4.225,699,4.225,700,3.606,701,5.448,702,6.493,703,2.915,704,2.915,705,2.915,706,2.915,707,2.915,708,2.915,709,2.915,710,2.915,711,2.915,712,2.915,713,2.915,714,2.207,715,4.225,716,4.225,717,4.225,718,4.225]],["title/injectables/UserFactory.html",[275,0.484,570,2.062]],["body/injectables/UserFactory.html",[2,0.17,3,0.17,4,0.112,7,0.277,10,1.788,11,0.769,12,0.022,13,0.15,15,0.012,16,0.012,28,1.079,33,0.759,37,1.578,40,0.615,51,0.996,53,1.124,54,0.947,55,1.124,58,1.039,65,0.615,66,0.3,74,0.19,83,0.86,204,1.886,275,0.654,277,1.145,290,1.595,353,3.632,360,3.64,424,2.775,427,2.263,513,2.84,562,3.327,565,4.014,570,2.348,582,2.35,583,3.105,609,3.459,700,2.35,719,2.35,720,4.052,721,4.052,722,4.052,723,4.104,724,2.754,725,2.754,726,4.052,727,4.052,728,4.048,729,2.754,730,2.754,731,4.052,732,2.754,733,2.754,734,4.052,735,2.754,736,2.754,737,2.754,738,2.754,739,2.084,740,2.35,741,2.754,742,4.052,743,2.754,744,2.754,745,2.35,746,2.754,747,2.754,748,2.754,749,2.754,750,2.754,751,2.754,752,2.754,753,2.754,754,2.754,755,2.754,756,2.754,757,2.754,758,2.754,759,2.754,760,2.754,761,2.754]],["title/interfaces/UserPayload.html",[0,1.394,728,2.437]],["body/interfaces/UserPayload.html",[0,2.287,2,0.291,3,0.291,4,0.192,7,0.474,8,2.158,10,2.003,11,0.862,12,0.021,13,0.257,14,3.675,15,0.017,16,0.017,54,0.965,426,3.566,427,3.119,513,3.331,728,3.998,762,4.021]],["title/injectables/UserService.html",[275,0.484,572,2.437]],["body/injectables/UserService.html",[2,0.259,3,0.259,4,0.171,7,0.421,11,0.569,12,0.022,13,0.229,15,0.016,16,0.016,28,1.639,33,1.014,37,1.591,51,0.954,53,0.832,54,0.609,55,0.832,58,0.994,59,1.891,65,0.604,66,0.456,74,0.289,275,0.816,277,1.739,572,3.708,583,3.225,714,3.166,723,5.417,745,3.57,763,3.57,764,5.413,765,4.183,766,5.413,767,4.183,768,4.183,769,4.183,770,4.183,771,4.183,772,4.183]],["title/coverage.html",[773,3.68]],["body/coverage.html",[0,2.257,1,1.811,4,0.118,5,2.464,6,3.175,11,0.393,12,0.021,15,0.012,16,0.012,17,1.639,18,1.2,22,2.464,46,1.067,74,0.29,84,1.451,100,1.067,103,1.2,106,1.131,109,1.131,111,1.067,112,1.067,138,3.175,178,2.873,183,2.185,186,1.977,197,1.977,202,2.873,204,1.977,214,2.185,238,2.185,270,1.977,275,0.906,281,2.464,343,2.464,344,2.185,345,2.464,353,1.977,354,2.464,355,2.464,372,2.464,373,2.464,382,2.464,389,1.811,390,2.464,391,2.464,424,1.977,425,2.464,426,3.175,438,1.673,456,2.464,484,2.464,498,1.977,499,2.464,515,2.464,522,1.977,562,1.811,563,2.464,564,2.464,566,2.464,570,1.673,572,1.977,583,1.358,595,2.464,610,1.977,611,2.464,619,2.464,626,1.977,664,2.464,674,2.464,675,2.464,692,2.464,719,2.464,728,1.977,762,2.464,763,2.464,773,2.185,774,2.185,775,2.887,776,2.887,777,7.281,778,6.01,779,6.01,780,2.887,781,2.887,782,6.58,783,4.941,784,3.58,785,4.105,786,4.941,787,2.887,788,2.464,789,2.464,790,2.887,791,2.887]],["title/dependencies.html",[117,2.305,792,2.534]],["body/dependencies.html",[12,0.022,15,0.014,16,0.014,66,0.372,67,3.571,68,2.959,69,2.347,70,1.834,71,2.137,101,1.19,117,1.834,119,1.834,140,2.333,141,2.333,142,2.578,143,2.578,152,1.834,157,1.416,161,2.907,162,4.026,167,2.907,169,2.578,171,2.22,172,1.834,175,2.333,177,2.137,300,2.137,307,2.578,331,1.603,361,2.907,507,2.137,714,2.578,739,2.578,740,2.907,793,3.406,794,3.406,795,6.886,796,3.406,797,4.718,798,3.406,799,3.406,800,3.406,801,3.406,802,3.406,803,3.406,804,2.907,805,4.718,806,3.406,807,3.406,808,3.406,809,3.406,810,3.406,811,3.406,812,3.406,813,3.406,814,3.406,815,3.406,816,3.406,817,3.406,818,3.406,819,3.406,820,3.406,821,3.406,822,3.406,823,3.406,824,3.406,825,3.406,826,2.907,827,3.406,828,3.406,829,3.406,830,3.406,831,3.406,832,3.406,833,3.406,834,3.406,835,3.406,836,3.406,837,3.406,838,3.406,839,2.907,840,3.406,841,3.406,842,3.406]],["title/miscellaneous/functions.html",[202,2.932,843,2.034]],["body/miscellaneous/functions.html",[7,0.517,12,0.02,15,0.018,16,0.018,53,1.223,54,0.896,55,1.223,138,3.889,202,3.519,203,4.385,207,4.385,214,4.658,238,4.658,843,3.519,844,6.153,845,6.153,846,6.153]],["title/index.html",[7,0.299,683,2.248,847,2.248]],["body/index.html",[4,0.123,12,0.016,15,0.013,16,0.013,23,0.996,27,1.517,68,1.894,69,1.874,84,1.517,94,1.517,104,1.517,107,1.183,113,1.334,119,1.625,120,2.332,137,1.625,140,4.015,141,2.967,169,2.285,175,2.067,210,2.576,256,2.285,294,2.51,453,2.067,458,2.285,490,2.576,516,2.285,552,2.285,555,2.285,583,1.42,597,2.576,739,3.279,773,2.285,774,2.285,792,2.576,804,2.576,826,2.576,839,2.576,847,2.285,848,4.332,849,5.067,850,3.018,851,4.332,852,3.018,853,3.018,854,3.018,855,3.018,856,3.018,857,3.018,858,3.018,859,3.018,860,3.697,861,5.067,862,5.067,863,3.018,864,3.018,865,5.067,866,4.332,867,3.018,868,2.576,869,3.018,870,3.018,871,3.018,872,3.018,873,3.018,874,3.018,875,5.489,876,4.332,877,3.018,878,3.018,879,3.018,880,3.018,881,4.332,882,4.332,883,4.332,884,3.018,885,3.018,886,3.018,887,3.018,888,3.018,889,3.018,890,3.018,891,3.018,892,3.018,893,4.332,894,3.018,895,4.332,896,3.018,897,5.067,898,3.018,899,3.018,900,4.332,901,4.332,902,3.018,903,3.018,904,3.018,905,3.018,906,3.018,907,3.018,908,4.332,909,3.018,910,4.332,911,3.018,912,3.018,913,3.018,914,3.018,915,3.018,916,3.018,917,3.018,918,3.018,919,3.018,920,3.018,921,4.332,922,3.018,923,3.018,924,3.018,925,4.332,926,3.018,927,4.332,928,3.018,929,3.018,930,4.332,931,3.018,932,3.018,933,5.067,934,3.018,935,3.018,936,3.018,937,4.332,938,3.018,939,3.018,940,3.018,941,3.018,942,3.018,943,3.018,944,3.018,945,3.018,946,3.018,947,3.018,948,3.018]],["title/license.html",[683,2.248,847,2.248,949,2.534]],["body/license.html",[4,0.162,12,0.015,15,0.015,16,0.015,120,2.132,137,2.132,235,3.38,341,3.38,453,2.712,774,2.998,860,3.38,868,3.38,875,4.458,949,3.38,950,3.961,951,5.845,952,3.961,953,3.961,954,3.961,955,3.961,956,5.224,957,3.961,958,3.961,959,3.961,960,3.961,961,5.224,962,3.961,963,6.215,964,6.947,965,3.961,966,5.224,967,5.845,968,3.961,969,5.845,970,5.224,971,3.961,972,3.961,973,3.961,974,3.961,975,3.961,976,3.961,977,3.961,978,3.961,979,3.961,980,3.961,981,3.961,982,3.961,983,5.224,984,5.224,985,3.961,986,3.961,987,5.224,988,3.961,989,3.961,990,3.961,991,3.961,992,3.961,993,3.961,994,3.961,995,3.961,996,3.961,997,3.961,998,3.961,999,3.961,1000,3.961,1001,3.961,1002,3.961,1003,3.961,1004,3.961,1005,3.961,1006,3.961]],["title/modules.html",[115,1.285]],["body/modules.html",[12,0.018,15,0.018,16,0.018,68,4.205,115,1.286,116,3.332,126,3.052,127,3.052,128,3.052,129,2.819,200,2.819,397,3.332,401,3.052,1007,6.704,1008,6.704,1009,7.154,1010,6.704,1011,6.704]],["title/overview.html",[1012,4.149]],["body/overview.html",[0,1.266,12,0.021,13,0.177,15,0.013,16,0.013,17,0.854,18,2.666,74,0.223,93,1.266,100,1.945,103,2.187,106,2.061,109,2.061,111,1.945,112,1.945,115,1.202,116,4.957,117,1.739,118,1.872,119,1.739,120,1.739,121,2.758,122,2.758,123,2.758,124,2.758,125,2.758,126,3.3,127,4.277,128,3.3,129,3.907,130,3.603,131,3.603,132,3.603,133,3.603,134,3.603,135,2.852,136,2.027,137,1.739,200,3.048,230,2.758,244,1.872,265,2.446,275,0.439,295,2.758,296,2.758,297,2.758,397,4.274,398,2.758,399,2.758,400,2.758,401,3.3,423,2.758,428,2.758,429,2.758,1012,2.758,1013,3.231,1014,3.231,1015,3.231,1016,3.231,1017,3.231]],["title/routes.html",[244,2.817]],["body/routes.html",[12,0.019,15,0.019,16,0.019,244,3.304]],["title/miscellaneous/variables.html",[785,3.241,843,2.034]],["body/miscellaneous/variables.html",[7,0.453,11,0.887,12,0.022,15,0.017,16,0.017,84,3.12,178,4.701,183,4.701,227,3.405,280,3.839,413,5.565,414,5.565,784,3.839,785,3.405,788,3.839,789,3.839,843,3.081,1018,5.671,1019,4.498,1020,4.498,1021,4.498,1022,4.498,1023,4.498,1024,4.498,1025,4.498,1026,5.671]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["0.1.18",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1015,"title":{},"body":{"overview.html":{}}}],["1.1.0",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["1.10.1",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1017,"title":{},"body":{"overview.html":{}}}],["10.0.2",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1014,"title":{},"body":{"overview.html":{}}}],["2",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["2.0.6",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":953,"title":{},"body":{"license.html":{}}}],["255",{"_index":558,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["3.0.1",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":653,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["4",{"_index":858,"title":{},"body":{"index.html":{}}}],["4.1.3",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1016,"title":{},"body":{"overview.html":{}}}],["5.7.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":848,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1013,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":423,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["9.0.0",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["98",{"_index":932,"title":{},"body":{"index.html":{}}}],["_angulartics2googletagmanag",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["_authservic",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["_configservic",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["_configur",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["_configuretransl",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["_datehelp",{"_index":726,"title":{},"body":{"injectables/UserFactory.html":{}}}],["_email",{"_index":693,"title":{},"body":{"classes/User.html":{}}}],["_errorhandl",{"_index":517,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_errorhandler(errorrespons",{"_index":628,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_errorhandler(result",{"_index":528,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_formbuild",{"_index":504,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["_formfactori",{"_index":520,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_geterrorlist",{"_index":622,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_geterrorlist(errorrespons",{"_index":631,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_http",{"_index":598,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["_injector",{"_index":322,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["_jsonencodeverb",{"_index":410,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["_lastlogin",{"_index":694,"title":{},"body":{"classes/User.html":{}}}],["_logger",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["_loginservic",{"_index":521,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_loginuri",{"_index":567,"title":{},"body":{"injectables/LoginService.html":{}}}],["_logoutservic",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_logouturi",{"_index":596,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_name",{"_index":695,"title":{},"body":{"classes/User.html":{}}}],["_ngxlogger",{"_index":463,"title":{},"body":{"injectables/LogService.html":{}}}],["_password",{"_index":696,"title":{},"body":{"classes/User.html":{}}}],["_registerservic",{"_index":625,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_registeruri",{"_index":665,"title":{},"body":{"injectables/RegisterService.html":{}}}],["_requestinspector",{"_index":437,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_router",{"_index":523,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["_setus",{"_index":568,"title":{},"body":{"injectables/LoginService.html":{}}}],["_setuser(result",{"_index":575,"title":{},"body":{"injectables/LoginService.html":{}}}],["_successhandl",{"_index":518,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_titleservic",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["_toastr",{"_index":525,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["_translateservic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["_userfactori",{"_index":569,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["_userservic",{"_index":571,"title":{},"body":{"injectables/LoginService.html":{}}}],["abov",{"_index":982,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":485,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["accept",{"_index":418,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["accessor",{"_index":697,"title":{},"body":{"classes/User.html":{}}}],["action",{"_index":1001,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["add",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["address",{"_index":554,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["against",{"_index":877,"title":{},"body":{"index.html":{}}}],["analyt",{"_index":903,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":976,"title":{},"body":{"license.html":{}}}],["angular",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compil",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular2",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["angulartics2",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":865,"title":{},"body":{"index.html":{}}}],["apibaseuri",{"_index":495,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["apirespons",{"_index":1,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["app.compon",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing.modul",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":18,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":863,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":419,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["appmodul",{"_index":116,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":126,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":1005,"title":{},"body":{"license.html":{}}}],["around",{"_index":931,"title":{},"body":{"index.html":{}}}],["assets/config.json",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lang",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["associ",{"_index":965,"title":{},"body":{"license.html":{}}}],["auth",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["auth.component.html",{"_index":284,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.component.scss",{"_index":283,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.routing.modul",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.modul",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module#authmodul",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.routing.modul",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/component/login/login.compon",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/register/register.compon",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/login",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout.servic",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authconfig",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":876,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":247,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authlayoutcompon",{"_index":100,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":127,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":341,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["authreq",{"_index":338,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["authrout",{"_index":312,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authroutingmodul",{"_index":200,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["authservice.gettoken",{"_index":336,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authtokeninterceptor",{"_index":130,"title":{"interceptors/AuthTokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"overview.html":{}}}],["autoseri",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["avail",{"_index":1011,"title":{},"body":{"modules.html":{}}}],["aw",{"_index":912,"title":{},"body":{"index.html":{}}}],["back",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["backend",{"_index":862,"title":{},"body":{"index.html":{}}}],["backtologincompon",{"_index":103,"title":{"components/BackToLoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["baseurl",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beanstalk",{"_index":901,"title":{},"body":{"index.html":{}}}],["below",{"_index":656,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["blacklist",{"_index":879,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RequestInspectorService.html":{}}}],["bootstrap",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["brows",{"_index":1009,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":916,"title":{},"body":{"index.html":{}}}],["build",{"_index":886,"title":{},"body":{"index.html":{}}}],["builder",{"_index":938,"title":{},"body":{"index.html":{}}}],["burkindin",{"_index":955,"title":{},"body":{"license.html":{}}}],["c",{"_index":952,"title":{},"body":{"license.html":{}}}],["call",{"_index":878,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cart",{"_index":887,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":602,"title":{},"body":{"injectables/LogoutService.html":{}}}],["cerial",{"_index":714,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["changedetectionstrategy.push",{"_index":891,"title":{},"body":{"index.html":{}}}],["charact",{"_index":559,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["charg",{"_index":960,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":422,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["check",{"_index":888,"title":{},"body":{"index.html":{}}}],["children",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["chromedriv",{"_index":943,"title":{},"body":{"index.html":{}}}],["ci",{"_index":945,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":911,"title":{},"body":{"index.html":{}}}],["claim",{"_index":997,"title":{},"body":{"license.html":{}}}],["class",{"_index":74,"title":{"classes/LogServiceAbstract.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["close",{"_index":551,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["cluster_appmodul",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_homemodul",{"_index":398,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":399,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_import",{"_index":400,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutmodul",{"_index":428,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declar",{"_index":429,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["code",{"_index":909,"title":{},"body":{"index.html":{}}}],["codepipline/codebuild",{"_index":913,"title":{},"body":{"index.html":{}}}],["combin",{"_index":873,"title":{},"body":{"index.html":{}}}],["commit",{"_index":925,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["compodoc",{"_index":907,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":17,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component/auth/auth.compon",{"_index":431,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/back",{"_index":432,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/error/error.compon",{"_index":434,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/home/home.compon",{"_index":403,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["component/login/login.compon",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/register/register.compon",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component_templ",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["compos",{"_index":857,"title":{},"body":{"index.html":{}}}],["condit",{"_index":981,"title":{},"body":{"license.html":{}}}],["config",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.auth.heroimageuri",{"_index":292,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["config.core.apibaseuri",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.core.apibaseuri}${config.auth.loginuri",{"_index":588,"title":{},"body":{"injectables/LoginService.html":{}}}],["config.core.apibaseuri}${config.auth.logouturi",{"_index":607,"title":{},"body":{"injectables/LogoutService.html":{}}}],["config.core.apibaseuri}${config.auth.registeruri",{"_index":671,"title":{},"body":{"injectables/RegisterService.html":{}}}],["config.core.apibaseuri}${config.logging.logerroruri",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["config.core.apibaseuri}/auth/login",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.json",{"_index":937,"title":{},"body":{"index.html":{}}}],["config/auth.config",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["config/cor",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["config/http",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["configfactori",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configfactory(http",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["confighttpload",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["confighttploader(http",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["configload",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["configservic",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["configur",{"_index":896,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":657,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["confirmpassword",{"_index":618,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["confirmpasswordcontrol",{"_index":616,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["connect",{"_index":1006,"title":{},"body":{"license.html":{}}}],["consol",{"_index":496,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["console.log(data",{"_index":497,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["const",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["constructor(_angulartics2googletagmanag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_authservic",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["constructor(_configservic",{"_index":286,"title":{},"body":{"components/AuthLayoutComponent.html":{},"injectables/RegisterService.html":{}}}],["constructor(_datehelp",{"_index":724,"title":{},"body":{"injectables/UserFactory.html":{}}}],["constructor(_formbuild",{"_index":501,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["constructor(_formfactori",{"_index":624,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["constructor(_injector",{"_index":319,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["constructor(_logg",{"_index":375,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_ngxlogg",{"_index":460,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(email",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["constructor(priv",{"_index":290,"title":{},"body":{"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/UserFactory.html":{}}}],["consum",{"_index":884,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1002,"title":{},"body":{"license.html":{}}}],["copi",{"_index":963,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":951,"title":{},"body":{"license.html":{}}}],["core",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["core/core.modul",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interface/service/log.service.abstract",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{}}}],["core/model/payload/api",{"_index":669,"title":{},"body":{"injectables/RegisterService.html":{}}}],["core/model/payload/login",{"_index":581,"title":{},"body":{"injectables/LoginService.html":{}}}],["core/model/user.model",{"_index":584,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/error",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/factory/user.factori",{"_index":585,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/guard/auth.guard",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/service/interceptor/auth",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/json",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/log",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/timing.interceptor.servic",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/log.servic",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/user.servic",{"_index":586,"title":{},"body":{"injectables/LoginService.html":{}}}],["coremodul",{"_index":128,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":928,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":773,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtranslateload",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":853,"title":{},"body":{"index.html":{}}}],["custom",{"_index":885,"title":{},"body":{"index.html":{}}}],["customvalid",{"_index":508,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.email",{"_index":511,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.equalto(newpasswordcontrol",{"_index":617,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["d3",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["damag",{"_index":998,"title":{},"body":{"license.html":{}}}],["data",{"_index":490,"title":{},"body":{"classes/LogServiceAbstract.html":{},"index.html":{}}}],["date",{"_index":360,"title":{},"body":{"injectables/DateHelperService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["date.now",{"_index":685,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["datehelperservic",{"_index":353,"title":{"injectables/DateHelperService.html":{}},"body":{"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["ddthh:mm:ssza').tod",{"_index":365,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["deal",{"_index":966,"title":{},"body":{"license.html":{}}}],["debug",{"_index":457,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["debug(messag",{"_index":464,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["declar",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["decod",{"_index":740,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":754,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.email",{"_index":757,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.nam",{"_index":758,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decor",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["default",{"_index":413,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["demo",{"_index":850,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":852,"title":{},"body":{"index.html":{}}}],["dep",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":117,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":910,"title":{},"body":{"index.html":{}}}],["deseri",{"_index":768,"title":{},"body":{"injectables/UserService.html":{}}}],["deserialize(sessionstorage.getitem('us",{"_index":770,"title":{},"body":{"injectables/UserService.html":{}}}],["devlog",{"_index":486,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["devlog(data",{"_index":488,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["direct",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["disabl",{"_index":941,"title":{},"body":{"index.html":{}}}],["disabletimeout",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":974,"title":{},"body":{"license.html":{}}}],["document",{"_index":774,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":654,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["doesn\\'t",{"_index":662,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["dom",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["don't",{"_index":658,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["don\\'t",{"_index":663,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["dynam",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":940,"title":{},"body":{"index.html":{}}}],["ec2",{"_index":914,"title":{},"body":{"index.html":{}}}],["effort",{"_index":934,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":686,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["elast",{"_index":900,"title":{},"body":{"index.html":{}}}],["element",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["email",{"_index":427,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["en",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["enablehtml",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":883,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":898,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":921,"title":{},"body":{"index.html":{}}}],["enter",{"_index":553,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["environ",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["environments/environ",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["error",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["error(`provid",{"_index":368,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["error(messag",{"_index":467,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["error.component.html",{"_index":385,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error.component.scss",{"_index":384,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error:${this._geterrorlist(errorrespons",{"_index":646,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorhandl",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":186,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errorlist",{"_index":647,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorlist}${error",{"_index":649,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorpagecompon",{"_index":106,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorrespons",{"_index":389,"title":{"interfaces/ErrorResponse.html":{}},"body":{"interfaces/ErrorResponse.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["es",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["es6",{"_index":920,"title":{},"body":{"index.html":{}}}],["event",{"_index":453,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{},"license.html":{}}}],["exce",{"_index":557,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["expect",{"_index":369,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["expos",{"_index":866,"title":{},"body":{"index.html":{}}}],["express",{"_index":860,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":475,"title":{},"body":{"injectables/LogService.html":{}}}],["extensions/password",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["fals",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["fast_rewind",{"_index":350,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["feed",{"_index":897,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fit",{"_index":991,"title":{},"body":{"license.html":{}}}],["follow",{"_index":980,"title":{},"body":{"license.html":{}}}],["fontawesome5",{"_index":859,"title":{},"body":{"index.html":{}}}],["fork",{"_index":872,"title":{},"body":{"index.html":{}}}],["form",{"_index":516,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["form.get('password').value?.length",{"_index":652,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["form.get(\\'password\\').value?.length",{"_index":661,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["format",{"_index":371,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["formbuild",{"_index":502,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["formcontrol",{"_index":614,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["formdata",{"_index":730,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.nam",{"_index":752,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.password",{"_index":753,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formgroup",{"_index":506,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{}}}],["formsmodul",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["free",{"_index":959,"title":{},"body":{"license.html":{}}}],["front",{"_index":882,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":881,"title":{},"body":{"index.html":{}}}],["full",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"index.html":{}}}],["function",{"_index":202,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":978,"title":{},"body":{"license.html":{}}}],["get",{"_index":847,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdatefromutcstr",{"_index":356,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getdatefromutcstring(utcdatestr",{"_index":357,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getemail",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["getform",{"_index":500,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["getfromformdata",{"_index":720,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfromformdata(formdata",{"_index":727,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload",{"_index":721,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload(payload",{"_index":731,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getlastlogin",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["getnam",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["getpassword",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["getpayload",{"_index":722,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getpayload(us",{"_index":734,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getus",{"_index":723,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["getuser(email",{"_index":736,"title":{},"body":{"injectables/UserFactory.html":{}}}],["gitignor",{"_index":948,"title":{},"body":{"index.html":{}}}],["googl",{"_index":902,"title":{},"body":{"index.html":{}}}],["gotologin",{"_index":623,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["gotosignup",{"_index":519,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["grant",{"_index":958,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1010,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":265,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["hammerj",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":374,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":377,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.servic",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":373,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":378,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:8",{"_index":376,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["header",{"_index":417,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.servic",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["header.interceptor.service.t",{"_index":409,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:12",{"_index":411,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:17",{"_index":412,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["headers['cont",{"_index":421,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["helper.servic",{"_index":747,"title":{},"body":{"injectables/UserFactory.html":{}}}],["helper.service.t",{"_index":355,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:8",{"_index":358,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["helper/d",{"_index":746,"title":{},"body":{"injectables/UserFactory.html":{}}}],["herebi",{"_index":957,"title":{},"body":{"license.html":{}}}],["heroimageuri",{"_index":285,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["holder",{"_index":995,"title":{},"body":{"license.html":{}}}],["home",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["home.component.html",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.routing.modul",{"_index":404,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/home.module#homemodul",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homecompon",{"_index":109,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodul",{"_index":397,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homerout",{"_index":406,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["homeroutingmodul",{"_index":401,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["http",{"_index":846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http/request",{"_index":441,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["http_interceptor",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["httpclientmodul",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":629,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["httpevent",{"_index":329,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httphandler",{"_index":325,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":330,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":324,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprespons",{"_index":448,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["identifi",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["immut",{"_index":893,"title":{},"body":{"index.html":{}}}],["implement",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{}}}],["impli",{"_index":989,"title":{},"body":{"license.html":{}}}],["import",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["includ",{"_index":969,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":275,"title":{"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":320,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["inspector.servic",{"_index":442,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["inspector.service.t",{"_index":675,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["inspector.service.ts:7",{"_index":678,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["instanceof",{"_index":454,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["instruct",{"_index":946,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":318,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":323,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interceptor",{"_index":315,"title":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/UserPayload.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interface/service/log.service.abstract",{"_index":379,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["isconfigfilerequest",{"_index":676,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest(req",{"_index":677,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isnan(date.gettim",{"_index":366,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["issu",{"_index":942,"title":{},"body":{"index.html":{}}}],["it'",{"_index":870,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["json.stringify(serialize(us",{"_index":772,"title":{},"body":{"injectables/UserService.html":{}}}],["jsonheaderinterceptor",{"_index":131,"title":{"interceptors/JsonHeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["jwt",{"_index":739,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{},"index.html":{}}}],["jwtdecod",{"_index":738,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtdecode(payload.token",{"_index":755,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtpayload",{"_index":424,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["kind",{"_index":988,"title":{},"body":{"license.html":{}}}],["lang",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["lastlogin",{"_index":565,"title":{},"body":{"interfaces/LoginResult.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["layout",{"_index":282,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["layout/component/auth/auth.compon",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["layout/component/error/error.compon",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout/layout.modul",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["layoutmodul",{"_index":129,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"overview.html":{}}}],["level",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["liabil",{"_index":999,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":996,"title":{},"body":{"license.html":{}}}],["licens",{"_index":949,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":970,"title":{},"body":{"license.html":{}}}],["line",{"_index":927,"title":{},"body":{"index.html":{}}}],["line:no",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["lint",{"_index":826,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["loadchildren",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lock.json",{"_index":947,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":458,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"index.html":{}}}],["log(messag",{"_index":469,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["logerroruri",{"_index":473,"title":{},"body":{"injectables/LogService.html":{}}}],["logger",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["loggerconfig",{"_index":474,"title":{},"body":{"injectables/LogService.html":{}}}],["loggermodul",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":313,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["login'},{'nam",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["login(email",{"_index":577,"title":{},"body":{"injectables/LoginService.html":{}}}],["login(this.form.value.email",{"_index":540,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login.compon",{"_index":433,"title":{},"body":{"modules/LayoutModule.html":{}}}],["login.component.html",{"_index":347,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.scss",{"_index":346,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.t",{"_index":345,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:11",{"_index":349,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login.component.ts:8",{"_index":348,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login/back",{"_index":344,"title":{},"body":{"components/BackToLoginComponent.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["loginformfactori",{"_index":498,"title":{"injectables/LoginFormFactory.html":{}},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecompon",{"_index":111,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginresult",{"_index":562,"title":{"interfaces/LoginResult.html":{}},"body":{"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["loginservic",{"_index":522,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":597,"title":{},"body":{"injectables/LogoutService.html":{},"index.html":{}}}],["logoutservic",{"_index":270,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["logrequestinterceptor",{"_index":132,"title":{"interceptors/LogRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"overview.html":{}}}],["logresponseinterceptor",{"_index":133,"title":{"interceptors/LogResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogResponseInterceptor.html":{},"overview.html":{}}}],["logservic",{"_index":197,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logserviceabstract",{"_index":46,"title":{"classes/LogServiceAbstract.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["made",{"_index":935,"title":{},"body":{"index.html":{}}}],["map",{"_index":579,"title":{},"body":{"injectables/LoginService.html":{}}}],["matbuttonmodul",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{}}}],["matcardmodul",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["match",{"_index":16,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["matformfieldmodul",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{}}}],["maticonmodul",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["matinputmodul",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{}}}],["matpasswordstrengthmodul",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["matpasswordstrengthmodule.forroot",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{}}}],["max",{"_index":926,"title":{},"body":{"index.html":{}}}],["maxopen",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":856,"title":{},"body":{"index.html":{}}}],["measur",{"_index":923,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":990,"title":{},"body":{"license.html":{}}}],["merg",{"_index":972,"title":{},"body":{"license.html":{}}}],["messag",{"_index":466,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":843,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":950,"title":{},"body":{"license.html":{}}}],["mm",{"_index":364,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["model/payload/api",{"_index":603,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/error",{"_index":605,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/jwt",{"_index":741,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/login",{"_index":743,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/us",{"_index":744,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/user.model",{"_index":745,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["modifi",{"_index":971,"title":{},"body":{"license.html":{}}}],["modul",{"_index":115,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":361,"title":{},"body":{"injectables/DateHelperService.html":{},"dependencies.html":{}}}],["moment(utcdatestr",{"_index":362,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["mongodb",{"_index":861,"title":{},"body":{"index.html":{}}}],["more",{"_index":651,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["ms",{"_index":691,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["msg",{"_index":9,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{}}}],["multi",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nav.backtologin",{"_index":351,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["nav.errorpag",{"_index":388,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["new",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["newpasswordcontrol",{"_index":615,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["next",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(authreq",{"_index":342,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["next.handle(req",{"_index":337,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req).pip",{"_index":451,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["ng2",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"dependencies.html":{}}}],["ng2uiauthmodul",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["ng2uiauthmodule.forroot(authconfig",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["ngrx/effect",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":804,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"injectables/LogService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":461,"title":{},"body":{"injectables/LogService.html":{}}}],["ngxloggerlevel",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.off",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.trac",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":994,"title":{},"body":{"license.html":{}}}],["note",{"_index":933,"title":{},"body":{"index.html":{}}}],["notic",{"_index":983,"title":{},"body":{"license.html":{}}}],["null",{"_index":609,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/UserFactory.html":{}}}],["number",{"_index":684,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["object.values(errorresponse.error).foreach",{"_index":648,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["observ",{"_index":328,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{}}}],["obtain",{"_index":962,"title":{},"body":{"license.html":{}}}],["of(us",{"_index":594,"title":{},"body":{"injectables/LoginService.html":{}}}],["old",{"_index":906,"title":{},"body":{"index.html":{}}}],["onactivatetick",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["option",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":1004,"title":{},"body":{"license.html":{}}}],["out",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outdatedbrows",{"_index":904,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1012,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":792,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":383,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page'},{'nam",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["pages.login.loginbutton",{"_index":560,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.registerlink",{"_index":561,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.titl",{"_index":550,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.register.loginlink",{"_index":660,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.registerbutton",{"_index":659,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.titl",{"_index":650,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["paramet",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":992,"title":{},"body":{"license.html":{}}}],["passport",{"_index":874,"title":{},"body":{"index.html":{}}}],["password",{"_index":513,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["path",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pattern",{"_index":854,"title":{},"body":{"index.html":{}}}],["payload",{"_index":733,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.lastlogin",{"_index":759,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model",{"_index":742,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model.t",{"_index":426,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["perform",{"_index":892,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":956,"title":{},"body":{"license.html":{}}}],["permit",{"_index":977,"title":{},"body":{"license.html":{}}}],["person",{"_index":961,"title":{},"body":{"license.html":{}}}],["pete",{"_index":954,"title":{},"body":{"license.html":{}}}],["pipe(map(this._setuser.bind(thi",{"_index":590,"title":{},"body":{"injectables/LoginService.html":{}}}],["pipelin",{"_index":908,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":552,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["popper.j",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":986,"title":{},"body":{"license.html":{}}}],["positionclass",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":415,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["pre",{"_index":924,"title":{},"body":{"index.html":{}}}],["preloadallmodul",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategi",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["privat",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{}}}],["product",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":851,"title":{},"body":{"index.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AuthLayoutComponent.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{}}}],["protect",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["provid",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["public",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["publish",{"_index":973,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":993,"title":{},"body":{"license.html":{}}}],["put",{"_index":416,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["qualiti",{"_index":922,"title":{},"body":{"index.html":{}}}],["reactiv",{"_index":890,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["readonli",{"_index":14,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{}}}],["recaptcha",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["redi",{"_index":880,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":905,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regist",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"index.html":{}}}],["register(us",{"_index":641,"title":{},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["register.component.html",{"_index":621,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["register.component.scss",{"_index":620,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["registerformfactori",{"_index":610,"title":{"injectables/RegisterFormFactory.html":{}},"body":{"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["registerpagecompon",{"_index":112,"title":{"components/RegisterPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerservic",{"_index":626,"title":{"injectables/RegisterService.html":{}},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["repositori",{"_index":939,"title":{},"body":{"index.html":{}}}],["req",{"_index":327,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clon",{"_index":339,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["req.url.endswith('/assets/config.json",{"_index":679,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.urlwithparam",{"_index":689,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":688,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request.interceptor.servic",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["request.interceptor.service.t",{"_index":436,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:14",{"_index":439,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:21",{"_index":440,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["requestinspectorservic",{"_index":438,"title":{"injectables/RequestInspectorService.html":{}},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["requir",{"_index":556,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["require('../../assets/config.json",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["response.interceptor.servic",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.service.t",{"_index":445,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:16",{"_index":446,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:23",{"_index":447,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.model",{"_index":604,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["response.model.t",{"_index":6,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["rest",{"_index":864,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":968,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.model",{"_index":582,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserFactory.html":{}}}],["result.model.t",{"_index":564,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["return",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["right",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["root",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["root'},{'nam",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["rout",{"_index":244,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":524,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["routermodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["routermodule.forchild(authrout",{"_index":314,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(homerout",{"_index":407,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rule",{"_index":655,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["run",{"_index":944,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":895,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":331,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/internal/oper",{"_index":580,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["rxjs/oper",{"_index":450,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["s3",{"_index":915,"title":{},"body":{"index.html":{}}}],["scss",{"_index":919,"title":{},"body":{"index.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["sell",{"_index":868,"title":{},"body":{"index.html":{},"license.html":{}}}],["serial",{"_index":769,"title":{},"body":{"injectables/UserService.html":{}}}],["serverloglevel",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["service/factory/form/login.form.factori",{"_index":534,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/factory/form/register.form.factori",{"_index":637,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["service/login.servic",{"_index":535,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/register.servic",{"_index":638,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["sessionstorage.setitem('us",{"_index":771,"title":{},"body":{"injectables/UserService.html":{}}}],["sethead",{"_index":340,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["setlang",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["setlang(lang",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["setus",{"_index":764,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(us",{"_index":766,"title":{},"body":{"injectables/UserService.html":{}}}],["shall",{"_index":984,"title":{},"body":{"license.html":{}}}],["sitetitl",{"_index":293,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["softwar",{"_index":964,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["spoon",{"_index":871,"title":{},"body":{"index.html":{}}}],["spork",{"_index":869,"title":{},"body":{"index.html":{}}}],["src/.../app.module.t",{"_index":844,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.config.t",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.routing.module.t",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.module.t",{"_index":311,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/component/login/login.component.t",{"_index":515,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/login/login.component.ts:17",{"_index":527,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:28",{"_index":533,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:33",{"_index":532,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:42",{"_index":530,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:48",{"_index":529,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:53",{"_index":531,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/register/register.component.t",{"_index":619,"title":{},"body":{"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/register/register.component.ts:19",{"_index":627,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:29",{"_index":635,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:33",{"_index":636,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:44",{"_index":633,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:49",{"_index":630,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:55",{"_index":632,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:64",{"_index":634,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.t",{"_index":499,"title":{},"body":{"injectables/LoginFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:11",{"_index":505,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:8",{"_index":503,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.t",{"_index":611,"title":{},"body":{"injectables/RegisterFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:13",{"_index":613,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:8",{"_index":612,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/login.service.t",{"_index":566,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/auth/service/login.service.ts:17",{"_index":573,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:29",{"_index":574,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:36",{"_index":578,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:42",{"_index":576,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/register.service.t",{"_index":664,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{}}}],["src/app/auth/service/register.service.ts:14",{"_index":666,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:24",{"_index":667,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:31",{"_index":668,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/config/auth.config.t",{"_index":784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.t",{"_index":352,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/interface/service/log.service.abstract.t",{"_index":484,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:10",{"_index":494,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:13",{"_index":489,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:5",{"_index":487,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:6",{"_index":491,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:7",{"_index":492,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/model/payload/api",{"_index":5,"title":{},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/error",{"_index":390,"title":{},"body":{"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/jwt",{"_index":425,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/app/core/model/payload/login",{"_index":563,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["src/app/core/model/payload/us",{"_index":762,"title":{},"body":{"interfaces/UserPayload.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.t",{"_index":692,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:11",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:20",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:24",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:28",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:32",{"_index":713,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:5",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:7",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:9",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/service/auth/logout.service.t",{"_index":595,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{}}}],["src/app/core/service/auth/logout.service.ts:16",{"_index":599,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:28",{"_index":600,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:35",{"_index":601,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/error",{"_index":372,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.t",{"_index":719,"title":{},"body":{"injectables/UserFactory.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.ts:13",{"_index":725,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:16",{"_index":735,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:24",{"_index":729,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:28",{"_index":732,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:40",{"_index":737,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/guard/auth.guard.t",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:10",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:16",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/helper/d",{"_index":354,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["src/app/core/service/http/request",{"_index":674,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["src/app/core/service/interceptor/auth",{"_index":316,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["src/app/core/service/interceptor/json",{"_index":408,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["src/app/core/service/interceptor/log",{"_index":435,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.t",{"_index":680,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:16",{"_index":681,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:23",{"_index":682,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/log.service.t",{"_index":456,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/core/service/log.service.ts:13",{"_index":465,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:18",{"_index":468,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:23",{"_index":470,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:27",{"_index":472,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:7",{"_index":462,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/user.service.t",{"_index":763,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/service/user.service.ts:10",{"_index":765,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:14",{"_index":767,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/home/component/home/home.component.t",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/component/home/home.component.ts:11",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/home/home.component.ts:8",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.t",{"_index":402,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routing.module.t",{"_index":405,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/layout/component/auth/auth.component.t",{"_index":281,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/auth/auth.component.ts:10",{"_index":287,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:16",{"_index":288,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:23",{"_index":289,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/back",{"_index":343,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.t",{"_index":382,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.ts:11",{"_index":387,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/error/error.component.ts:8",{"_index":386,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/layout.module.t",{"_index":430,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/environments/environment.prod.t",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabil",{"_index":894,"title":{},"body":{"index.html":{}}}],["stack",{"_index":849,"title":{},"body":{"index.html":{}}}],["stage",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":683,"title":{"index.html":{},"license.html":{}},"body":{"interceptors/TimingInterceptor.html":{}}}],["statement",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":867,"title":{},"body":{"index.html":{}}}],["strength",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["strict",{"_index":917,"title":{},"body":{"index.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["stripe",{"_index":889,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["subject",{"_index":979,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":975,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":542,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["substanti",{"_index":985,"title":{},"body":{"license.html":{}}}],["success",{"_index":643,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["super",{"_index":476,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":1007,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1008,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":449,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((ev",{"_index":452,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["taptodismiss",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["templat",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["test",{"_index":930,"title":{},"body":{"index.html":{}}}],["this._authservic",{"_index":589,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._authservice.isauthent",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._authservice.logout",{"_index":536,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{}}}],["this._configservice.getset",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["this._configur",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["this._configuretransl",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["this._datehelper.getdatefromutcstring(payload.lastlogin",{"_index":760,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this._email",{"_index":715,"title":{},"body":{"classes/User.html":{}}}],["this._errorhandler.bind(thi",{"_index":544,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._formbuilder.control(nul",{"_index":510,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.group",{"_index":509,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formfactory.getform",{"_index":538,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._http.post(this._logouturi",{"_index":608,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._http.post(this._registeruri",{"_index":672,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._injector.get",{"_index":334,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["this._jsonencodeverbs.includes(req.method.touppercas",{"_index":420,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["this._lastlogin",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["this._logger.devlog",{"_index":687,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["this._logger.devlog(error",{"_index":380,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.devlog(errorresponse.error",{"_index":644,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._logger.devlog(ev",{"_index":455,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["this._logger.devlog(req",{"_index":444,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["this._logger.devlog(result",{"_index":547,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._logger.devlog(us",{"_index":592,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logger.error(error",{"_index":381,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.updateloggeruri",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this._loginservic",{"_index":539,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._loginuri",{"_index":587,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logoutservice.logout",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._logouturi",{"_index":606,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._nam",{"_index":717,"title":{},"body":{"classes/User.html":{}}}],["this._ngxlogger.debug(messag",{"_index":477,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.error(messag",{"_index":478,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.getconfigsnapshot",{"_index":481,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.log(messag",{"_index":479,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.updateconfig(updatedconfig",{"_index":483,"title":{},"body":{"injectables/LogService.html":{}}}],["this._password",{"_index":718,"title":{},"body":{"classes/User.html":{}}}],["this._registerservic",{"_index":640,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._registeruri",{"_index":670,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._requestinspector.isconfigfilerequest(req",{"_index":443,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["this._router.navigate(['auth",{"_index":549,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["this._router.navigate(['hom",{"_index":546,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._successhandler.bind(thi",{"_index":543,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._titleservice.settitle(sitetitl",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastr.error('login",{"_index":548,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.error(`registr",{"_index":645,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._toastr.success('log",{"_index":545,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.success('register",{"_index":642,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._translateservice.get('sitetitle').subscribe((sitetitl",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.setdefaultlang('en",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use(lang",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this._userfactory.getfromformdata(this.form.valu",{"_index":639,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._userfactory.getfrompayload(result",{"_index":591,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._userfactory.getpayload(us",{"_index":673,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._userservice.setuser(us",{"_index":593,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.form",{"_index":537,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this.form.value.password",{"_index":541,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.getus",{"_index":756,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.getuser(formdata.email",{"_index":751,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.heroimageuri",{"_index":291,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["this.setlang('en",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["throw",{"_index":367,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["time",{"_index":936,"title":{},"body":{"index.html":{}}}],["timinginterceptor",{"_index":134,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["titl",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservic",{"_index":526,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["todo",{"_index":555,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["token",{"_index":335,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interfaces/LoginResult.html":{}}}],["token.interceptor.servic",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["token.interceptor.service.t",{"_index":317,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:12",{"_index":321,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:16",{"_index":326,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["took",{"_index":690,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["tort",{"_index":1003,"title":{},"body":{"license.html":{}}}],["translat",{"_index":294,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["translate/cor",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["translatemodule.forroot",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["translatepip",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["true",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:disable:no",{"_index":332,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:enable:no",{"_index":333,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":918,"title":{},"body":{"index.html":{}}}],["ui",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["undefin",{"_index":845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":855,"title":{},"body":{"index.html":{}}}],["unit",{"_index":929,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["updatedconfig",{"_index":480,"title":{},"body":{"injectables/LogService.html":{}}}],["updatedconfig.serverloggingurl",{"_index":482,"title":{},"body":{"injectables/LogService.html":{}}}],["updateloggeruri",{"_index":459,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(apibaseuri",{"_index":493,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(logerroruri",{"_index":471,"title":{},"body":{"injectables/LogService.html":{}}}],["us",{"_index":875,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":583,"title":{"classes/User.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user(email",{"_index":761,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.email",{"_index":749,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.nam",{"_index":748,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.password",{"_index":750,"title":{},"body":{"injectables/UserFactory.html":{}}}],["userfactori",{"_index":570,"title":{"injectables/UserFactory.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["userpayload",{"_index":728,"title":{"interfaces/UserPayload.html":{}},"body":{"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["userservic",{"_index":572,"title":{"injectables/UserService.html":{}},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["utc",{"_index":370,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["utcdatestr",{"_index":359,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["valid",{"_index":507,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["validators.maxlength(255",{"_index":514,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["validators.requir",{"_index":512,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["valu",{"_index":414,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["variabl",{"_index":785,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/UserService.html":{}}}],["warranti",{"_index":987,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1000,"title":{},"body":{"license.html":{}}}],["winston",{"_index":899,"title":{},"body":{"index.html":{}}}],["without",{"_index":967,"title":{},"body":{"license.html":{}}}],["work",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["yarn",{"_index":839,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ye",{"_index":700,"title":{},"body":{"classes/User.html":{},"injectables/UserFactory.html":{}}}],["yyyi",{"_index":363,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["zone.j",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/api-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  readonly msg: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _configureTranslation\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_angulartics2GoogleTagManager: Angulartics2GoogleTagManager, _configService: ConfigService, _logger: LogServiceAbstract, _titleService: Title, _translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _angulartics2GoogleTagManager\n                                                  \n                                                        \n                                                                    Angulartics2GoogleTagManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configureTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configureTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ConfigService } from '@ngx-config/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private _angulartics2GoogleTagManager: Angulartics2GoogleTagManager,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _titleService: Title,\n    private _translateService: TranslateService\n  ) {\n    this._configureTranslation();\n  }\n\n  public ngOnInit(): void {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    this._translateService.get('siteTitle').subscribe((siteTitle: string) => {\n      this._titleService.setTitle(siteTitle);\n    });\n\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logger.updateLoggerUri(\n      `${config.core.apiBaseUri}${config.logging.logErrorUri}`\n    );\n  }\n\n  protected _configureTranslation(): void {\n    this._translateService.setDefaultLang('en');\n    this.setLang('en');\n  }\n\n  public setLang(lang: string): void {\n    this._translateService.use(lang);\n  }\n}\n\n    \n\n    \n        \n  en |\n  es\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  en |  es'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'RegisterPageComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthTokenInterceptor\n                            \n                            \n                                     JsonHeaderInterceptor\n                            \n                            \n                                     LogRequestInterceptor\n                            \n                            \n                                     LogResponseInterceptor\n                            \n                            \n                                     TimingInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { ConfigLoader, ConfigModule, ConfigService } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { Ng2UiAuthModule } from 'ng2-ui-auth';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthConfig } from './config/auth.config';\nimport { CoreModule } from './core/core.module';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\nimport { ErrorHandlerService } from './core/service/error-handler.service';\nimport { AuthTokenInterceptor } from './core/service/interceptor/auth-token.interceptor.service';\nimport { JsonHeaderInterceptor } from './core/service/interceptor/json-header.interceptor.service';\nimport { LogRequestInterceptor } from './core/service/interceptor/log-request.interceptor.service';\nimport { LogResponseInterceptor } from './core/service/interceptor/log-response.interceptor.service';\nimport { TimingInterceptor } from './core/service/interceptor/timing.interceptor.service';\nimport { LogService } from './core/service/log.service';\nimport { LayoutModule } from './layout/layout.module';\nimport { AuthRoutingModule } from './auth/auth.routing.module';\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  return new ConfigHttpLoader(http, './assets/config.json');\n}\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AppRoutingModule,\n    AuthModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient],\n    }),\n    CoreModule,\n    FormsModule,\n    HttpClientModule,\n    LayoutModule,\n    LoggerModule.forRoot({\n      level: environment.production ? NgxLoggerLevel.OFF : NgxLoggerLevel.TRACE,\n      serverLogLevel: NgxLoggerLevel.ERROR,\n    }),\n    MatPasswordStrengthModule.forRoot(),\n    Ng2UiAuthModule.forRoot(AuthConfig),\n    ReactiveFormsModule,\n    RouterModule,\n    ToastrModule.forRoot({\n      enableHtml: true,\n      disableTimeOut: true,\n      maxOpened: 2,\n      onActivateTick: true,\n      positionClass: 'toast-bottom-right',\n      tapToDismiss: true,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  declarations: [AppComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TimingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JsonHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogRequestInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n\n    {\n      provide: ErrorHandler,\n      useClass: ErrorHandlerService,\n    },\n\n    ConfigService,\n    TranslatePipe,\n\n    {\n      provide: LogServiceAbstract,\n      useClass: LogService,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { LoginPageComponent } from './auth/component/login/login.component';\nimport { RegisterPageComponent } from './auth/component/register/register.component';\nimport { AuthGuard } from './core/service/guard/auth.guard';\nimport { AuthLayoutComponent } from './layout/component/auth/auth.component';\nimport { ErrorPageComponent } from './layout/component/error/error.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: './auth/auth.module#AuthModule',\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/auth/login'\n  },\n  {\n    path: 'home',\n    canActivate: [AuthGuard],\n    loadChildren: './home/home.module#HomeModule',\n  },\n  {\n    path: '**',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: '**',\n        component: ErrorPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/service/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_authService: AuthService, _logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/guard/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        canActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/guard/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\n\nimport { LogoutService } from '../auth/logout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  public constructor(\n    private _authService: AuthService,\n    private _logoutService: LogoutService\n  ) {}\n\n  public canActivate(): boolean {\n    if (this._authService.isAuthenticated()) {\n      return true;\n    }\n\n    this._logoutService.logout();\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n            \n                styleUrls\n                auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                heroImageUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heroImageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heroImageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthLayoutComponent implements OnInit {\n  public heroImageUri: string;\n\n  constructor(private _configService: ConfigService) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this.heroImageUri = `${config.auth.heroImageUri}`;\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'siteTitle' | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'siteTitle\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'RegisterPageComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginPageComponent\n                            \n                            \n                                RegisterPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LayoutModule } from '../layout/layout.module';\nimport { AuthRoutingModule } from './auth.routing.module';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\n@NgModule({\n  imports: [\n    AuthRoutingModule,\n    CommonModule,\n    FormsModule,\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPasswordStrengthModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [LoginPageComponent, RegisterPageComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthLayoutComponent } from '../layout/component/auth/auth.component';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\nconst authRoutes: Routes = [\n  {\n    path: '',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginPageComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(authRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthTokenInterceptor.html":{"url":"interceptors/AuthTokenInterceptor.html","title":"interceptor - AuthTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/auth-token.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  public constructor(private _injector: Injector) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    const authService: AuthService = this._injector.get(\n      AuthService\n    );\n    const token: string = authService.getToken();\n    if (!token) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: { Authorization: token },\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackToLoginComponent.html":{"url":"components/BackToLoginComponent.html","title":"component - BackToLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BackToLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/back-to-login/back-to-login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-to-login\n            \n\n            \n                styleUrls\n                back-to-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./back-to-login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-back-to-login',\n  templateUrl: './back-to-login.component.html',\n  styleUrls: ['./back-to-login.component.scss'],\n})\nexport class BackToLoginComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      fast_rewind{{ 'nav.backToLogin' | translate }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              fast_rewind{{ \\'nav.backToLogin\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'RegisterPageComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackToLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateHelperService.html":{"url":"injectables/DateHelperService.html","title":"injectable - DateHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DateHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/helper/date-helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDateFromUtcString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDateFromUtcString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDateFromUtcString(utcDateString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/helper/date-helper.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utcDateString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateHelperService {\n  public getDateFromUtcString(utcDateString: string): Date {\n    const date: Date = moment(utcDateString, 'YYYY-MM-DDTHH:mm:ssZa').toDate();\n\n    if (isNaN(date.getTime())) {\n      throw new Error(`Provided date string is not in expected UTC format`);\n    }\n\n    return date;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/error-handler.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-handler.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(private _logger: LogServiceAbstract) {}\n\n  // tslint:disable-next-line:no-any\n  handleError(error: any): void {\n    this._logger.devLog(error);\n    this._logger.error(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/error/error.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ 'nav.errorPage' | translate }}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'nav.errorPage\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'RegisterPageComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorResponse.html":{"url":"interfaces/ErrorResponse.html","title":"interface - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/error-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errors\n                                \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorResponse {\n  readonly msg: string;\n  readonly errors: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/home/home.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  home works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  home works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'RegisterPageComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomeRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HomeComponent } from './component/home/home.component';\nimport { HomeRoutingModule } from './home.routing.module';\n\n@NgModule({\n  imports: [CommonModule, HomeRoutingModule],\n  declarations: [HomeComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './component/home/home.component';\n\nconst homeRoutes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(homeRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JsonHeaderInterceptor.html":{"url":"interceptors/JsonHeaderInterceptor.html","title":"interceptor - JsonHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JsonHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/json-header.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonEncodeVerbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jsonEncodeVerbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _jsonEncodeVerbs:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['POST', 'PUT']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JsonHeaderInterceptor implements HttpInterceptor {\n  private _jsonEncodeVerbs: string[] = ['POST', 'PUT'];\n\n  public constructor() {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    // tslint:disable-next-line:no-any\n    const headers: any = {\n      Accept: 'application/json',\n    };\n\n    if (this._jsonEncodeVerbs.includes(req.method.toUpperCase())) {\n      headers['Content-Type'] = 'application/json; charset=utf-8';\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: headers,\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/jwt-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  readonly email: string;\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthLayoutComponent\n                            \n                            \n                                BackToLoginComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule, MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AuthLayoutComponent } from './component/auth/auth.component';\nimport { BackToLoginComponent } from './component/back-to-login/back-to-login.component';\nimport { ErrorPageComponent } from './component/error/error.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatIconModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [AuthLayoutComponent, BackToLoginComponent, ErrorPageComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class LayoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogRequestInterceptor.html":{"url":"interceptors/LogRequestInterceptor.html","title":"interceptor - LogRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-request.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogRequestInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    this._logger.devLog(req);\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogResponseInterceptor.html":{"url":"interceptors/LogResponseInterceptor.html","title":"interceptor - LogResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-response.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        this._logger.devLog(event);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/log.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxLogger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxLogger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateLoggerUri(logErrorUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logErrorUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerConfig, NGXLogger } from 'ngx-logger';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable()\nexport class LogService extends LogServiceAbstract {\n  constructor(private _ngxLogger: NGXLogger) {\n    super();\n  }\n\n  // tslint:disable-next-line:no-any\n  debug(message: any): void {\n    this._ngxLogger.debug(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  error(message: any): void {\n    this._ngxLogger.error(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  log(message: any): void {\n    this._ngxLogger.log(message);\n  }\n\n  updateLoggerUri(logErrorUri: string): void {\n    const updatedConfig: LoggerConfig = this._ngxLogger.getConfigSnapshot();\n    updatedConfig.serverLoggingUrl = logErrorUri;\n\n    this._ngxLogger.updateConfig(updatedConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogServiceAbstract.html":{"url":"classes/LogServiceAbstract.html","title":"class - LogServiceAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogServiceAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interface/service/log.service.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                devLog\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        devLog(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLoggerUri(apiBaseUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiBaseUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../../environments/environment';\n\nexport abstract class LogServiceAbstract {\n  // tslint:disable:no-any\n  public abstract debug(message: any): void;\n  public abstract error(message: any): void;\n  public abstract log(message: any): void;\n  // tslint:enable:no-any\n\n  public abstract updateLoggerUri(apiBaseUri: string): void;\n\n  // tslint:disable-next-line:no-any\n  public devLog(data: any): void {\n    if (environment.production) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginFormFactory.html":{"url":"injectables/LoginFormFactory.html","title":"injectable - LoginFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/login.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/login.form.factory.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/login.form.factory.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      password: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToSignUp\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _formFactory: LoginFormFactory, _loginService: LoginService, _logger: LogServiceAbstract, _router: Router, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    LoginFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _loginService\n                                                  \n                                                        \n                                                                    LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(result: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { LoginFormFactory } from '../../service/factory/form/login.form.factory';\nimport { LoginService } from '../../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(\n    private _authService: AuthService,\n    private _formFactory: LoginFormFactory,\n    private _loginService: LoginService,\n    private _logger: LogServiceAbstract,\n    private _router: Router,\n    private _toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this._authService.logout();\n    this.form = this._formFactory.getForm();\n  }\n\n  public login(): void {\n    this._loginService\n      .login(this.form.value.email, this.form.value.password)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Logged in...');\n    this._router.navigate(['home']);\n  }\n\n  // tslint:disable-next-line:no-any\n  protected _errorHandler(result: any): void {\n    this._logger.devLog(result);\n    this._toastr.error('Login error');\n  }\n\n  public goToSignUp(): void {\n    this._router.navigate(['auth', 'register']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.login.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.login.loginButton' | translate }}\n  \n\n\n  {{ 'pages.login.registerLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.login.title\\' | translate }}                                        close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                          {{ \\'pages.login.loginButton\\' | translate }}    {{ \\'pages.login.registerLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'RegisterPageComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResult.html":{"url":"interfaces/LoginResult.html","title":"interface - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/login-result.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastLogin\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResult {\n  readonly token: string;\n  readonly lastLogin: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/login.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loginUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _setUser\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _logger: LogServiceAbstract, _userFactory: UserFactory, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _setUser(result: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loginUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _loginUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { LogServiceAbstract } from '../../core/interface/service/log.service.abstract';\nimport { LoginResult } from '../../core/model/payload/login-result.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\nimport { UserService } from '../../core/service/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private _loginUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _userFactory: UserFactory,\n    private _userService: UserService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._loginUri = `${config.core.apiBaseUri}${config.auth.loginUri}`;\n  }\n\n  public login(email: string, password: string): Observable {\n    return this._authService\n      .login({ email, password }, this._loginUri)\n      .pipe(map(this._setUser.bind(this)));\n  }\n\n  protected _setUser(result: LoginResult): Observable {\n    const user: User = this._userFactory.getFromPayload(result);\n    this._logger.devLog(user);\n    this._userService.setUser(user);\n\n    return of(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/auth/logout.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logoutUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _http: HttpClient, _router: Router, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/auth/logout.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _logoutUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _logoutUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/internal/operators';\nimport { ApiResponse } from '../../model/payload/api-response.model';\nimport { ErrorResponse } from '../../model/payload/error-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutService {\n  private _logoutUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _router: Router,\n    private _toastr: ToastrService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logoutUri = `${config.core.apiBaseUri}${config.auth.logoutUri}`;\n  }\n\n  public logout(): Observable {\n    this._authService.logout();\n    this._router.navigate(['auth', 'login']);\n\n    return this._http.post(this._logoutUri, null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterFormFactory.html":{"url":"injectables/RegisterFormFactory.html","title":"injectable - RegisterFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/register.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/register.form.factory.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/register.form.factory.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterFormFactory {\n  constructor(\n    private _formBuilder: FormBuilder,\n  ) {}\n\n  public getForm(): FormGroup {\n    const newPasswordControl: FormControl = this._formBuilder.control(null, [\n      Validators.required,\n      Validators.maxLength(255),\n    ]);\n\n    const confirmPasswordControl: FormControl = this._formBuilder.control(null, [\n      Validators.required,\n      CustomValidators.equalTo(newPasswordControl),\n    ]);\n\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      name: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n      password: newPasswordControl,\n      confirmPassword: confirmPasswordControl\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPageComponent.html":{"url":"components/RegisterPageComponent.html","title":"component - RegisterPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _getErrorList\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_formFactory: RegisterFormFactory, _logger: LogServiceAbstract, _registerService: RegisterService, _router: Router, _toastr: ToastrService, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    RegisterFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _registerService\n                                                  \n                                                        \n                                                                    RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _getErrorList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getErrorList(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { User } from '../../../core/model/user.model';\nimport { UserFactory } from '../../../core/service/factory/user.factory';\nimport { RegisterFormFactory } from '../../service/factory/form/register.form.factory';\nimport { RegisterService } from '../../service/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterPageComponent implements OnInit {\n  public form: FormGroup;\n  constructor(\n    private _formFactory: RegisterFormFactory,\n    private _logger: LogServiceAbstract,\n    private _registerService: RegisterService,\n    private _router: Router,\n    private _toastr: ToastrService,\n    private _userFactory: UserFactory\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this._formFactory.getForm();\n  }\n\n  public register(): void {\n    const user: User = this._userFactory.getFromFormData(this.form.value);\n\n    this._registerService\n      .register(user)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Registeration successful!');\n    this._router.navigate(['auth', 'login']);\n  }\n\n  protected _errorHandler(errorResponse: HttpErrorResponse): void {\n    this._logger.devLog(errorResponse.error);\n\n    this._toastr.error(`Registration error:${this._getErrorList(errorResponse)}`);\n  }\n\n  protected _getErrorList(errorResponse: HttpErrorResponse): string {\n    let errorList: string = '';\n    Object.values(errorResponse.error).forEach( (error: string) => {\n      errorList = `${errorList}${error}`;\n    });\n\n    return `${errorList}`;\n  }\n\n  public goToLogin(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.register.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Your name cannot be more than 255 characters - TODO lang\n        \n        \n          Name is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          {{ form.get('password').value?.length }} / 32\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n        \n        \n          Your password doesn't match the rules below yet - TODO lang\n          \n          \n        \n      \n      \n      \n\n      \n        \n        \n          close\n        \n        \n          Please confirm password - TODO lang\n        \n        \n          Passwords don't match - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.register.registerButton' | translate }}\n  \n\n\n  {{ 'pages.register.loginLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.register.title\\' | translate }}                                        close                          Your name cannot be more than 255 characters - TODO lang                          Name is required - TODO lang                                              close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          {{ form.get(\\'password\\').value?.length }} / 32                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                                  Your password doesn\\'t match the rules below yet - TODO lang                                                                              close                          Please confirm password - TODO lang                          Passwords don\\'t match - TODO lang                          {{ \\'pages.register.registerButton\\' | translate }}    {{ \\'pages.register.loginLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'RegisterPageComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/register.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _http: HttpClient, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _registerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _registerUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiResponse } from '../../core/model/payload/api-response.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  private _registerUri: string;\n\n  constructor(\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _userFactory: UserFactory,\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._registerUri = `${config.core.apiBaseUri}${config.auth.registerUri}`;\n  }\n\n  public register(user: User): Observable {\n    return this._http.post(this._registerUri, this._userFactory.getPayload(user));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInspectorService.html":{"url":"injectables/RequestInspectorService.html","title":"injectable - RequestInspectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestInspectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/http/request-inspector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isConfigFileRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isConfigFileRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isConfigFileRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/http/request-inspector.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class RequestInspectorService {\n  // tslint:disable-next-line:no-any\n  public isConfigFileRequest(req: HttpRequest): boolean {\n    return req.url.endsWith('/assets/config.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/timing.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    const started: number = Date.now();\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return event;\n        }\n\n        const elapsed: number = Date.now() - started;\n        this._logger.devLog(\n          `Request for ${req.urlWithParams} took ${elapsed} ms.`\n        );\n\n        return event;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _email\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _lastLogin\n                            \n                            \n                                    Private\n                                    Readonly\n                                _name\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    lastLogin\n                                \n                                \n                                    name\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, name: string, lastLogin?: Date, password?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastLogin\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _lastLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _lastLogin:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastLogin\n                    \n                \n\n                \n                    \n                        getlastLogin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { autoserialize } from 'cerialize';\n\nexport class User {\n  @autoserialize\n  private readonly _email: string;\n  @autoserialize\n  private readonly _lastLogin?: Date;\n  @autoserialize\n  private readonly _name: string;\n  @autoserialize\n  private readonly _password?: string;\n\n  constructor(email: string, name: string, lastLogin?: Date, password?: string) {\n    this._email = email;\n    this._lastLogin = lastLogin;\n    this._name = name;\n    this._password = password;\n  }\n\n  get email(): string {\n    return this._email;\n  }\n\n  get lastLogin(): Date {\n    return this._lastLogin;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get password(): string {\n    return this._password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFactory.html":{"url":"injectables/UserFactory.html","title":"injectable - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/factory/user.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromFormData\n                            \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getPayload\n                            \n                            \n                                    Public\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dateHelper: DateHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/factory/user.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dateHelper\n                                                  \n                                                        \n                                                                    DateHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromFormData(formData: UserPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formData\n                                                        \n                                                                    UserPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(payload: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPayload(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     UserPayload\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser(email: string, name: string, lastLogin: Date, password?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastLogin\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as jwtDecode from 'jwt-decode';\n\nimport { JwtPayload } from '../../model/payload/jwt-payload.model';\nimport { LoginResult } from '../../model/payload/login-result.model';\nimport { UserPayload } from '../../model/payload/user-payload.model';\nimport { User } from '../../model/user.model';\nimport { DateHelperService } from '../helper/date-helper.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFactory {\n  constructor(private _dateHelper: DateHelperService) {}\n\n  public getPayload(user: User): UserPayload {\n    return {\n      name: user.name,\n      email: user.email,\n      password: user.password\n    };\n  }\n\n  public getFromFormData(formData: UserPayload): User {\n    return this.getUser(formData.email, formData.name, null, formData.password);\n  }\n\n  public getFromPayload(payload: LoginResult): User {\n    const decodedToken: JwtPayload = jwtDecode(payload.token);\n\n    return this.getUser(\n      decodedToken.email,\n      decodedToken.name,\n      payload.lastLogin\n        ? this._dateHelper.getDateFromUtcString(payload.lastLogin)\n        : null\n    );\n  }\n\n  public getUser(\n    email: string,\n    name: string,\n    lastLogin: Date,\n    password?: string\n  ): User {\n    return new User(email, name, lastLogin, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/user-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPayload {\n  readonly name: string;\n  readonly email: string;\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Deserialize, Serialize } from 'cerialize';\n\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  public getUser(): User {\n    return Deserialize(sessionStorage.getItem('user'));\n  }\n\n  public setUser(user: User): void {\n    sessionStorage.setItem('user', JSON.stringify(Serialize(user)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                configFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/component/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginPageComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/component/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterPageComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/login.form.factory.ts\n            \n            \n                injectable\n            \n            \n                LoginFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/register.form.factory.ts\n            \n            \n                injectable\n            \n            \n                RegisterFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/login.service.ts\n            \n            \n                injectable\n            \n            \n                LoginService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/service/register.service.ts\n            \n            \n                injectable\n            \n            \n                RegisterService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                AuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interface/service/log.service.abstract.ts\n            \n            \n                class\n            \n            \n                LogServiceAbstract\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/api-response.model.ts\n            \n            \n                interface\n            \n            \n                ApiResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/error-response.model.ts\n            \n            \n                interface\n            \n            \n                ErrorResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/jwt-payload.model.ts\n            \n            \n                interface\n            \n            \n                JwtPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/login-result.model.ts\n            \n            \n                interface\n            \n            \n                LoginResult\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/user-payload.model.ts\n            \n            \n                interface\n            \n            \n                UserPayload\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/auth/logout.service.ts\n            \n            \n                injectable\n            \n            \n                LogoutService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/service/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/service/factory/user.factory.ts\n            \n            \n                injectable\n            \n            \n                UserFactory\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/helper/date-helper.service.ts\n            \n            \n                injectable\n            \n            \n                DateHelperService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/http/request-inspector.service.ts\n            \n            \n                injectable\n            \n            \n                RequestInspectorService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/component/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthLayoutComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/component/back-to-login/back-to-login.component.ts\n            \n            \n                component\n            \n            \n                BackToLoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-extensions/password-strength : ^3.2.0\n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngx-config/core : ^6.0.0\n        \n            @ngx-config/http-loader : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            add : ^2.0.6\n        \n            angular2-recaptcha : ^1.1.0\n        \n            angulartics2 : ^6.3.0\n        \n            bootstrap : ^4.1.3\n        \n            cerialize : ^0.1.18\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            jwt-decode : ^2.2.0\n        \n            lint-staged : ^7.3.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.22.2\n        \n            ng2-ui-auth : ^9.0.0\n        \n            ng2-validation : ^4.2.0\n        \n            ngx-logger : ^3.3.2\n        \n            ngx-toastr : ^9.1.0\n        \n            popper.js : ^1.14.4\n        \n            rxjs : ~6.2.0\n        \n            yarn : ^1.10.1\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 6 Full-Stack Demo\nIn this project I am demonstrating my current patterns and understanding in the\nMEAN stack composed of Angular 6, Angular Material, Bootstrap 4, FontAwesome5, express,\nand MongoDB.\nBackend\nIn this application, an express REST API backed by MongoDB exposes a store\nselling sporks (it's a spoon and fork combined!).\nPassport and JWT are used for authentication against MongoDB and call authentication.\nTODO is JWT blacklisting and logout since Redis is not in the stack\nFrontend\nAn Angular Material front-end consumes the API.  The customer registers, builds a cart, then checks out using Stripe.\nIn the Angular app, we use @ngrx/store, reactive forms, and ChangeDetectionStrategy.Push for performance, immutability and stability.\nngx-translate and ngx-config provide runtime configuration and translation.\nngx-logger feeds errors and events to an API endpoint where winston feeds them to the Elastic Beanstalk logs\nangulartics2 feeds data to Google Analytics.\nOutdatedBrowser is used to redirect users of old browsers.  Compodoc provides documentation.\nPipeline\nCode is deployed CI/CD using AWS CodePipline/CodeBuild.\nThe backend is deployed to an EC2 using Elastic Beanstalk, and the frontend\nis exposed in an S3 bucket.\nStrict linting of TypeScript, SCSS, JSON and HTML on the front-end\nand ES6 in the backend enforce quality measures at pre-commit and in the pipeline. no-any, max-file-line-count, and\nimmutability are enforced.\nUnit test coverage is around 98% lines.\nNOTE: There is no effort made at this time to implement a config.json builder,\nruntime config.json is committed to the repository\nNOTE: e2e tests are disabled because of issues getting ChromeDriver to run in CI\nInstructions for Use\n** Please note that this project uses yarn and that package-lock.json is in\nthe .gitignore **\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Pete Burkindine\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthConfig   (src/.../auth.config.ts)\n                        \n                        \n                            config   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/config/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthConfig:     ɵa\n\n                    \n                \n                    \n                        \n                            Type :     ɵa\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: config.core.apiBaseUri,\n  loginUrl: `${config.core.apiBaseUri}/auth/login`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : require('../../assets/config.json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
