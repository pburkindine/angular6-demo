var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.614,1,1.404]],["body/components/AppComponent.html",[0,2.426,1,1.97,2,0.444,3,0.444,4,1.946,5,1.946,6,1.946,7,0.326,8,1.569,9,1.295,10,3.495,11,1.946,12,3.495,13,2.818,14,3.495,15,2.914,16,2.914,17,2.914,18,2.914,19,0.382,20,2.35,21,1.495,22,4.845,23,0.876,24,4.363,25,3.881,26,3.881,27,3.881,28,1.137,29,1.946,30,3.13,31,3.495,32,3.495,33,3.881,34,1.249,35,2.914,36,0.511,37,0.051,38,0.918,39,0.665,40,0.511,41,2.914,42,1.946,43,0.918,44,2.962,45,1.946,46,1.946,47,1.97,48,1.321,49,1.321,50,2.914,51,0.886,52,0.444,53,1.321,54,0.988,55,0.988,56,1.321,57,1.569,58,0.382,59,0.273,60,1.553,61,1.946,62,1.946,63,1.946,64,2.914,65,1.946,66,1.946,67,1.946,68,1.946,69,2.914,70,2.35,71,1.321,72,2.35,73,2.914,74,2.914,75,3.881,76,1.946,77,1.946,78,0.027,79,0.027]],["title/modules/AppModule.html",[80,1.079,81,1.614]],["body/modules/AppModule.html",[1,2.327,2,0.315,3,0.315,7,0.231,30,1.115,37,0.051,43,0.586,51,1.184,52,0.315,53,1.516,54,0.702,55,1.922,56,0.938,57,1.115,58,0.634,59,0.313,71,0.938,78,0.02,79,0.02,80,0.871,81,2.941,82,0.807,83,2.265,84,1.907,85,2.625,86,1.115,87,1.115,88,1.115,89,1.115,90,1.115,91,1.922,92,2.21,93,2.21,94,2.21,95,2.21,96,1.298,97,2.21,98,1.8,99,1.115,100,0.807,101,0.938,102,3.786,103,3.54,104,2.233,105,0.539,106,1.8,107,2.233,108,2.233,109,1.115,110,2.233,111,2.233,112,1.382,113,2.809,114,1.382,115,2.233,116,1.115,117,1.382,118,1.115,119,2.265,120,2.233,121,1.382,122,2.233,123,2.233,124,1.115,125,1.382,126,0.938,127,1.382,128,0.938,129,0.938,130,0.938,131,1.382,132,1.382,133,0.807,134,1.382,135,1.115,136,1.382,137,1.382,138,0.938,139,1.382,140,0.765,141,0.702,142,1.382,143,0.807,144,1.382,145,1.382,146,1.382,147,1.382,148,2.233,149,1.382,150,1.382,151,1.382,152,1.303,153,1.382,154,1.303,155,1.115,156,1.8,157,1.382,158,1.382,159,1.115,160,1.382,161,1.382,162,1.382,163,1.382,164,1.382,165,2.233,166,0.938,167,2.233,168,1.382,169,1.382,170,1.382,171,1.382,172,1.382,173,1.382,174,1.382,175,1.382,176,1.382,177,1.382,178,3.454,179,1.382,180,1.382,181,1.115,182,1.382,183,1.382,184,1.382,185,0.938,186,3.786,187,3.54,188,0.474,189,0.415,190,0.474,191,1.115]],["title/modules/AppRoutingModule.html",[80,1.079,91,1.404]],["body/modules/AppRoutingModule.html",[2,0.786,3,0.786,7,0.577,37,0.051,51,1.078,52,0.786,58,0.85,59,0.607,78,0.039,79,0.039,80,1.344,91,2.195,106,3.487,188,1.18,189,1.035,190,1.18,191,2.777,192,3.444,193,4.323,194,4.323,195,2.935,196,2.777,197,2.01,198,3.444,199,3.444,200,3.444]],["title/interceptors/AuthTokenInterceptor.html",[92,1.614,201,0.726]],["body/interceptors/AuthTokenInterceptor.html",[2,0.57,3,0.57,7,0.418,9,1.11,19,0.491,21,1.573,23,1.05,28,0.975,34,1.05,36,0.918,37,0.051,38,0.918,39,0.797,40,0.918,43,1.058,47,1.268,51,0.995,52,0.57,58,0.491,59,0.351,78,0.032,79,0.032,92,2.039,105,0.975,128,1.696,129,1.696,130,1.696,188,0.856,189,1.311,190,0.856,197,2.351,201,0.656,202,4.028,203,2.498,204,2.045,205,2.498,206,4.362,207,2.498,208,3.493,209,1.268,210,2.04,211,2.215,212,2.498,213,1.552,214,2.045,215,1.268,216,1.774,217,0.797,218,4.028,219,1.11,220,2.498,221,1.268,222,1.268,223,2.498,224,4.028,225,2.498,226,1.458,227,2.015,228,2.015,229,2.015,230,2.015,231,2.015]],["title/interceptors/JsonHeaderInterceptor.html",[93,1.614,201,0.726]],["body/interceptors/JsonHeaderInterceptor.html",[2,0.554,3,0.554,7,0.407,9,1.079,19,0.477,20,2.762,21,1.557,23,1.029,28,1.548,34,1.192,36,0.638,37,0.051,38,0.638,39,0.905,40,0.638,43,0.899,47,2.014,48,1.649,49,1.649,51,0.905,52,0.554,58,0.477,59,0.341,60,1.763,78,0.031,79,0.031,93,1.999,105,0.947,188,1.174,189,1.365,190,1.174,197,1.999,201,0.638,204,2.014,209,1.233,210,2.019,211,2.187,213,1.522,214,2.014,215,1.233,216,1.739,217,0.781,219,1.079,221,1.233,222,1.233,227,1.958,228,1.958,229,1.958,231,1.958,232,4.308,233,2.429,234,4.308,235,3.425,236,2.429,237,3.425,238,3.425,239,3.425,240,2.429,241,3.425,242,2.429,243,2.429,244,2.429,245,2.429]],["title/interceptors/LogRequestInterceptor.html",[94,1.614,201,0.726]],["body/interceptors/LogRequestInterceptor.html",[2,0.593,3,0.593,7,0.435,9,1.154,19,0.511,21,1.596,23,1.079,28,1.4,34,1.079,36,0.943,37,0.051,38,0.943,39,0.819,40,0.943,43,1.08,51,1.062,52,0.593,58,0.511,59,0.365,60,1.595,78,0.033,79,0.033,94,2.095,96,1.52,105,1.014,140,1.52,141,1.319,143,1.516,189,1.236,201,0.682,204,2.088,209,1.319,210,1.971,211,2.252,213,1.595,214,2.088,215,1.319,216,1.822,217,0.819,219,1.154,221,1.319,222,1.319,226,2.095,246,3.317,247,2.598,248,1.764,249,2.792,250,2.598,251,2.437,252,2.598,253,1.764,254,1.764,255,2.598]],["title/interceptors/LogResponseInterceptor.html",[95,1.614,201,0.726]],["body/interceptors/LogResponseInterceptor.html",[2,0.552,3,0.552,7,0.405,9,1.076,19,0.476,21,1.555,23,1.027,28,1.333,34,1.027,36,0.898,37,0.051,38,0.898,39,0.78,40,0.898,43,1.13,51,1.074,52,0.552,58,0.476,59,0.34,60,1.518,78,0.031,79,0.031,95,1.995,96,1.474,105,0.945,140,1.474,141,1.229,143,1.413,188,0.83,189,1.293,190,0.83,201,0.636,204,2.011,209,1.229,210,1.912,211,2.184,213,1.518,214,2.011,215,1.735,216,1.735,217,0.78,219,1.076,221,1.229,222,1.229,226,1.413,246,3.194,248,1.644,249,2.689,251,2.32,253,1.644,254,1.644,256,2.421,257,2.421,258,2.421,259,2.756,260,1.952,261,1.952,262,1.952,263,1.952,264,1.413,265,1.952,266,2.421]],["title/injectables/LogService.html",[152,1.614,217,0.631]],["body/injectables/LogService.html",[2,0.595,3,0.595,7,0.436,19,0.512,23,1.081,28,1.404,34,1.335,36,1.167,37,0.051,38,1.167,39,1.014,40,1.167,43,1.082,44,3.272,47,2.594,51,0.94,52,0.595,55,1.323,58,0.512,59,0.366,60,1.158,78,0.033,79,0.033,133,1.521,140,1.233,141,1.323,152,2.1,217,0.94,267,2.102,268,2.901,269,2.443,270,2.901,271,2.607,272,4.443,273,2.607,274,3.598,275,2.901,276,2.607,277,3.323,278,2.901,279,2.607,280,2.901,281,2.607,282,2.607,283,2.607,284,2.607,285,2.607,286,2.607]],["title/classes/LogServiceAbstract.html",[59,0.388,140,0.948]],["body/classes/LogServiceAbstract.html",[2,0.574,3,0.574,7,0.421,19,0.494,21,1.794,23,1.055,34,1.315,36,1.149,37,0.05,38,1.149,39,0.998,40,1.149,43,1.209,44,3.388,47,2.573,51,0.574,58,0.494,59,0.492,78,0.032,79,0.032,140,1.203,188,1.203,189,1.055,190,1.203,268,2.83,269,2.382,270,2.83,275,2.83,277,3.26,278,2.83,280,2.83,287,2.028,288,5.134,289,3.509,290,2.514,291,3.509,292,2.514,293,2.028,294,2.514,295,2.514,296,1.707,297,2.514,298,2.514,299,2.514,300,2.514]],["title/injectables/RequestInspectorService.html",[96,0.948,217,0.631]],["body/injectables/RequestInspectorService.html",[2,0.75,3,0.75,7,0.55,19,0.646,21,1.584,23,1.261,34,0.987,36,0.863,37,0.05,38,0.863,39,0.75,40,0.863,43,1.102,51,0.957,52,0.75,58,0.646,59,0.461,78,0.038,79,0.038,96,1.438,105,1.282,188,1.126,189,0.987,190,1.126,210,2.165,213,1.46,217,1.055,301,3.384,302,2.649,303,4.196,304,4.196,305,3.285,306,4.196,307,3.285]],["title/interceptors/TimingInterceptor.html",[97,1.614,201,0.726]],["body/interceptors/TimingInterceptor.html",[2,0.529,3,0.529,7,0.389,9,1.031,19,0.456,21,1.53,23,0.997,28,1.294,34,0.997,36,0.871,37,0.051,38,0.871,39,0.757,40,0.871,43,1.109,51,1.06,52,0.529,58,0.456,59,0.326,60,1.473,78,0.03,79,0.03,96,1.447,97,1.935,105,0.905,140,1.447,141,1.178,143,1.355,188,0.795,189,1.269,190,0.795,197,1.935,201,0.609,204,1.964,209,1.178,210,1.876,211,2.143,213,1.473,214,1.964,215,1.683,216,1.683,217,0.757,219,1.031,221,1.178,222,1.178,226,1.355,248,1.576,249,2.627,251,2.251,253,1.576,254,1.576,259,2.674,260,1.871,261,1.871,262,1.871,263,1.871,264,1.355,265,1.871,308,2.321,309,2.321,310,2.321,311,2.251,312,3.316,313,3.316,314,3.316,315,2.321,316,2.321,317,2.321,318,2.321,319,2.321]],["title/coverage.html",[320,3.021]],["body/coverage.html",[0,1.818,1,1.581,7,0.522,8,2.512,37,0.049,39,0.711,59,0.437,78,0.037,79,0.037,96,1.068,101,2.753,138,2.115,140,1.068,152,1.818,154,2.367,156,2.512,166,2.115,185,2.115,217,0.925,267,2.512,287,2.512,296,2.753,301,2.512,302,2.512,320,2.512,321,2.115,322,3.115,323,3.115,324,4.31,325,3.115,326,5.075,327,3.27,328,3.242,329,2.115,330,4.055,331,3.115,332,2.512,333,2.512,334,3.115,335,3.115]],["title/dependencies.html",[82,1.937,336,1.873]],["body/dependencies.html",[37,0.051,52,0.513,53,2.58,54,1.645,55,2.404,56,1.526,78,0.03,79,0.03,82,1.312,84,1.526,109,1.812,116,1.812,118,1.812,119,3.354,124,1.812,126,1.526,128,2.58,129,1.526,130,1.526,133,1.312,135,1.812,196,1.812,219,0.999,337,2.247,338,5.175,339,2.247,340,3.24,341,2.247,342,2.247,343,2.247,344,2.247,345,2.247,346,2.247,347,2.247,348,2.247,349,2.247,350,2.247,351,1.812,352,2.247,353,2.247,354,2.247,355,2.247,356,2.247,357,3.24,358,2.247,359,2.247,360,2.247,361,2.247,362,2.247,363,2.247,364,2.247,365,2.247,366,2.247,367,2.247,368,2.247,369,2.247,370,2.247,371,2.247,372,2.247,373,2.247,374,2.247,375,2.247,376,2.247,377,1.526,378,2.247,379,2.247,380,2.247,381,2.247,382,2.247,383,2.247,384,2.247,385,2.247,386,1.812,387,2.247,388,2.247,389,2.247,390,2.247,391,2.247,392,2.247,393,2.247,394,3.24,395,2.247,396,2.247,397,2.247,398,2.247,399,2.247,400,2.247,401,2.247,402,2.247,403,2.247,404,2.247,405,2.247,406,2.247,407,2.247,408,2.247,409,2.247]],["title/miscellaneous/functions.html",[154,1.937,410,1.356]],["body/miscellaneous/functions.html",[19,0.75,36,1.209,37,0.047,38,1.209,40,1.209,78,0.042,79,0.042,101,2.589,154,2.226,155,3.075,159,3.075,166,3.125,185,3.125,410,2.226,411,4.603,412,4.603,413,4.603]],["title/index.html",[19,0.457,311,1.577,414,1.873]],["body/index.html",[13,1.888,37,0.039,54,1.189,55,1.974,70,2.691,72,1.888,78,0.03,79,0.03,85,1.948,100,1.367,126,1.59,133,1.367,264,1.367,269,1.59,293,1.888,321,1.59,329,1.59,336,1.888,351,1.888,377,2.266,386,1.888,415,4.793,416,3.337,417,2.341,418,3.337,419,2.341,420,3.337,421,2.341,422,2.341,423,2.341,424,2.341,425,2.341,426,2.341,427,3.337,428,3.337,429,3.888,430,3.337,431,4.238,432,2.341,433,2.341,434,3.888,435,2.341,436,2.341,437,1.888,438,2.341,439,2.341,440,2.341,441,2.341,442,2.341,443,2.341,444,2.341,445,3.865,446,3.337,447,2.341,448,2.341,449,3.888,450,3.337,451,2.341,452,2.341,453,2.341,454,2.341,455,2.341,456,2.341,457,2.341,458,2.341,459,2.341,460,2.341,461,2.341,462,2.341,463,2.341,464,2.341,465,2.341,466,3.337,467,2.341,468,2.341,469,2.341,470,2.341,471,2.341,472,2.341,473,2.341,474,2.341,475,3.337,476,2.341,477,2.341,478,2.341,479,2.341,480,3.888,481,2.341,482,2.341,483,2.341,484,2.341,485,2.341,486,2.341,487,2.341,488,2.341,489,2.341,490,2.341,491,2.341,492,2.341,493,2.341,494,2.341,495,2.341,496,2.341,497,2.341,498,2.341,499,2.341,500,2.341,501,2.341,502,2.341,503,2.341,504,2.341,505,2.341,506,2.341,507,2.341,508,2.341,509,2.341]],["title/license.html",[311,1.577,414,1.873,510,1.873]],["body/license.html",[7,0.478,37,0.035,78,0.035,79,0.035,85,1.666,100,1.666,230,2.301,264,1.666,321,1.937,377,1.937,437,2.301,445,3.086,510,2.301,511,2.854,512,4.317,513,2.854,514,2.854,515,2.854,516,2.854,517,3.827,518,2.854,519,2.854,520,2.854,521,2.854,522,3.827,523,2.854,524,4.613,525,5.207,526,2.854,527,3.827,528,4.317,529,2.854,530,4.317,531,3.827,532,2.854,533,2.854,534,2.854,535,2.854,536,2.854,537,2.854,538,2.854,539,2.854,540,2.854,541,2.854,542,2.854,543,2.854,544,2.854,545,3.827,546,3.827,547,2.854,548,2.854,549,3.827,550,2.854,551,2.854,552,2.854,553,2.854,554,2.854,555,2.854,556,2.854,557,2.854,558,2.854,559,2.854,560,2.854,561,2.854,562,2.854,563,2.854,564,2.854,565,2.854,566,2.854,567,2.854,568,2.854]],["title/modules.html",[80,1.461]],["body/modules.html",[37,0.044,54,2.078,78,0.044,79,0.044,80,1.597,81,2.389,91,2.078,569,4.092,570,4.092,571,4.801,572,4.092,573,4.092]],["title/overview.html",[574,3.021]],["body/overview.html",[0,1.735,1,2.594,37,0.049,58,0.584,59,0.417,71,2.018,78,0.036,79,0.036,80,1.534,81,3.227,82,1.735,83,2.397,84,2.018,85,1.735,86,2.397,87,2.397,88,2.397,89,2.397,90,2.397,91,2.237,92,2.572,93,2.572,94,2.572,95,2.572,96,1.51,97,2.572,98,3.171,99,2.397,100,1.735,181,3.171,217,0.678,324,2.397,574,2.397,575,3.932]],["title/routes.html",[195,2.543]],["body/routes.html",[37,0.045,78,0.045,79,0.045,195,2.916]],["title/miscellaneous/variables.html",[328,2.252,410,1.356]],["body/miscellaneous/variables.html",[19,0.646,37,0.051,39,1.112,48,3.307,49,3.307,78,0.038,79,0.038,138,3.139,178,2.649,296,3.495,327,2.649,328,2.23,329,3.139,332,2.649,333,2.649,410,1.917,576,4.196,577,3.285,578,3.285,579,3.285,580,3.285,581,3.285,582,3.285,583,3.285,584,4.196,585,3.285]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":324,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["0.1.18",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":575,"title":{},"body":{"overview.html":{}}}],["1.1.0",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["2.0.8",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":514,"title":{},"body":{"license.html":{}}}],["3.0.1",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":416,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["6.1.9",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":245,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["9.0.0",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["_angulartics2googletagmanag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["_configuretransl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["_consumeconfig",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["_injector",{"_index":208,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["_jsonencodeverb",{"_index":234,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["_logger",{"_index":251,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_ngxlogger",{"_index":274,"title":{},"body":{"injectables/LogService.html":{}}}],["_requestinspector",{"_index":249,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_titleservic",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["_translateservic",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["abov",{"_index":544,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":288,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["accept",{"_index":240,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["action",{"_index":563,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["against",{"_index":447,"title":{},"body":{"index.html":{}}}],["analyt",{"_index":469,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":538,"title":{},"body":{"license.html":{}}}],["angular",{"_index":415,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compil",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["angular/form",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["angulartics2",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":434,"title":{},"body":{"index.html":{}}}],["api/log",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.compon",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing.modul",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":432,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":241,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["appmodul",{"_index":81,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":91,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":567,"title":{},"body":{"license.html":{}}}],["assets/config.json",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lang",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["associ",{"_index":526,"title":{},"body":{"license.html":{}}}],["auth",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"dependencies.html":{}}}],["authconfig",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":446,"title":{},"body":{"index.html":{}}}],["author",{"_index":230,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["authreq",{"_index":227,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["authservic",{"_index":218,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authservice.gettoken",{"_index":225,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authtokeninterceptor",{"_index":92,"title":{"interceptors/AuthTokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"overview.html":{}}}],["avail",{"_index":573,"title":{},"body":{"modules.html":{}}}],["aw",{"_index":480,"title":{},"body":{"index.html":{}}}],["awesom",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":430,"title":{},"body":{"index.html":{}}}],["backend",{"_index":489,"title":{},"body":{"index.html":{}}}],["bar",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["baseurl",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodi",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":306,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["bootstrap",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":571,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":456,"title":{},"body":{"index.html":{}}}],["burkindin",{"_index":516,"title":{},"body":{"license.html":{}}}],["c",{"_index":513,"title":{},"body":{"license.html":{}}}],["call",{"_index":448,"title":{},"body":{"index.html":{}}}],["cart",{"_index":457,"title":{},"body":{"index.html":{}}}],["cerial",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["changedetectionstrategy.push",{"_index":460,"title":{},"body":{"index.html":{}}}],["charg",{"_index":521,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":244,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["check",{"_index":458,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":478,"title":{},"body":{"index.html":{}}}],["claim",{"_index":559,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/LogServiceAbstract.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":476,"title":{},"body":{"index.html":{}}}],["codedeploy",{"_index":484,"title":{},"body":{"index.html":{}}}],["codepipelin",{"_index":483,"title":{},"body":{"index.html":{}}}],["combin",{"_index":442,"title":{},"body":{"index.html":{}}}],["commit",{"_index":497,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":474,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["compos",{"_index":426,"title":{},"body":{"index.html":{}}}],["condit",{"_index":543,"title":{},"body":{"license.html":{}}}],["config",{"_index":329,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.core.apibaseuri",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.core.apibaseuri}/auth/login",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/auth.config",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["config/cor",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["config/f",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["config/http",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["configfactori",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configfactory(http",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["confighttpload",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["confighttploader(http",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["configload",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodul",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["configservic",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["configur",{"_index":465,"title":{},"body":{"index.html":{}}}],["connect",{"_index":568,"title":{},"body":{"license.html":{}}}],["consol",{"_index":299,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["console.log(data",{"_index":300,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["const",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_angulartics2googletagmanag",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_injector",{"_index":205,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["constructor(_logg",{"_index":248,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_ngxlogg",{"_index":271,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(priv",{"_index":220,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["consum",{"_index":450,"title":{},"body":{"index.html":{}}}],["contract",{"_index":564,"title":{},"body":{"license.html":{}}}],["copi",{"_index":524,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":512,"title":{},"body":{"license.html":{}}}],["core",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":320,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createtranslateload",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":422,"title":{},"body":{"index.html":{}}}],["custom",{"_index":454,"title":{},"body":{"index.html":{}}}],["d3",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["damag",{"_index":560,"title":{},"body":{"license.html":{}}}],["data",{"_index":293,"title":{},"body":{"classes/LogServiceAbstract.html":{},"index.html":{}}}],["date.now",{"_index":313,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["deal",{"_index":527,"title":{},"body":{"license.html":{}}}],["debug",{"_index":268,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["debug(messag",{"_index":275,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["declar",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["demo",{"_index":419,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":421,"title":{},"body":{"index.html":{}}}],["dep",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":477,"title":{},"body":{"index.html":{}}}],["devlog",{"_index":289,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["devlog(data",{"_index":291,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["direct",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["disabletimeout",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":536,"title":{},"body":{"license.html":{}}}],["document",{"_index":321,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["dynam",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":492,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":314,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["element",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["enablehtml",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":431,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":467,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":494,"title":{},"body":{"index.html":{}}}],["engin",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["environ",{"_index":296,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":298,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["environments/environ",{"_index":297,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["error",{"_index":269,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"index.html":{}}}],["error(messag",{"_index":278,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["es6",{"_index":488,"title":{},"body":{"index.html":{}}}],["event",{"_index":264,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{},"license.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["expos",{"_index":435,"title":{},"body":{"index.html":{}}}],["express",{"_index":377,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["extend",{"_index":282,"title":{},"body":{"injectables/LogService.html":{}}}],["fals",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feed",{"_index":466,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"license.html":{}}}],["fit",{"_index":553,"title":{},"body":{"license.html":{}}}],["follow",{"_index":542,"title":{},"body":{"license.html":{}}}],["font",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["fork",{"_index":441,"title":{},"body":{"index.html":{}}}],["formsmodul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["free",{"_index":520,"title":{},"body":{"license.html":{}}}],["front",{"_index":449,"title":{},"body":{"index.html":{}}}],["full",{"_index":417,"title":{},"body":{"index.html":{}}}],["function",{"_index":154,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":540,"title":{},"body":{"license.html":{}}}],["get",{"_index":414,"title":{"index.html":{},"license.html":{}},"body":{}}],["git2s3",{"_index":503,"title":{},"body":{"index.html":{}}}],["gitignor",{"_index":509,"title":{},"body":{"index.html":{}}}],["googl",{"_index":468,"title":{},"body":{"index.html":{}}}],["grant",{"_index":519,"title":{},"body":{"license.html":{}}}],["graph",{"_index":572,"title":{},"body":{"modules.html":{}}}],["hammerj",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":239,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.servic",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["header.interceptor.service.t",{"_index":233,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:12",{"_index":235,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:17",{"_index":236,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["headers['cont",{"_index":243,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["helper",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["herebi",{"_index":518,"title":{},"body":{"license.html":{}}}],["holder",{"_index":557,"title":{},"body":{"license.html":{}}}],["hot",{"_index":481,"title":{},"body":{"index.html":{}}}],["html",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["http",{"_index":413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http/request",{"_index":253,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["http_interceptor",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":215,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httphandler",{"_index":211,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":216,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":210,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprespons",{"_index":259,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["https://github.com/aw",{"_index":501,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["immut",{"_index":462,"title":{},"body":{"index.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["impli",{"_index":551,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["includ",{"_index":530,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["inject",{"_index":217,"title":{"injectables/LogService.html":{},"injectables/RequestInspectorService.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":206,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["inspector.servic",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["inspector.service.t",{"_index":302,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["inspector.service.ts:7",{"_index":305,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["instanceof",{"_index":265,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["instruct",{"_index":504,"title":{},"body":{"index.html":{}}}],["integr",{"_index":498,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":204,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":209,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interceptor",{"_index":201,"title":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interface/service/log.service.abstract",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["isconfigfilerequest",{"_index":303,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest(req",{"_index":304,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["it'",{"_index":439,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["jsonheaderinterceptor",{"_index":93,"title":{"interceptors/JsonHeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["jwt",{"_index":444,"title":{},"body":{"index.html":{}}}],["kind",{"_index":550,"title":{},"body":{"license.html":{}}}],["lambda",{"_index":482,"title":{},"body":{"index.html":{}}}],["legend",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["level",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["liabil",{"_index":561,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":558,"title":{},"body":{"license.html":{}}}],["licens",{"_index":510,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":531,"title":{},"body":{"license.html":{}}}],["line:no",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["lint",{"_index":386,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["load",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["loader",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lock.json",{"_index":508,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":270,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["log(messag",{"_index":280,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["logger",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["loggermodul",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["loginurl",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logrequestinterceptor",{"_index":94,"title":{"interceptors/LogRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"overview.html":{}}}],["logresponseinterceptor",{"_index":95,"title":{"interceptors/LogResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogResponseInterceptor.html":{},"overview.html":{}}}],["logservic",{"_index":152,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logserviceabstract",{"_index":140,"title":{"classes/LogServiceAbstract.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["map",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":428,"title":{},"body":{"index.html":{}}}],["maxopen",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":425,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":552,"title":{},"body":{"license.html":{}}}],["merg",{"_index":534,"title":{},"body":{"license.html":{}}}],["messag",{"_index":277,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["miscellan",{"_index":410,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":511,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":533,"title":{},"body":{"license.html":{}}}],["modul",{"_index":80,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":429,"title":{},"body":{"index.html":{}}}],["ms",{"_index":319,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["multi",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["next",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(authreq",{"_index":231,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["next.handle(req",{"_index":226,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req).pip",{"_index":262,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["ng",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["ng2",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"dependencies.html":{}}}],["ng2uiauthmodul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["ng2uiauthmodule.forroot(authconfig",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["ngfactori",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["ngmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["ngrx/effect",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":351,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nguniversal/express",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["nguniversal/modul",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":272,"title":{},"body":{"injectables/LogService.html":{}}}],["ngxloggerlevel",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.debug",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":556,"title":{},"body":{"license.html":{}}}],["note",{"_index":506,"title":{},"body":{"index.html":{}}}],["notic",{"_index":545,"title":{},"body":{"license.html":{}}}],["number",{"_index":312,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["observ",{"_index":214,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["obtain",{"_index":523,"title":{},"body":{"license.html":{}}}],["old",{"_index":473,"title":{},"body":{"index.html":{}}}],["onactivatetick",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":566,"title":{},"body":{"license.html":{}}}],["out",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outdatedbrows",{"_index":470,"title":{},"body":{"index.html":{}}}],["overview",{"_index":574,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":336,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pages.home.welcomemessag",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["paramet",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":554,"title":{},"body":{"license.html":{}}}],["passport",{"_index":443,"title":{},"body":{"index.html":{}}}],["password",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["pattern",{"_index":423,"title":{},"body":{"index.html":{}}}],["perform",{"_index":461,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":517,"title":{},"body":{"license.html":{}}}],["permit",{"_index":539,"title":{},"body":{"license.html":{}}}],["person",{"_index":522,"title":{},"body":{"license.html":{}}}],["pete",{"_index":515,"title":{},"body":{"license.html":{}}}],["pipelin",{"_index":475,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":505,"title":{},"body":{"index.html":{}}}],["popper.j",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":548,"title":{},"body":{"license.html":{}}}],["post",{"_index":237,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["pre",{"_index":496,"title":{},"body":{"index.html":{}}}],["preload",{"_index":451,"title":{},"body":{"index.html":{}}}],["preloadallmodul",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategi",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["privat",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["product",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":420,"title":{},"body":{"index.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["protect",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["provid",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["publish",{"_index":535,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":555,"title":{},"body":{"license.html":{}}}],["put",{"_index":238,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["qualiti",{"_index":495,"title":{},"body":{"index.html":{}}}],["quickstart",{"_index":500,"title":{},"body":{"index.html":{}}}],["quickstart/quickstart",{"_index":502,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["recaptcha",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["redirect",{"_index":471,"title":{},"body":{"index.html":{}}}],["regist",{"_index":455,"title":{},"body":{"index.html":{}}}],["req",{"_index":213,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clon",{"_index":228,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["req.url.endswith('/assets/config.json",{"_index":307,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.urlwithparam",{"_index":317,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":316,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request.interceptor.servic",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["request.interceptor.service.t",{"_index":247,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:14",{"_index":250,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:21",{"_index":252,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["requestinspectorservic",{"_index":96,"title":{"injectables/RequestInspectorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require('../../assets/config.json",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response.interceptor.servic",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.service.t",{"_index":256,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:16",{"_index":257,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:23",{"_index":258,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["rest",{"_index":433,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":529,"title":{},"body":{"license.html":{}}}],["result",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["right",{"_index":532,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["rout",{"_index":195,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routermodul",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["runtim",{"_index":464,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":219,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":261,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["scss",{"_index":487,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":437,"title":{},"body":{"index.html":{},"license.html":{}}}],["seo",{"_index":452,"title":{},"body":{"index.html":{}}}],["server",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["serverloggingurl",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["serverloglevel",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["service/http/request",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor/auth",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor/json",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor/log",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["service/interceptor/timing.interceptor.servic",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["service/log.servic",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["sethead",{"_index":229,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["shall",{"_index":546,"title":{},"body":{"license.html":{}}}],["sitetitl",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["softwar",{"_index":525,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["spoon",{"_index":440,"title":{},"body":{"index.html":{}}}],["spork",{"_index":438,"title":{},"body":{"index.html":{}}}],["src/.../app.module.t",{"_index":411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.config.t",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.routing.module.t",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/config/auth.config.t",{"_index":327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interface/service/log.service.abstract.t",{"_index":287,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{}}}],["src/app/interface/service/log.service.abstract.ts:4",{"_index":290,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/interface/service/log.service.abstract.ts:5",{"_index":294,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/interface/service/log.service.abstract.ts:6",{"_index":295,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/interface/service/log.service.abstract.ts:9",{"_index":292,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/service/http/request",{"_index":301,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["src/app/service/interceptor/auth",{"_index":202,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["src/app/service/interceptor/json",{"_index":232,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["src/app/service/interceptor/log",{"_index":246,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{}}}],["src/app/service/interceptor/timing.interceptor.service.t",{"_index":308,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/service/interceptor/timing.interceptor.service.ts:17",{"_index":309,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/service/interceptor/timing.interceptor.service.ts:24",{"_index":310,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/service/log.service.t",{"_index":267,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/service/log.service.ts:14",{"_index":276,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/service/log.service.ts:18",{"_index":279,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/service/log.service.ts:22",{"_index":281,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/service/log.service.ts:7",{"_index":273,"title":{},"body":{"injectables/LogService.html":{}}}],["src/environments/environment.prod.t",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":333,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabil",{"_index":463,"title":{},"body":{"index.html":{}}}],["stack",{"_index":418,"title":{},"body":{"index.html":{}}}],["stage",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":311,"title":{"index.html":{},"license.html":{}},"body":{"interceptors/TimingInterceptor.html":{}}}],["statement",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["stem",{"_index":499,"title":{},"body":{"index.html":{}}}],["store",{"_index":436,"title":{},"body":{"index.html":{}}}],["strength",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["strict",{"_index":485,"title":{},"body":{"index.html":{}}}],["string",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["stripe",{"_index":459,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":541,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":537,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":547,"title":{},"body":{"license.html":{}}}],["super",{"_index":283,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":569,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":570,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":260,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((ev",{"_index":263,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["taptodismiss",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":493,"title":{},"body":{"index.html":{}}}],["this._configuretransl",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this._consumeconfig",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this._injector.get(authservic",{"_index":223,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["this._jsonencodeverbs.includes(req.method.touppercas",{"_index":242,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["this._logger.devlog",{"_index":315,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["this._logger.devlog(ev",{"_index":266,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["this._logger.devlog(req",{"_index":255,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["this._ngxlogger.debug(messag",{"_index":284,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.error(messag",{"_index":285,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.log(messag",{"_index":286,"title":{},"body":{"injectables/LogService.html":{}}}],["this._requestinspector.isconfigfilerequest(req",{"_index":254,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["this._titleservice.settitle(sitetitl",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.get('sitetitle').subscrib",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.setdefaultlang('en",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use('en",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["this.titl",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["timinginterceptor",{"_index":97,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["titl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["toastr",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["token",{"_index":224,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.servic",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["token.interceptor.service.t",{"_index":203,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:12",{"_index":207,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:16",{"_index":212,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["took",{"_index":318,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["tort",{"_index":565,"title":{},"body":{"license.html":{}}}],["translat",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["translate/cor",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["translatepip",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:disable:no",{"_index":221,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:enable:no",{"_index":222,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["tt",{"_index":453,"title":{},"body":{"index.html":{}}}],["two",{"_index":479,"title":{},"body":{"index.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":486,"title":{},"body":{"index.html":{}}}],["ui",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"dependencies.html":{}}}],["undefin",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":424,"title":{},"body":{"index.html":{}}}],["unit",{"_index":491,"title":{},"body":{"index.html":{}}}],["univers",{"_index":427,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["us",{"_index":445,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":472,"title":{},"body":{"index.html":{}}}],["valid",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["valu",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["variabl",{"_index":328,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["warranti",{"_index":549,"title":{},"body":{"license.html":{}}}],["well",{"_index":490,"title":{},"body":{"index.html":{}}}],["whether",{"_index":562,"title":{},"body":{"license.html":{}}}],["without",{"_index":528,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":507,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configureTranslation\n                            \n                            \n                                    Protected\n                                _consumeConfig\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_angulartics2GoogleTagManager: Angulartics2GoogleTagManager, _titleService: Title, _translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _angulartics2GoogleTagManager\n                                                  \n                                                        \n                                                                    Angulartics2GoogleTagManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configureTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configureTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _consumeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _consumeConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading...'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public title: string = 'Loading...';\n\n  constructor(\n    private _angulartics2GoogleTagManager: Angulartics2GoogleTagManager,\n    private _titleService: Title,\n    private _translateService: TranslateService\n  ) {\n    this._configureTranslation();\n  }\n\n  public ngOnInit(): void {\n    this._consumeConfig();\n  }\n\n  protected _consumeConfig(): void {\n    this._translateService.get('siteTitle').subscribe(\n      (siteTitle: string) => {\n        this._titleService.setTitle(siteTitle);\n        this.title = siteTitle;\n      }\n    );\n  }\n\n  protected _configureTranslation(): void {\n    this._translateService.setDefaultLang('en');\n    this._translateService.use('en');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.home.welcomeMessage' | translate }} {{ title }}!\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.home.welcomeMessage\\' | translate }} {{ title }}!  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nRequestInspectorService\n\nRequestInspectorService\n\nAppModule -->\n\nRequestInspectorService->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthTokenInterceptor\n                            \n                            \n                                     JsonHeaderInterceptor\n                            \n                            \n                                     LogRequestInterceptor\n                            \n                            \n                                     LogResponseInterceptor\n                            \n                            \n                                     RequestInspectorService\n                            \n                            \n                                     TimingInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ConfigLoader, ConfigModule, ConfigService } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { Ng2UiAuthModule } from 'ng2-ui-auth';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AuthConfig } from './config/auth.config';\nimport { LogServiceAbstract } from './interface/service/log.service.abstract';\nimport { RequestInspectorService } from './service/http/request-inspector.service';\nimport { AuthTokenInterceptor } from './service/interceptor/auth-token.interceptor.service';\nimport { JsonHeaderInterceptor } from './service/interceptor/json-header.interceptor.service';\nimport { LogRequestInterceptor } from './service/interceptor/log-request.interceptor.service';\nimport { LogResponseInterceptor } from './service/interceptor/log-response.interceptor.service';\nimport { TimingInterceptor } from './service/interceptor/timing.interceptor.service';\nimport { LogService } from './service/log.service';\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  return new ConfigHttpLoader(http, './assets/config.json');\n}\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient],\n    }),\n    FormsModule,\n    HttpClientModule,\n    LoggerModule.forRoot({\n      serverLoggingUrl: '/api/logs',\n      level: NgxLoggerLevel.DEBUG,\n      serverLogLevel: NgxLoggerLevel.ERROR\n    }),\n    Ng2UiAuthModule.forRoot(AuthConfig),\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      enableHtml: true,\n      disableTimeOut: true,\n      maxOpened: 2,\n      onActivateTick: true,\n      tapToDismiss: true,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [\n    RequestInspectorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TimingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JsonHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogRequestInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n\n    ConfigService,\n    TranslatePipe,\n\n    {\n      provide: LogServiceAbstract,\n      useClass: LogService,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst appRoutes: Routes = [\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthTokenInterceptor.html":{"url":"interceptors/AuthTokenInterceptor.html","title":"interceptor - AuthTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/auth-token.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/auth-token.interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/auth-token.interceptor.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  public constructor(private _injector: Injector) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    const authService: AuthService = this._injector.get(AuthService);\n    const token: string = authService.getToken();\n    if (!token) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: { Authorization: token },\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JsonHeaderInterceptor.html":{"url":"interceptors/JsonHeaderInterceptor.html","title":"interceptor - JsonHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JsonHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/json-header.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonEncodeVerbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/json-header.interceptor.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jsonEncodeVerbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _jsonEncodeVerbs:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['POST', 'PUT']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JsonHeaderInterceptor implements HttpInterceptor {\n  private _jsonEncodeVerbs: string[] = ['POST', 'PUT'];\n\n  public constructor() {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    // tslint:disable-next-line:no-any\n    const headers: any = {\n      Accept: 'application/json',\n    };\n\n    if (this._jsonEncodeVerbs.includes(req.method.toUpperCase())) {\n      headers['Content-Type'] = 'application/json; charset=utf-8';\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: headers,\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogRequestInterceptor.html":{"url":"interceptors/LogRequestInterceptor.html","title":"interceptor - LogRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/log-request.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/log-request.interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/log-request.interceptor.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogRequestInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService,\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    this._logger.devLog(req);\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogResponseInterceptor.html":{"url":"interceptors/LogResponseInterceptor.html","title":"interceptor - LogResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/log-response.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/log-response.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/log-response.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService,\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        this._logger.devLog(event);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/log.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxLogger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxLogger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/log.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/log.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/log.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable()\nexport class LogService extends LogServiceAbstract {\n  constructor(\n    private _ngxLogger: NGXLogger,\n  ) {\n    super();\n  }\n\n  debug(message: string): void {\n    this._ngxLogger.debug(message);\n  }\n\n  error(message: string): void {\n    this._ngxLogger.error(message);\n  }\n\n  log(message: string): void {\n    this._ngxLogger.log(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogServiceAbstract.html":{"url":"classes/LogServiceAbstract.html","title":"class - LogServiceAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogServiceAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/service/log.service.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                devLog\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interface/service/log.service.abstract.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        devLog(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interface/service/log.service.abstract.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interface/service/log.service.abstract.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interface/service/log.service.abstract.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../environments/environment';\n\nexport abstract class LogServiceAbstract {\n  public abstract debug(message: string): void;\n  public abstract error(message: string): void;\n  public abstract log(message: string): void;\n\n  // tslint:disable-next-line:no-any\n  public devLog(data: any): void {\n    if (environment.production) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInspectorService.html":{"url":"injectables/RequestInspectorService.html","title":"injectable - RequestInspectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestInspectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http/request-inspector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isConfigFileRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isConfigFileRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isConfigFileRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/http/request-inspector.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RequestInspectorService {\n  // tslint:disable-next-line:no-any\n  public isConfigFileRequest(req: HttpRequest): boolean {\n    return req.url.endsWith('/assets/config.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/interceptor/timing.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/interceptor/timing.interceptor.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/interceptor/timing.interceptor.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService,\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    const started: number = Date.now();\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        const elapsed: number = Date.now() - started;\n        this._logger.devLog(\n          `Request for ${req.urlWithParams} took ${elapsed} ms.`\n        );\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                configFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                AuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interface/service/log.service.abstract.ts\n            \n            \n                class\n            \n            \n                LogServiceAbstract\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/http/request-inspector.service.ts\n            \n            \n                injectable\n            \n            \n                RequestInspectorService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/service/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/platform-server : ^6.1.9\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @nguniversal/express-engine : ^6.1.0\n        \n            @nguniversal/module-map-ngfactory-loader : ^6.1.0\n        \n            @ngx-config/core : ^6.0.0\n        \n            @ngx-config/fs-loader : ^5.0.0\n        \n            @ngx-config/http-loader : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            angular2-recaptcha : ^1.1.0\n        \n            angulartics2 : ^6.3.0\n        \n            body-parser : ^1.18.3\n        \n            bootstrap : ^4.1.3\n        \n            cerialize : ^0.1.18\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            express : ^4.16.3\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            lint-staged : ^7.3.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.22.2\n        \n            ng-password-helper : ^5.0.3\n        \n            ng2-password-strength-bar : ^1.2.1\n        \n            ng2-ui-auth : ^9.0.0\n        \n            ng2-validation : ^4.2.0\n        \n            ngx-logger : ^3.3.2\n        \n            ngx-toastr : ^9.1.0\n        \n            popper.js : ^1.14.4\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 6 Full-Stack Demo\nIn this project I am demonstrating my current patterns and understanding in the\nMEAN stack composed of Angular 6, Angular Universal, Angular Material, express,\nand MongoDB.\nBack-end\nIn this application, an express REST API backed by MongoDB exposes a store\nselling sporks (it's a spoon and fork combined!). Passport and JWT are used for\nauthentication against MongoDB and call authentication.\nFront-end\nAn Angular Material front-end consumes the API, preloading with Angular Universal for SEO and TTS. The customer registers, builds a cart, then checks out using Stripe.\nIn the Angular app, we use @ngrx/store and ChangeDetectionStrategy.Push for performance, immutability and stability.\nngx-translate and ngx-config provide runtime configuration and translation.\nngx-logger feeds errors and events to an API endpoint to be consumed, and angulartics2 feeds data to Google Analytics.\nOutdatedBrowser is used to redirect users of old browsers.  Compodoc provides documentation.\nPipeline\nCode is deployed CI/CD as two AWS \"hot\" lambdas using AWS CodePipeline and CodeDeploy.\nStrict linting of TypeScript, SCSS and HTML in the front-end\nand ES6 in the backend, as well as unit and e2e testing, enforce quality at pre-commit and in the pipeline.\nThis integration stems from the AWS QuickStart:\nhttps://github.com/aws-quickstart/quickstart-git2s3\nInstructions for Use\n** Please note that this project uses yarn and that package-lock.json is in\nthe .gitignore **\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Pete Burkindine\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nRequestInspectorService\n\nRequestInspectorService\n\nAppModule -->\n\nRequestInspectorService->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthConfig   (src/.../auth.config.ts)\n                        \n                        \n                            config   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/config/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthConfig:     ɵa\n\n                    \n                \n                    \n                        \n                            Type :     ɵa\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: config.core.apiBaseUri,\n  loginUrl: `${config.core.apiBaseUri}/auth/login`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : require('../../assets/config.json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
