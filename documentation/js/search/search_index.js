var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiResponse.html",[0,1.317,1,2.438]],["body/interfaces/ApiResponse.html",[0,2.282,1,4.224,2,0.284,3,0.284,4,0.197,5,4.695,6,4.198,7,0.409,8,1.898,9,6.23,10,1.546,11,0.581,12,0.017,13,0.255,14,2.575,15,0.015,16,0.015]],["title/components/AppComponent.html",[17,0.796,18,1.381]],["body/components/AppComponent.html",[2,0.145,3,0.145,4,0.101,7,0.209,10,0.616,11,0.296,12,0.018,13,0.13,15,0.009,16,0.009,17,1.241,18,2.013,19,1.246,20,1.246,21,1.246,22,2.397,23,1.206,24,2.218,25,1.246,26,3.167,27,3.167,28,1.595,29,1.856,30,4.144,31,1.856,32,4.144,33,0.724,34,2.906,35,3.306,36,5.487,37,0.999,38,2.457,39,0.76,40,2.782,41,4.727,42,2.983,43,3.093,44,2.474,45,2.112,46,4.952,47,5.487,48,4.266,49,4.727,50,0.823,51,2.782,52,0.486,53,0.631,54,0.486,55,4.144,56,2.782,57,0.743,58,1.874,59,2.782,60,2.782,61,0.536,62,0.296,63,2.143,64,1.802,65,1.45,66,1.474,67,1.676,68,2.397,69,1.676,70,0.176,71,2.053,72,2.782,73,1.676,74,2.782,75,2.782,76,0.676,77,0.645,78,0.676,79,0.848,80,1.39,81,1.676,82,2.782,83,2.782,84,2.782,85,2.782,86,0.929,87,1.762,88,1.856,89,1.856,90,2.457,91,1.246,92,1.246,93,0.929,94,0.848,95,1.856,96,1.021,97,1.183,98,1.856,99,0.974,100,0.974,101,1.246,102,0.974,103,1.246,104,1.021,105,1.246,106,1.246,107,0.929,108,0.974,109,1.246,110,0.929,111,1.246,112,1.021,113,0.774,114,1.246,115,1.021,116,1.246,117,1.246]],["title/modules/AppModule.html",[118,1.096,119,2.643]],["body/modules/AppModule.html",[2,0.102,3,0.102,4,0.071,12,0.018,13,0.212,15,0.007,16,0.007,18,2.359,41,1.685,43,1.777,45,1.214,57,0.473,61,0.649,62,0.208,63,2.428,64,1.267,65,1.863,66,1.036,67,1.178,68,1.685,69,1.178,70,0.2,76,0.475,77,0.454,78,0.475,86,0.653,94,0.596,113,0.544,118,0.918,119,5.061,120,1.036,121,2.386,122,2.098,123,3.406,124,1.685,125,1.685,126,1.685,127,1.685,128,1.685,129,3.448,130,3.448,131,2.82,132,3,133,3.737,134,3.737,135,3.737,136,3.737,137,3.737,138,1.899,139,1.178,140,1.103,141,1.507,142,1.685,143,1.373,144,1.373,145,1.507,146,1.507,147,5.322,148,3.496,149,3.152,150,0.832,151,2.716,152,1.67,153,2.716,154,2.716,155,1.103,156,3.152,157,3.152,158,1.956,159,1.899,160,0.876,161,1.956,162,1.267,163,3.959,164,1.956,165,1.956,166,1.685,167,3.411,168,3.152,169,1.507,170,3.152,171,3.152,172,1.685,173,1.956,174,1.507,175,1.956,176,0.977,177,1.103,178,1.956,179,1.956,180,1.373,181,1.956,182,1.178,183,1.373,184,1.685,185,1.956,186,1.956,187,1.956,188,1.507,189,1.956,190,1.373,191,2.213,192,1.956,193,1.956,194,1.956,195,1.956,196,1.956,197,1.956,198,3.152,199,1.956,200,1.956,201,1.956,202,2.213,203,1.956,204,1.507,205,3.152,206,1.956,207,1.507,208,2.042,209,1.685,210,2.042,211,1.956,212,1.956,213,1.685,214,1.956,215,1.956,216,1.685,217,1.956,218,1.956,219,3.152,220,1.507,221,3.152,222,1.956,223,1.956,224,1.685,225,1.956,226,1.956,227,1.956,228,1.956,229,1.956,230,1.956,231,1.956,232,1.956,233,1.956,234,4.631,235,1.956,236,1.956,237,1.685,238,1.956,239,1.956,240,1.956,241,1.956,242,1.685,243,1.956,244,1.956,245,1.507,246,5.597,247,4.979,248,1.036]],["title/modules/AppRoutingModule.html",[118,1.096,129,2.438]],["body/modules/AppRoutingModule.html",[2,0.212,3,0.212,4,0.147,12,0.018,13,0.253,15,0.012,16,0.012,17,1.146,61,0.629,62,0.433,70,0.343,76,0.987,77,0.943,78,0.987,79,1.239,93,1.81,94,1.239,99,1.896,107,1.358,110,1.358,118,1.184,129,3.51,152,2.871,159,3.265,160,1.821,248,2.155,249,4.067,250,5.419,251,3.265,252,4.067,253,4.067,254,4.174,255,4.067,256,3.504,257,4.067,258,4.067,259,5.213,260,5.419,261,4.067,262,3.504,263,3.133,264,4.067,265,4.067,266,3.504,267,3.504,268,4.067,269,3.133,270,4.067,271,4.067]],["title/interfaces/AppState.html",[0,1.317,272,2.643]],["body/interfaces/AppState.html",[0,2.26,2,0.28,3,0.28,4,0.194,7,0.402,8,1.88,11,0.571,12,0.017,13,0.251,14,2.534,15,0.015,16,0.015,61,0.467,113,2.122,272,4.534,273,4.62,274,5.362]],["title/guards/AuthGuard.html",[254,2.899,275,2.899]],["body/guards/AuthGuard.html",[2,0.223,3,0.223,4,0.155,7,0.321,11,0.456,12,0.018,13,0.2,15,0.013,16,0.013,23,1.245,28,1.646,33,0.978,37,1.388,39,1.027,50,0.84,52,0.747,53,0.545,54,0.747,57,0.937,61,0.578,62,0.456,70,0.271,71,1.96,94,1.303,160,1.915,176,2.136,177,2.41,234,3.294,254,4.315,267,6.082,275,3.294,276,4.276,277,3.003,278,4.293,279,5.381,280,4.293,281,4.276,282,3.933,283,4.276,284,4.825,285,0.755,286,4.276,287,1.729,288,4.276,289,3.684,290,3.684]],["title/components/AuthLayoutComponent.html",[17,0.796,93,1.257]],["body/components/AuthLayoutComponent.html",[2,0.162,3,0.162,4,0.113,7,0.234,8,1.311,10,1.171,11,0.48,12,0.018,13,0.146,15,0.01,16,0.01,17,1.299,18,1.143,19,1.395,20,1.395,21,1.395,23,1.311,24,2.367,25,1.395,26,3.235,27,3.235,29,2.016,31,2.016,33,0.786,34,2.498,35,3.489,37,1.067,38,2.593,39,0.571,42,2.712,43,3.264,50,0.869,52,0.544,53,0.674,54,0.544,57,0.675,58,1.764,61,0.392,62,0.332,65,1.09,66,1.65,70,0.197,73,1.877,76,0.756,77,0.722,78,0.756,79,0.949,80,1.556,81,1.877,86,1.04,87,1.914,88,2.016,89,2.016,90,2.593,91,1.395,92,1.395,93,1.934,94,1.611,95,2.016,96,1.143,97,1.324,98,2.016,99,1.09,100,1.09,101,1.395,102,1.09,103,1.395,104,1.143,105,1.395,106,1.395,107,1.04,108,1.09,109,1.395,110,1.04,111,1.395,112,1.143,113,0.867,114,1.395,115,1.143,116,1.395,117,1.395,291,2.683,292,3.878,293,4.502,294,4.502,295,5.791,296,2.399,297,4.502,298,3.115,299,3.115,300,1.556,301,3.115,302,3.115,303,3.878,304,2.538]],["title/modules/AuthModule.html",[118,1.096,130,2.438]],["body/modules/AuthModule.html",[2,0.182,3,0.182,4,0.126,12,0.018,13,0.228,15,0.011,16,0.011,61,0.646,62,0.372,65,1.222,67,2.103,70,0.309,76,0.848,77,0.81,78,0.848,86,1.166,107,2.22,110,2.22,118,1.421,120,1.849,121,3.392,122,1.849,123,1.849,130,4.803,131,3.522,132,3.747,138,2.941,139,2.103,140,1.968,142,4.206,143,2.451,144,2.451,145,2.689,146,2.689,152,2.586,153,4.206,154,4.206,155,1.968,159,2.941,160,1.563,169,3.76,190,2.451,207,2.689,248,1.849,305,3.007,306,3.007,307,3.007,308,4.306,309,3.491,310,3.428,311,2.261,312,4.882,313,3.76,314,4.882,315,4.206,316,4.882,317,4.882,318,2.451,319,3.491,320,3.007,321,3.007]],["title/modules/AuthRoutingModule.html",[118,1.096,308,2.438]],["body/modules/AuthRoutingModule.html",[2,0.236,3,0.236,4,0.164,12,0.018,13,0.271,15,0.013,16,0.013,17,1.357,61,0.625,62,0.482,70,0.368,76,1.098,77,1.049,78,1.098,79,1.378,93,1.94,107,1.94,110,1.94,118,1.317,152,3.077,159,3.5,160,2.026,248,2.396,251,3.5,256,3.897,259,4.943,269,3.484,308,3.763,320,3.897,321,3.897,322,4.523,323,4.523,324,2.725,325,3.176,326,4.523]],["title/interceptors/AuthTokenInterceptor.html",[133,2.643,327,1.778]],["body/interceptors/AuthTokenInterceptor.html",[2,0.196,3,0.196,4,0.136,7,0.283,10,0.835,11,0.548,12,0.018,13,0.176,15,0.012,16,0.012,23,1.097,33,0.899,37,1.331,39,0.691,50,0.772,52,0.899,53,0.656,54,0.899,57,0.879,61,0.549,62,0.401,70,0.239,76,0.915,77,1.461,78,0.915,79,1.786,94,1.148,133,3.613,150,1.602,176,1.882,177,2.124,278,4.08,285,0.693,300,1.882,327,1.78,328,5.861,329,3.768,330,3.797,331,3.768,332,6.298,333,3.768,334,5.146,335,2.441,336,3.973,337,4.08,338,3.768,339,3.1,340,2.769,341,2.441,342,3.334,343,1.687,344,2.27,345,2.27,346,3.768,347,5.049,348,3.768,349,2.645,350,3.246,351,3.246,352,3.246,353,3.246,354,3.246]],["title/components/BackToLoginComponent.html",[17,0.796,96,1.381]],["body/components/BackToLoginComponent.html",[2,0.183,3,0.183,4,0.127,7,0.262,12,0.017,13,0.164,15,0.011,16,0.011,17,1.358,18,1.284,19,1.567,20,1.567,21,1.567,23,1.424,24,2.525,25,1.567,26,3.3,27,3.3,29,2.19,31,2.19,33,0.854,37,1.138,38,2.733,39,1.034,50,0.734,53,0.623,57,0.525,58,1.49,61,0.305,62,0.373,70,0.222,86,1.169,87,2.08,88,2.19,89,2.19,90,2.733,91,1.567,92,1.567,93,1.169,94,1.066,95,2.19,96,2.239,97,2.904,98,2.19,99,1.225,100,1.225,101,1.567,102,1.225,103,1.567,104,1.284,105,1.567,106,1.567,107,1.169,108,1.225,109,1.567,110,1.169,111,1.567,112,1.284,113,0.974,114,1.567,115,1.284,116,1.567,117,1.567,304,2.757,324,2.947,355,4.857,356,4.343,357,3.015,358,4.213,359,4.213,360,3.5,361,3.5,362,4.891,363,4.891]],["title/modules/CoreModule.html",[118,1.096,131,1.994]],["body/modules/CoreModule.html",[2,0.238,3,0.238,4,0.165,12,0.017,13,0.317,15,0.013,16,0.013,61,0.592,62,0.485,70,0.369,76,1.106,77,1.056,78,1.106,86,1.521,104,2.796,118,1.699,120,2.413,121,3.879,122,2.413,123,2.413,131,3.867,138,3.515,139,2.744,140,2.567,152,3.091,248,2.413,310,4.097,311,2.95,364,3.924,365,3.924,366,3.924,367,4.554,368,4.554,369,3.508,370,4.554]],["title/injectables/DateHelperService.html",[285,0.507,371,2.643]],["body/injectables/DateHelperService.html",[2,0.237,3,0.237,4,0.164,7,0.34,10,1.502,11,0.484,12,0.017,13,0.212,15,0.013,16,0.013,28,1.747,33,1.017,37,1.297,50,0.681,52,0.793,53,0.578,54,0.793,57,0.873,61,0.508,62,0.484,70,0.287,79,1.383,210,2.94,285,0.866,287,1.835,371,4.088,372,5.015,373,3.91,374,5.822,375,5.822,376,4.539,377,4.539,378,5.526,379,5.015,380,4.539,381,4.539,382,4.539,383,4.539,384,4.539,385,4.539,386,4.539,387,4.539,388,4.539,389,4.539]],["title/injectables/ErrorHandlerService.html",[191,2.643,285,0.507]],["body/injectables/ErrorHandlerService.html",[2,0.237,3,0.237,4,0.164,7,0.34,11,0.62,12,0.018,13,0.212,15,0.013,16,0.013,23,1.321,28,1.747,33,1.017,39,0.833,44,2.909,45,2.61,50,0.873,52,1.017,53,0.742,54,1.017,57,0.681,58,1.774,61,0.508,62,0.484,70,0.287,76,1.102,77,1.053,78,1.102,100,1.588,151,5.015,191,4.088,285,0.866,287,1.835,300,2.268,390,5.537,391,3.91,392,5.822,393,2.94,394,4.539,395,5.822,396,4.539,397,2.94,398,4.539,399,4.539]],["title/components/ErrorPageComponent.html",[17,0.796,99,1.317]],["body/components/ErrorPageComponent.html",[2,0.19,3,0.19,4,0.132,7,0.273,12,0.017,13,0.17,15,0.011,16,0.011,17,1.378,18,1.337,19,1.632,20,1.632,21,1.632,23,1.464,24,2.579,25,1.632,26,3.321,27,3.321,29,2.252,31,2.252,33,0.878,38,2.781,39,1.056,50,0.754,53,0.641,57,0.547,58,1.532,61,0.318,62,0.388,70,0.231,86,1.217,87,2.139,88,2.252,89,2.252,90,2.781,91,1.632,92,1.632,93,1.217,94,1.11,95,2.252,96,1.337,97,1.549,98,2.252,99,2.173,100,2.016,101,1.632,102,1.275,103,1.632,104,1.337,105,1.632,106,1.632,107,1.217,108,1.275,109,1.632,110,1.217,111,1.632,112,1.337,113,1.014,114,1.632,115,1.337,116,1.632,117,1.632,304,2.835,400,3.139,401,5.029,402,5.029,403,5.029,404,3.644,405,3.644,406,5.029]],["title/interfaces/ErrorResponse.html",[0,1.317,407,2.267]],["body/interfaces/ErrorResponse.html",[0,2.227,2,0.273,3,0.273,4,0.19,6,4.033,7,0.393,8,1.853,9,6.146,10,1.647,11,0.678,12,0.017,13,0.245,14,3.007,15,0.014,16,0.014,100,2.497,407,3.835,408,4.51]],["title/components/HomeComponent.html",[17,0.796,102,1.317]],["body/components/HomeComponent.html",[2,0.196,3,0.196,4,0.136,7,0.282,12,0.017,13,0.176,15,0.012,16,0.012,17,1.393,18,1.378,19,1.682,20,1.682,21,1.682,23,1.495,24,2.621,25,1.682,26,3.337,27,3.337,29,2.3,31,2.3,33,0.897,38,2.817,39,1.073,50,0.77,53,0.654,57,0.564,58,1.565,61,0.328,62,0.4,70,0.238,86,1.255,87,2.184,88,2.3,89,2.3,90,2.817,91,1.682,92,1.682,93,1.255,94,1.145,95,2.3,96,1.378,97,1.598,98,2.3,99,1.315,100,1.315,101,1.682,102,2.202,103,1.682,104,1.378,105,1.682,106,1.682,107,1.255,108,1.315,109,1.682,110,1.255,111,1.682,112,1.378,113,1.045,114,1.682,115,1.378,116,1.682,117,1.682,266,4.425,409,3.237,410,5.136,411,5.136,412,3.757,413,3.757]],["title/modules/HomeModule.html",[118,1.096,414,2.643]],["body/modules/HomeModule.html",[2,0.202,3,0.202,4,0.14,12,0.018,13,0.245,15,0.012,16,0.012,61,0.638,62,0.413,70,0.332,76,0.941,77,0.899,78,0.941,86,1.295,102,2.402,112,2.519,118,1.528,120,2.054,121,3.584,122,2.054,123,2.054,131,3.637,132,3.87,138,3.162,139,2.336,140,2.186,152,2.78,190,2.723,207,2.987,248,2.054,310,3.685,311,2.512,313,4.042,318,2.723,414,5.286,415,3.34,416,3.34,417,3.34,418,4.447,419,3.877,420,3.34,421,3.877,422,2.987,423,3.877,424,3.877]],["title/modules/HomeRoutingModule.html",[118,1.096,418,2.438]],["body/modules/HomeRoutingModule.html",[2,0.243,3,0.243,4,0.169,12,0.018,13,0.277,15,0.013,16,0.013,17,1.253,61,0.616,62,0.497,70,0.375,76,1.133,77,1.082,78,1.133,79,1.422,102,2.074,108,2.074,118,1.358,152,3.139,159,3.57,160,2.09,248,2.472,251,3.57,259,4.564,262,4.02,263,3.594,269,3.594,418,3.838,420,4.02,425,4.666,426,4.666,427,4.666,428,4.666]],["title/interceptors/JsonHeaderInterceptor.html",[134,2.643,327,1.778]],["body/interceptors/JsonHeaderInterceptor.html",[2,0.193,3,0.193,4,0.134,7,0.277,8,1.478,10,1.285,11,0.618,12,0.018,13,0.173,15,0.012,16,0.012,23,1.075,33,0.887,37,1.321,39,1.064,50,0.87,52,0.645,53,0.471,54,0.645,57,0.762,61,0.506,62,0.394,70,0.234,71,2.03,76,1.233,77,1.519,78,1.233,79,1.547,134,3.565,150,1.571,285,0.684,327,1.746,330,3.758,335,2.393,336,3.945,337,4.046,339,3.059,340,2.741,341,2.393,342,3.289,343,1.654,344,2.226,345,2.226,350,3.183,351,3.183,352,3.183,354,3.183,429,6.247,430,3.694,431,6.247,432,5.077,433,3.694,434,2.594,435,2.594,436,5.077,437,5.077,438,5.077,439,3.694,440,5.077,441,3.694,442,3.694,443,3.694,444,3.183]],["title/interfaces/JwtPayload.html",[0,1.317,445,2.643]],["body/interfaces/JwtPayload.html",[0,2.227,2,0.273,3,0.273,4,0.19,7,0.393,8,1.853,10,1.647,11,0.678,12,0.017,13,0.245,14,3.007,15,0.014,16,0.014,53,0.909,445,4.469,446,4.51,447,4.033,448,3.564]],["title/components/LangSwitchComponent.html",[17,0.796,104,1.381]],["body/components/LangSwitchComponent.html",[2,0.166,3,0.166,4,0.115,7,0.239,10,1.185,11,0.487,12,0.017,13,0.149,15,0.01,16,0.01,17,1.31,18,1.167,19,1.425,20,1.425,21,1.425,23,1.331,24,2.396,25,1.425,26,3.247,27,3.247,29,2.047,31,2.047,33,0.798,37,1.301,38,2.619,39,0.584,48,3.938,49,5.039,50,0.803,52,0.798,53,0.745,54,0.798,57,0.686,58,1.782,61,0.399,62,0.339,65,1.114,67,1.917,70,0.202,86,1.063,87,1.944,88,2.047,89,2.047,90,2.619,91,1.425,92,1.425,93,1.063,94,0.969,95,2.047,96,1.167,97,1.353,98,2.047,99,1.114,100,1.114,101,1.425,102,1.114,103,1.425,104,2.146,105,3.044,106,1.425,107,1.063,108,1.114,109,1.425,110,1.063,111,1.425,112,1.167,113,0.885,114,1.425,115,1.167,116,1.425,117,1.425,300,1.59,369,4.505,449,5.039,450,2.741,451,4.571,452,4.571,453,4.571,454,4.571,455,3.182,456,3.182,457,3.182,458,4.571,459,3.182,460,3.182,461,4.571,462,4.571]],["title/modules/LayoutModule.html",[118,1.096,132,2.121]],["body/modules/LayoutModule.html",[2,0.186,3,0.186,4,0.129,12,0.018,13,0.232,15,0.011,16,0.011,61,0.644,62,0.38,65,1.248,67,2.148,70,0.314,76,0.866,77,0.827,78,0.866,86,1.191,93,2.235,96,2.455,99,2.342,108,2.342,115,2.455,118,1.442,120,1.889,121,3.43,122,1.889,123,1.889,131,3.545,132,4.237,138,2.985,139,2.148,140,2.01,152,2.625,159,2.985,160,1.597,169,3.816,190,2.504,248,1.889,310,3.479,311,2.31,313,3.816,315,4.268,318,2.504,356,2.747,463,3.072,464,3.072,465,3.566,466,3.566,467,3.566,468,3.566,469,3.566,470,3.566,471,3.566,472,3.566]],["title/interceptors/LogRequestInterceptor.html",[135,2.643,327,1.778]],["body/interceptors/LogRequestInterceptor.html",[2,0.205,3,0.205,4,0.142,7,0.294,11,0.564,12,0.018,13,0.183,15,0.012,16,0.012,23,1.142,33,0.924,37,1.349,39,0.97,44,2.643,45,2.466,50,0.793,52,0.924,53,0.674,54,0.924,57,0.898,61,0.583,62,0.418,70,0.248,71,1.851,77,1.388,135,3.714,150,1.668,285,0.713,327,1.854,330,3.876,335,2.541,336,3.859,337,4.149,339,3.187,340,2.827,341,2.541,342,3.426,343,1.757,344,2.364,345,2.364,349,3.714,393,2.541,397,2.541,473,5.155,474,3.923,475,4.609,476,3.859,477,3.923,478,3.923,479,3.022,480,3.022,481,3.022,482,3.923]],["title/interceptors/LogResponseInterceptor.html",[136,2.643,327,1.778]],["body/interceptors/LogResponseInterceptor.html",[2,0.192,3,0.192,4,0.133,7,0.276,11,0.54,12,0.018,13,0.172,15,0.011,16,0.011,23,1.073,33,0.885,37,1.32,39,0.93,44,2.532,45,2.402,50,0.76,52,0.885,53,0.646,54,0.885,57,0.936,61,0.589,62,0.393,70,0.233,71,1.773,76,0.894,77,1.447,78,0.894,136,3.558,150,1.567,285,0.683,327,1.741,330,3.752,335,2.386,336,3.759,337,4.042,339,3.053,340,2.737,341,3.283,342,3.283,343,1.65,344,2.22,345,2.22,349,2.587,393,2.386,397,2.386,473,4.991,475,4.462,476,3.759,479,2.838,480,2.838,481,2.838,483,3.684,484,3.684,485,3.684,486,4.366,487,2.838,488,3.174,489,3.174,490,3.174,491,2.587,492,3.174,493,3.684]],["title/injectables/LogService.html",[202,2.643,285,0.507]],["body/injectables/LogService.html",[2,0.187,3,0.187,4,0.13,7,0.27,10,1.267,11,0.691,12,0.018,13,0.168,15,0.011,16,0.011,33,0.87,39,0.659,45,1.918,50,0.973,52,1.133,53,0.826,54,1.133,57,0.926,58,2.137,61,0.498,62,0.383,65,1.258,70,0.228,76,1.388,77,1.326,78,1.388,79,1.095,100,1.744,180,2.524,202,3.498,285,0.77,300,1.796,397,2.328,494,3.097,495,4.292,496,3.838,497,4.292,498,3.594,499,6.174,500,3.594,501,4.982,502,4.292,503,3.594,504,4.926,505,4.292,506,3.594,507,4.292,508,3.594,509,4.982,510,3.594,511,4.982,512,4.982,513,3.594,514,3.594,515,3.594,516,3.594,517,3.594,518,3.594,519,3.594,520,3.594,521,3.594]],["title/classes/LogServiceAbstract.html",[45,1.449,70,0.238]],["body/classes/LogServiceAbstract.html",[2,0.188,3,0.188,4,0.13,7,0.27,10,1.269,11,0.692,12,0.017,13,0.168,15,0.011,16,0.011,33,0.872,37,1.512,45,1.922,50,0.974,52,1.134,53,0.827,54,1.134,57,1.007,58,2.198,61,0.314,70,0.316,76,1.212,77,1.158,78,1.212,100,1.747,183,2.531,184,3.105,224,3.105,344,2.172,345,2.172,495,4.3,496,3.845,497,4.3,502,4.3,504,4.933,505,4.3,507,4.3,522,3.105,523,7.403,524,4.992,525,3.604,526,4.992,527,3.604,528,3.105,529,3.604,530,3.604,531,4.992,532,3.604,533,3.604,534,3.604,535,3.604]],["title/injectables/LoginFormFactory.html",[285,0.507,536,2.643]],["body/injectables/LoginFormFactory.html",[2,0.23,3,0.23,4,0.16,7,0.331,11,0.471,12,0.018,13,0.206,15,0.013,16,0.013,28,1.701,33,0.999,37,1.281,39,0.81,50,0.858,52,0.772,53,0.563,54,0.772,57,0.858,61,0.553,62,0.471,70,0.28,155,2.491,176,2.207,285,0.855,287,1.787,300,2.207,448,2.207,536,4.018,537,3.806,538,5.782,539,3.806,540,5.782,541,4.418,542,4.929,543,4.418,544,4.456,545,3.706,546,3.806,547,3.806,548,4.929,549,3.806,550,4.929,551,2.341,552,3.806]],["title/components/LoginPageComponent.html",[17,0.796,107,1.257]],["body/components/LoginPageComponent.html",[2,0.112,3,0.112,4,0.078,7,0.161,8,0.99,11,0.45,12,0.018,13,0.101,15,0.01,16,0.008,17,1.104,18,0.79,19,0.964,20,0.964,21,0.964,23,0.99,24,1.889,25,0.964,26,2.996,27,2.996,29,1.524,31,1.524,33,0.594,34,2.623,37,1.252,38,2.147,39,0.624,44,2.108,45,1.846,50,0.872,52,0.594,53,0.611,54,0.594,57,0.783,58,1.936,61,0.525,62,0.229,65,0.753,69,1.297,70,0.136,71,1.943,76,0.523,77,0.499,78,0.523,86,0.719,87,1.447,88,1.524,89,1.524,90,2.147,91,0.964,92,0.964,93,0.719,94,1.037,95,1.524,96,0.79,97,0.915,98,1.524,99,0.753,100,1.191,101,0.964,102,0.753,103,0.964,104,0.79,105,2.779,106,0.964,107,1.601,108,0.753,109,0.964,110,0.719,111,0.964,112,0.79,113,0.599,114,0.964,115,0.79,116,0.964,117,0.964,155,1.213,160,0.964,176,1.075,177,1.213,182,1.297,277,1.511,278,3.106,282,2.389,304,3.13,324,3.345,325,1.511,358,2.931,359,2.931,448,2.395,536,3.367,544,3.367,545,2.204,551,2.54,553,1.854,554,4.131,555,2.621,556,4.131,557,4.794,558,3.635,559,4.219,560,3.367,561,3.25,562,3.693,563,3.25,564,3.367,565,3.402,566,3.402,567,2.152,568,2.152,569,2.152,570,2.152,571,2.152,572,2.152,573,2.152,574,1.854,575,1.854,576,1.854,577,2.152,578,2.152,579,2.152,580,1.658,581,1.854,582,1.658,583,2.152,584,2.152,585,2.152,586,2.152,587,1.658,588,3.402,589,4.131,590,2.621,591,2.931,592,2.931,593,4.643,594,4.131,595,2.931,596,2.931,597,2.931,598,3.402,599,3.402]],["title/interfaces/LoginResult.html",[0,1.317,600,2.438]],["body/interfaces/LoginResult.html",[0,2.227,2,0.273,3,0.273,4,0.19,7,0.393,8,1.853,10,1.647,11,0.678,12,0.017,13,0.245,14,3.007,15,0.014,16,0.014,347,6.146,600,4.123,601,4.51,602,4.51,603,5.496]],["title/injectables/LoginService.html",[285,0.507,560,2.643]],["body/injectables/LoginService.html",[2,0.153,3,0.153,4,0.107,7,0.221,8,1.257,10,1.504,11,0.601,12,0.018,13,0.137,15,0.012,16,0.01,28,1.133,33,0.754,34,2.966,35,3.397,37,1.033,39,0.792,42,3.083,43,3.178,44,2.557,45,2.17,50,0.901,52,0.894,53,0.652,54,0.894,57,0.901,58,1.316,61,0.602,62,0.314,65,1.03,66,1.559,69,1.773,70,0.186,71,2.328,73,1.773,76,0.714,77,0.683,78,0.714,79,1.316,80,1.47,81,1.773,94,0.897,176,1.47,177,1.659,277,2.066,278,3.652,282,3.033,285,0.689,287,1.19,324,3.083,340,2.837,343,1.318,448,2.158,551,2.987,560,3.033,600,3.652,604,2.535,605,5.638,606,4.319,607,3.942,608,3.397,609,4.408,610,3.652,611,4.319,612,2.942,613,4.319,614,2.942,615,4.319,616,2.942,617,2.535,618,2.267,619,2.942,620,2.535,621,2.557,622,2.267,623,2.267,624,2.942,625,4.319,626,2.942,627,2.942,628,2.942,629,2.942,630,2.942,631,2.942,632,2.942]],["title/injectables/LogoutService.html",[280,2.438,285,0.507]],["body/injectables/LogoutService.html",[1,1.999,2,0.161,3,0.161,4,0.112,7,0.231,8,1.302,10,1.165,11,0.476,12,0.018,13,0.144,15,0.01,16,0.01,28,1.188,33,0.781,34,3.015,35,3.474,37,1.061,39,0.82,42,3.168,43,3.25,50,0.918,52,0.539,53,0.393,54,0.539,57,0.789,58,1.944,61,0.616,62,0.329,65,1.565,66,1.635,70,0.195,71,2.359,73,1.859,76,0.749,77,0.716,78,0.749,79,0.94,80,1.542,81,1.859,94,0.94,148,4.049,150,1.312,160,1.382,176,1.542,177,1.739,182,1.859,277,2.167,278,3.735,280,2.897,282,3.14,285,0.709,287,1.248,324,1.859,340,1.458,343,1.382,407,1.859,487,2.377,561,4.051,562,4.442,564,2.167,574,2.659,580,2.377,587,2.377,609,4.53,610,3.735,618,2.377,633,2.659,634,5.766,635,5.766,636,4.442,637,4.051,638,4.471,639,3.086,640,3.086,641,3.086,642,3.086,643,3.086,644,3.852,645,3.086,646,3.086,647,3.086,648,3.086,649,3.086,650,3.086,651,3.086,652,3.086,653,2.377,654,4.471]],["title/components/MainLayoutComponent.html",[17,0.796,108,1.317]],["body/components/MainLayoutComponent.html",[2,0.193,3,0.193,4,0.134,7,0.278,12,0.017,13,0.173,15,0.012,16,0.012,17,1.386,18,1.359,19,1.659,20,1.659,21,1.659,23,1.481,24,2.602,25,1.659,26,3.329,27,3.329,29,2.278,31,2.278,33,0.889,37,1.172,38,2.801,39,1.066,50,0.763,53,0.648,57,0.556,58,1.55,61,0.323,62,0.395,70,0.235,86,1.237,87,2.163,88,2.278,89,2.278,90,2.801,91,1.659,92,1.659,93,1.237,94,1.129,95,2.278,96,1.359,97,1.575,98,2.278,99,1.296,100,1.296,101,1.659,102,1.296,103,1.659,104,1.359,105,1.659,106,1.659,107,1.237,108,2.189,109,2.602,110,1.237,111,1.659,112,1.359,113,1.031,114,1.659,115,1.359,116,1.659,117,1.659,292,4.383,655,3.192,656,5.087,657,5.087,658,3.705,659,3.705]],["title/injectables/RegisterFormFactory.html",[285,0.507,660,2.643]],["body/injectables/RegisterFormFactory.html",[2,0.214,3,0.214,4,0.149,7,0.308,11,0.437,12,0.018,13,0.192,15,0.012,16,0.012,28,1.58,33,0.952,37,1.235,39,0.753,50,0.818,52,0.717,53,0.695,54,0.717,57,0.818,61,0.534,62,0.437,70,0.26,79,1.661,155,2.314,176,2.051,285,0.825,287,1.66,300,2.051,448,2.051,538,5.619,539,3.536,540,5.619,542,4.697,544,4.298,545,3.532,546,3.536,547,3.536,548,5.274,549,3.536,550,5.619,551,2.175,552,4.697,653,3.162,660,3.828,661,3.536,662,4.105,663,4.105,664,6.122,665,5.452,666,5.452,667,4.105,668,4.105,669,4.105]],["title/components/RegisterPageComponent.html",[17,0.796,110,1.257]],["body/components/RegisterPageComponent.html",[2,0.094,3,0.094,4,0.065,7,0.135,8,0.859,10,0.958,11,0.461,12,0.018,13,0.084,15,0.007,16,0.012,17,1.009,18,0.661,19,0.807,20,0.807,21,0.807,23,0.859,24,1.677,25,0.807,26,2.863,27,2.863,29,1.321,31,1.321,33,0.515,34,2.76,37,1.179,38,1.938,39,0.541,44,1.871,45,1.666,50,0.847,52,0.654,53,0.744,54,0.654,57,0.811,58,1.831,61,0.524,62,0.192,65,0.631,69,1.086,70,0.114,71,1.793,79,0.549,86,0.602,87,1.254,88,1.321,89,1.321,90,1.938,91,0.807,92,0.807,93,0.602,94,0.549,95,1.321,96,0.661,97,0.766,98,1.321,99,0.631,100,0.631,101,0.807,102,0.631,103,0.807,104,0.661,105,3.069,106,0.807,107,0.602,108,0.631,109,0.807,110,1.445,111,0.807,112,0.661,113,0.501,114,0.807,115,0.661,116,0.807,117,0.807,150,0.766,155,1.016,160,0.807,182,1.086,304,2.888,324,1.777,325,3.598,407,1.777,448,2.162,544,3.038,545,1.911,551,3.184,554,3.728,555,2.272,556,3.728,558,2.541,561,2.884,562,3.333,563,2.884,564,3.038,575,1.553,576,1.553,580,1.388,581,1.553,582,1.388,587,2.272,589,4.863,590,3.333,591,2.541,592,2.541,593,5.233,594,4.415,595,2.541,596,3.728,597,3.728,607,2.884,608,2.607,621,1.871,622,1.388,623,1.388,660,3.038,670,1.553,671,2.95,672,2.95,673,2.95,674,4.327,675,1.802,676,3.744,677,3.038,678,2.95,679,2.541,680,4.66,681,1.802,682,2.95,683,1.802,684,1.802,685,1.802,686,1.802,687,1.802,688,1.802,689,1.802,690,1.802,691,1.802,692,1.553,693,1.802,694,1.802,695,1.553,696,1.802,697,1.802,698,1.802,699,3.744,700,1.802,701,1.802,702,2.95,703,2.95,704,1.802,705,2.95,706,1.802,707,2.95,708,2.95,709,2.95,710,1.802,711,2.95,712,2.95,713,1.802,714,1.802,715,1.802]],["title/injectables/RegisterService.html",[285,0.507,677,2.643]],["body/injectables/RegisterService.html",[1,2.273,2,0.183,3,0.183,4,0.127,7,0.263,8,1.426,10,1.251,11,0.601,12,0.018,13,0.164,15,0.011,16,0.011,28,1.351,33,0.856,34,2.667,35,3.681,37,1.139,39,0.899,42,2.952,43,3.444,50,0.917,52,0.856,53,0.624,54,0.856,57,0.847,58,1.493,61,0.596,62,0.374,65,1.228,66,1.859,70,0.222,71,2.33,73,2.114,76,0.852,77,0.814,78,0.852,79,1.069,80,1.753,81,2.114,148,4.291,150,1.492,285,0.761,287,1.419,296,2.703,325,3.44,340,2.667,343,1.571,607,4.349,608,3.681,621,3.212,622,2.703,623,2.703,637,4.349,644,3.023,677,3.44,692,4.221,716,3.023,717,6.11,718,4.9,719,3.509,720,3.509,721,3.509,722,4.9,723,3.509,724,3.509,725,3.509]],["title/injectables/RequestInspectorService.html",[285,0.507,476,2.267]],["body/injectables/RequestInspectorService.html",[2,0.249,3,0.249,4,0.173,7,0.357,11,0.508,12,0.018,13,0.223,15,0.014,16,0.014,28,1.835,33,1.049,37,1.327,50,0.715,52,0.833,53,0.607,54,0.833,57,0.901,61,0.524,62,0.508,70,0.302,76,1.157,77,1.106,78,1.157,150,2.027,284,5.174,285,0.886,287,1.927,336,4.159,339,2.872,476,3.618,726,5.174,727,4.106,728,6.006,729,6.006,730,4.766,731,4.766]],["title/injectables/SetSporks.html",[285,0.507,732,2.643]],["body/injectables/SetSporks.html",[2,0.216,3,0.216,4,0.15,7,0.311,8,1.597,10,1.45,11,0.772,12,0.018,13,0.287,14,2.906,15,0.012,16,0.012,23,1.206,37,1.107,39,0.76,50,0.923,52,0.724,53,0.528,54,0.724,61,0.536,62,0.441,70,0.262,76,1.332,77,1.272,78,1.006,79,1.262,113,1.986,162,2.684,285,0.829,434,2.909,435,2.909,732,4.318,733,2.909,734,5.867,735,4.143,736,5.486,737,4.143,738,4.737,739,4.318,740,2.909,741,4.143,742,4.143,743,3.569,744,4.143,745,4.143,746,4.143]],["title/classes/Spork.html",[70,0.238,113,1.047]],["body/classes/Spork.html",[2,0.214,3,0.214,4,0.149,7,0.308,8,1.587,10,1.578,11,0.652,12,0.017,13,0.192,14,3.297,15,0.012,16,0.012,39,0.753,50,1.018,52,0.717,53,0.523,54,0.717,57,0.818,61,0.358,70,0.345,71,2.442,113,1.517,747,3.536,748,6.522,749,6.522,750,4.697,751,4.767,752,5.486,753,5.452,754,5.14,755,5.452,756,4.105,757,4.105,758,4.105,759,4.105,760,4.105,761,2.882,762,5.452,763,5.452]],["title/injectables/SporkFactory.html",[285,0.507,764,2.643]],["body/injectables/SporkFactory.html",[2,0.204,3,0.204,4,0.142,7,0.293,10,1.324,11,0.562,12,0.018,13,0.183,15,0.012,16,0.012,28,1.506,33,0.922,37,1.389,39,1.096,50,0.896,52,0.922,53,0.673,54,0.922,57,0.96,61,0.558,62,0.417,70,0.248,79,1.608,113,1.99,210,2.534,285,0.805,287,1.582,740,2.747,751,2.747,752,4.927,754,4.69,761,2.747,764,3.707,765,3.37,766,4.548,767,4.548,768,3.912,769,5.279,770,4.327,771,3.912,772,5.279,773,5.279,774,3.912,775,3.37,776,3.912,777,3.912,778,3.912,779,3.912,780,3.912,781,3.912]],["title/components/SporkListComponent.html",[17,0.796,112,1.381]],["body/components/SporkListComponent.html",[2,0.132,3,0.132,4,0.092,7,0.19,8,1.123,11,0.498,12,0.018,13,0.118,15,0.009,16,0.009,17,1.19,18,0.928,19,1.132,20,1.132,21,1.132,23,1.123,24,2.093,25,1.132,26,3.106,27,3.106,29,1.727,31,1.727,33,0.674,34,2.208,37,1.197,38,2.341,39,0.707,44,1.926,45,2.013,50,0.784,52,0.674,53,0.666,54,0.674,57,0.578,58,1.593,61,0.579,62,0.269,65,0.885,69,1.523,70,0.16,71,1.83,86,0.845,87,1.64,88,1.727,89,1.727,90,2.341,91,1.132,92,1.132,93,0.845,94,0.77,95,1.727,96,0.928,97,1.075,98,1.727,99,0.885,100,0.885,101,1.132,102,0.885,103,1.132,104,0.928,105,1.132,106,1.132,107,0.845,108,0.885,109,1.132,110,0.845,111,1.132,112,1.918,113,1.95,114,1.132,115,0.928,116,1.132,117,1.132,150,1.075,162,1.638,182,1.523,237,3.322,272,1.776,340,2.47,343,1.132,393,1.638,407,1.523,422,4.336,555,2.97,563,3.6,564,3.671,582,1.948,679,3.322,680,4.504,695,2.178,740,1.776,782,4.849,783,2.178,784,3.856,785,3.856,786,3.856,787,3.856,788,3.856,789,4.673,790,3.671,791,4.673,792,4.504,793,3.856,794,2.529,795,2.529,796,2.529,797,2.529,798,2.529,799,2.529,800,2.529,801,2.529,802,2.529,803,2.529,804,2.529,805,2.529,806,2.529,807,2.529,808,2.529,809,3.856,810,2.529,811,2.529]],["title/interfaces/SporkPayload.html",[0,1.317,770,2.438]],["body/interfaces/SporkPayload.html",[0,2.233,2,0.274,3,0.274,4,0.19,7,0.394,8,1.857,10,1.522,11,0.68,12,0.017,13,0.246,14,3.015,15,0.014,16,0.014,751,5.016,752,5.503,770,4.133,812,4.528,813,5.918]],["title/injectables/SporkService.html",[285,0.507,790,2.643]],["body/injectables/SporkService.html",[2,0.175,3,0.175,4,0.121,7,0.251,8,1.381,10,1.22,11,0.587,12,0.018,13,0.157,15,0.011,16,0.011,28,1.29,33,0.828,34,3.1,35,3.607,37,1.111,39,0.87,42,2.857,43,3.375,50,0.948,52,0.828,53,0.604,54,0.828,57,0.948,58,1.445,61,0.601,62,0.357,65,1.172,66,1.775,70,0.212,71,2.296,73,2.018,76,0.813,77,0.777,78,0.813,79,1.021,80,1.674,81,2.018,113,1.532,148,4.204,150,1.425,285,0.742,287,1.355,296,2.581,340,2.601,343,1.5,617,2.886,618,2.581,637,4.241,740,2.352,764,4.204,767,5.158,770,3.878,775,2.886,790,3.33,814,2.886,815,5.987,816,4.742,817,5.505,818,4.742,819,3.35,820,4.742,821,3.35,822,3.35,823,3.35,824,3.35,825,3.35,826,3.35,827,3.35,828,3.35]],["title/interceptors/TimingInterceptor.html",[137,2.643,327,1.778]],["body/interceptors/TimingInterceptor.html",[2,0.183,3,0.183,4,0.127,7,0.264,11,0.523,12,0.018,13,0.164,15,0.011,16,0.011,23,1.024,33,0.857,37,1.298,39,0.9,44,2.452,45,2.355,50,0.736,52,0.857,53,0.625,54,0.857,57,0.965,61,0.581,62,0.375,70,0.223,71,1.718,76,0.854,77,1.419,78,0.854,79,1.496,137,3.447,150,1.496,285,0.661,327,1.662,330,3.662,335,2.279,336,3.686,337,3.963,339,2.957,340,2.671,341,3.18,342,3.18,343,1.576,344,2.12,345,2.12,349,2.471,393,2.279,397,2.279,475,4.355,476,3.686,479,2.71,480,2.71,481,2.71,486,4.229,487,2.71,488,3.031,489,3.031,490,3.031,491,3.97,492,3.031,813,4.229,829,3.518,830,3.518,831,3.518,832,3.781,833,4.909,834,4.909,835,3.518,836,3.518,837,3.518,838,3.518,839,3.518]],["title/components/TopnavComponent.html",[17,0.796,115,1.381]],["body/components/TopnavComponent.html",[2,0.172,3,0.172,4,0.119,7,0.247,11,0.352,12,0.018,13,0.154,15,0.011,16,0.011,17,1.329,18,1.211,19,1.478,20,1.478,21,1.478,23,1.366,24,2.445,25,1.478,26,3.268,27,3.268,29,2.101,31,2.101,33,0.82,37,1.317,38,2.663,39,0.605,50,0.819,52,0.576,53,0.696,54,0.576,57,0.704,58,1.812,61,0.409,62,0.352,70,0.209,86,1.102,87,1.995,88,2.101,89,2.101,90,2.663,91,1.478,92,1.478,93,1.102,94,1.005,95,2.101,96,1.211,97,1.403,98,2.101,99,1.155,100,1.155,101,1.478,102,1.155,103,1.478,104,1.211,105,1.478,106,1.478,107,1.102,108,1.155,109,1.478,110,1.102,111,1.478,112,1.211,113,0.918,114,1.478,115,2.182,116,2.445,117,1.478,279,4.042,280,3.852,289,2.843,300,1.649,303,4.042,304,2.645,636,5.029,840,2.843,841,4.692,842,4.692,843,3.3,844,3.3,845,3.3,846,3.3,847,3.3,848,4.692]],["title/classes/User.html",[70,0.238,621,1.88]],["body/classes/User.html",[2,0.164,3,0.164,4,0.114,7,0.236,8,1.322,10,1.672,11,0.658,12,0.017,13,0.147,14,3.39,15,0.01,16,0.01,39,0.833,50,1.036,52,0.551,53,0.864,54,1.078,57,0.873,61,0.275,70,0.288,71,2.511,378,5.103,448,3.212,551,3.51,603,5.103,621,2.268,750,3.911,849,2.715,850,5.823,851,5.823,852,5.823,853,5.823,854,3.152,855,4.54,856,3.911,857,5.823,858,6.907,859,3.152,860,3.152,861,3.152,862,3.152,863,3.152,864,3.152,865,3.152,866,3.152,867,3.152,868,3.152,869,3.152,870,2.428,871,4.54,872,4.54,873,4.54,874,4.54]],["title/injectables/UserFactory.html",[285,0.507,608,2.267]],["body/injectables/UserFactory.html",[2,0.156,3,0.156,4,0.108,7,0.225,10,1.511,11,0.644,12,0.018,13,0.14,15,0.01,16,0.01,28,1.153,33,0.764,37,1.434,39,0.549,50,0.907,52,1.056,53,0.883,54,1.056,57,1.003,61,0.569,62,0.319,70,0.19,79,0.913,210,1.94,285,0.697,287,1.211,300,1.497,371,3.993,378,3.982,445,3.073,448,2.583,551,3.204,600,3.683,603,4.38,608,2.636,620,2.581,621,3.509,653,3.371,734,2.581,766,3.77,856,2.581,875,2.581,876,4.376,877,4.376,878,4.454,879,2.995,880,2.995,881,4.376,882,4.376,883,4.435,884,2.995,885,2.995,886,4.376,887,2.995,888,4.376,889,2.995,890,2.995,891,2.995,892,2.995,893,2.307,894,2.581,895,2.995,896,4.376,897,2.995,898,2.995,899,2.581,900,2.995,901,2.995,902,2.995,903,2.995,904,2.995,905,2.995,906,2.995,907,2.995,908,2.995,909,2.995,910,2.995,911,2.995,912,2.995,913,2.995,914,2.995,915,2.995]],["title/interfaces/UserPayload.html",[0,1.317,883,2.643]],["body/interfaces/UserPayload.html",[0,2.175,2,0.263,3,0.263,4,0.182,7,0.378,8,1.81,10,1.684,11,0.718,12,0.017,13,0.235,14,3.186,15,0.014,16,0.014,53,0.897,447,3.88,448,3.517,551,3.73,883,4.365,916,4.34]],["title/injectables/UserService.html",[285,0.507,610,2.438]],["body/injectables/UserService.html",[2,0.208,3,0.208,4,0.144,7,0.299,8,1.555,10,1.336,11,0.569,12,0.018,13,0.186,15,0.012,16,0.012,28,1.533,33,0.933,37,1.468,50,0.967,52,0.696,53,0.507,54,0.696,57,0.967,58,1.963,61,0.526,62,0.424,70,0.252,71,2.11,285,0.812,287,1.61,434,2.796,435,2.796,610,3.461,621,3.635,870,3.067,878,5.551,899,3.43,917,3.43,918,6.443,919,6.443,920,5.342,921,3.982,922,3.982,923,5.342,924,3.982,925,3.982,926,3.982,927,3.982,928,3.982,929,3.982,930,3.982,931,3.982]],["title/coverage.html",[932,3.961]],["body/coverage.html",[0,2.197,1,1.723,4,0.096,5,2.292,6,3.086,11,0.283,12,0.018,15,0.009,16,0.009,17,1.447,18,0.976,22,2.292,45,1.024,70,0.305,80,1.329,93,0.889,96,0.976,99,0.931,102,0.931,104,0.976,107,0.889,108,0.931,110,0.889,112,0.976,113,0.74,115,0.976,141,3.086,183,2.814,188,2.049,191,1.868,202,1.868,204,2.049,208,3.122,210,1.723,220,2.049,245,2.049,272,1.868,273,2.292,280,1.723,285,0.954,291,2.292,355,2.292,356,2.049,357,2.292,369,2.049,371,1.868,372,2.292,373,2.292,390,2.292,391,2.292,400,2.292,407,1.603,408,2.292,409,2.292,422,2.049,445,1.868,446,2.292,447,3.086,449,2.292,450,2.292,476,1.603,494,2.292,522,2.292,536,1.868,537,2.292,553,2.292,560,1.868,600,1.723,601,2.292,602,2.292,604,2.292,608,1.603,610,1.723,621,1.329,633,2.292,655,2.292,660,1.868,661,2.292,670,2.292,677,1.868,716,2.292,726,2.292,727,2.292,732,1.868,733,2.814,738,2.049,747,2.292,764,1.868,765,2.292,770,1.723,782,2.292,783,2.292,790,1.868,812,2.292,814,2.292,840,2.292,849,2.292,875,2.292,883,1.868,916,2.292,917,2.292,932,2.049,933,2.049,934,2.66,935,2.66,936,7.746,937,5.755,938,6.46,939,5.365,940,2.66,941,2.66,942,6.84,943,6.277,944,3.452,945,4.433,946,6.048,947,2.292,948,2.292,949,2.292,950,2.66,951,2.66]],["title/dependencies.html",[120,2.399,952,2.705]],["body/dependencies.html",[12,0.018,15,0.011,16,0.011,62,0.388,63,3.874,64,3.258,65,2.358,66,1.93,67,2.195,94,1.11,120,1.93,122,1.93,143,2.559,144,2.559,145,2.807,146,2.807,155,2.054,160,1.632,162,2.36,166,3.139,167,4.333,172,3.139,174,2.807,176,2.513,177,2.054,180,2.559,182,2.195,311,2.36,318,2.559,343,1.632,379,3.139,545,2.36,754,2.559,761,3.531,870,2.807,893,2.807,894,3.139,953,3.644,954,3.644,955,7.301,956,3.644,957,5.029,958,3.644,959,3.644,960,3.644,961,3.644,962,3.644,963,3.644,964,5.029,965,3.644,966,3.644,967,3.644,968,3.644,969,3.644,970,3.644,971,3.644,972,3.644,973,3.644,974,3.644,975,3.139,976,3.644,977,3.644,978,3.644,979,3.644,980,3.644,981,3.644,982,3.644,983,3.644,984,3.644,985,3.139,986,3.644,987,3.644,988,3.644,989,3.644,990,3.644,991,3.644,992,3.644,993,3.644,994,3.644,995,3.644,996,3.644,997,3.644,998,3.139,999,3.644,1000,3.644,1001,3.644]],["title/miscellaneous/functions.html",[208,2.933,1002,1.892]],["body/miscellaneous/functions.html",[7,0.388,12,0.017,15,0.014,16,0.014,52,1.192,53,0.869,54,1.192,141,3.986,204,4.868,208,3.352,209,4.458,213,4.458,220,4.868,245,4.868,739,4.437,947,4.458,1002,3.118,1003,6.319,1004,5.174,1005,7.106,1006,6.319,1007,5.174,1008,5.174]],["title/index.html",[7,0.235,832,2.419,1009,2.419]],["body/index.html",[4,0.113,12,0.013,15,0.01,16,0.01,23,0.911,34,1.479,64,2.027,65,1.855,80,1.564,87,1.331,94,0.953,97,1.331,100,1.581,113,1.257,118,0.911,122,1.658,123,2.808,143,4.075,144,3.172,162,2.027,174,2.411,180,2.197,208,2.027,216,2.696,263,2.411,304,2.546,491,2.197,496,2.411,528,2.696,590,2.411,593,2.411,621,1.564,636,2.411,751,2.197,754,2.197,761,2.197,792,2.696,893,3.479,932,2.411,933,2.411,952,2.696,975,2.696,985,2.696,998,2.696,1009,2.411,1010,4.517,1011,5.3,1012,3.129,1013,4.517,1014,3.129,1015,3.129,1016,3.129,1017,3.129,1018,3.129,1019,3.129,1020,3.129,1021,3.129,1022,3.891,1023,5.3,1024,3.129,1025,5.3,1026,3.129,1027,3.129,1028,3.129,1029,3.129,1030,3.129,1031,3.129,1032,3.129,1033,5.3,1034,3.129,1035,3.129,1036,4.517,1037,4.517,1038,2.696,1039,3.129,1040,3.129,1041,3.129,1042,3.129,1043,3.129,1044,5.525,1045,5.3,1046,4.517,1047,3.129,1048,3.129,1049,3.129,1050,4.517,1051,4.517,1052,4.517,1053,3.129,1054,3.129,1055,3.129,1056,3.129,1057,3.129,1058,3.129,1059,3.129,1060,3.129,1061,3.129,1062,3.129,1063,3.129,1064,3.129,1065,4.517,1066,3.129,1067,3.129,1068,3.129,1069,5.3,1070,3.129,1071,3.129,1072,4.517,1073,4.517,1074,3.129,1075,3.129,1076,3.129,1077,3.129,1078,3.129,1079,3.129,1080,4.517,1081,3.129,1082,4.517,1083,3.129,1084,3.129,1085,3.129,1086,3.129,1087,3.129,1088,3.129,1089,3.129,1090,3.129,1091,3.129,1092,3.129,1093,4.517,1094,3.129,1095,3.129,1096,3.129,1097,4.517,1098,3.129,1099,4.517,1100,3.129,1101,3.129,1102,3.129,1103,4.517,1104,3.129,1105,3.129,1106,5.3,1107,3.129,1108,3.129,1109,3.129,1110,4.517,1111,3.129,1112,3.129,1113,3.129,1114,3.129,1115,3.129,1116,3.129,1117,3.129,1118,3.129,1119,3.129,1120,3.129,1121,3.129]],["title/license.html",[832,2.419,1009,2.419,1122,2.705]],["body/license.html",[4,0.154,12,0.013,15,0.013,16,0.013,123,2.258,140,2.403,242,3.672,353,3.672,491,2.993,739,2.993,933,3.283,1022,3.672,1038,3.672,1044,4.815,1122,3.672,1123,4.262,1124,6.236,1125,4.262,1126,4.262,1127,4.262,1128,4.262,1129,5.589,1130,4.262,1131,4.262,1132,4.262,1133,4.262,1134,5.589,1135,4.262,1136,6.62,1137,7.375,1138,4.262,1139,5.589,1140,6.236,1141,4.262,1142,6.236,1143,5.589,1144,4.262,1145,4.262,1146,4.262,1147,4.262,1148,4.262,1149,4.262,1150,4.262,1151,4.262,1152,4.262,1153,4.262,1154,4.262,1155,4.262,1156,5.589,1157,5.589,1158,4.262,1159,4.262,1160,5.589,1161,4.262,1162,4.262,1163,4.262,1164,4.262,1165,4.262,1166,4.262,1167,4.262,1168,4.262,1169,4.262,1170,4.262,1171,4.262,1172,4.262,1173,4.262,1174,4.262,1175,4.262,1176,4.262,1177,4.262,1178,4.262]],["title/modules.html",[118,1.497]],["body/modules.html",[12,0.014,15,0.014,16,0.014,64,4.72,118,1.506,119,3.633,129,3.352,130,3.352,131,2.741,132,2.917,308,3.352,414,3.633,418,3.352,1179,7.287,1180,7.287,1181,7.577,1182,6.823,1183,6.823]],["title/overview.html",[1184,4.43]],["body/overview.html",[0,1.085,12,0.017,13,0.145,15,0.01,16,0.01,17,0.656,18,2.419,70,0.196,86,1.036,93,1.761,96,1.935,99,1.845,102,1.845,104,2.419,107,1.761,108,1.845,110,1.761,112,1.935,115,1.935,118,1.306,119,5.324,120,1.642,121,1.868,122,1.642,123,1.642,124,2.671,125,2.671,126,2.671,127,2.671,128,2.671,129,3.415,130,4.675,131,3.644,132,4.177,133,3.702,134,3.702,135,3.702,136,3.702,137,3.702,138,2.703,139,1.868,140,1.748,251,1.868,275,2.388,285,0.418,305,2.671,306,2.671,307,2.671,308,3.415,364,2.671,365,2.671,366,2.671,414,5.022,415,2.671,416,2.671,417,2.671,418,3.415,444,2.671,463,2.671,464,2.671,1184,2.671,1185,3.1,1186,3.1,1187,3.1,1188,3.1,1189,3.1,1190,3.1]],["title/routes.html",[251,3.098]],["body/routes.html",[12,0.016,15,0.016,16,0.016,251,3.642]],["title/miscellaneous/typealiases.html",[1002,1.892,1191,4.528]],["body/miscellaneous/typealiases.html",[7,0.435,11,0.619,12,0.015,15,0.015,16,0.015,732,4.077,733,4.077,739,5.032,1002,3.499,1192,5.807,1193,5.003]],["title/miscellaneous/variables.html",[945,3.488,1002,1.892]],["body/miscellaneous/variables.html",[7,0.344,10,1.298,11,0.749,12,0.018,15,0.013,16,0.013,80,3.227,113,1.276,183,5.051,188,4.975,234,3.532,290,3.951,434,4.938,435,4.938,733,3.22,738,4.975,743,3.951,944,3.951,945,3.532,948,3.951,949,3.951,1002,2.763,1193,3.951,1194,5.86,1195,4.586,1196,4.586,1197,4.586,1198,4.586,1199,4.586,1200,4.586,1201,4.586,1202,5.86]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0.1.18",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1188,"title":{},"body":{"overview.html":{}}}],["1.1.0",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["1.10.1",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1185,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1190,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1186,"title":{},"body":{"overview.html":{}}}],["2",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/SporkListComponent.html":{}}}],["2.0.6",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":1126,"title":{},"body":{"license.html":{}}}],["255",{"_index":596,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["3",{"_index":1187,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":705,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["4",{"_index":1020,"title":{},"body":{"index.html":{}}}],["4.1.3",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1010,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1189,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":444,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["87",{"_index":1104,"title":{},"body":{"index.html":{}}}],["9.0.0",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["_angulartics2googletagmanag",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["_authservic",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["_completehandl",{"_index":635,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_configservic",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_configur",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_configuretransl",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["_datehelp",{"_index":881,"title":{},"body":{"injectables/UserFactory.html":{}}}],["_email",{"_index":850,"title":{},"body":{"classes/User.html":{}}}],["_errorhandl",{"_index":555,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_errorhandler(errorrespons",{"_index":679,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_errorhandler(result",{"_index":566,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_formbuild",{"_index":542,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["_formfactori",{"_index":558,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_geterrorlist",{"_index":673,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_geterrorlist(errorrespons",{"_index":682,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_getresult",{"_index":816,"title":{},"body":{"injectables/SporkService.html":{}}}],["_getresult(resultpayload",{"_index":820,"title":{},"body":{"injectables/SporkService.html":{}}}],["_geturi",{"_index":815,"title":{},"body":{"injectables/SporkService.html":{}}}],["_http",{"_index":637,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["_imageuri",{"_index":748,"title":{},"body":{"classes/Spork.html":{}}}],["_injector",{"_index":334,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["_jsonencodeverb",{"_index":431,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["_key",{"_index":918,"title":{},"body":{"injectables/UserService.html":{}}}],["_lastlogin",{"_index":851,"title":{},"body":{"classes/User.html":{}}}],["_logger",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["_loginservic",{"_index":559,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["_loginuri",{"_index":605,"title":{},"body":{"injectables/LoginService.html":{}}}],["_logoutservic",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"components/TopnavComponent.html":{}}}],["_logouturi",{"_index":634,"title":{},"body":{"injectables/LogoutService.html":{}}}],["_name",{"_index":852,"title":{},"body":{"classes/User.html":{}}}],["_ngxlogger",{"_index":501,"title":{},"body":{"injectables/LogService.html":{}}}],["_password",{"_index":853,"title":{},"body":{"classes/User.html":{}}}],["_price",{"_index":749,"title":{},"body":{"classes/Spork.html":{}}}],["_registerservic",{"_index":676,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["_registeruri",{"_index":717,"title":{},"body":{"injectables/RegisterService.html":{}}}],["_requestinspector",{"_index":475,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["_router",{"_index":561,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["_setus",{"_index":606,"title":{},"body":{"injectables/LoginService.html":{}}}],["_setuser(result",{"_index":613,"title":{},"body":{"injectables/LoginService.html":{}}}],["_sporkfactori",{"_index":817,"title":{},"body":{"injectables/SporkService.html":{}}}],["_sporkservic",{"_index":789,"title":{},"body":{"components/SporkListComponent.html":{}}}],["_store",{"_index":791,"title":{},"body":{"components/SporkListComponent.html":{}}}],["_successhandl",{"_index":556,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["_titleservic",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["_toastr",{"_index":563,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["_translateservic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/LangSwitchComponent.html":{}}}],["_userfactori",{"_index":607,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["_userservic",{"_index":609,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["abov",{"_index":1155,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":523,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["accept",{"_index":439,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["accessor",{"_index":750,"title":{},"body":{"classes/Spork.html":{},"classes/User.html":{}}}],["action",{"_index":739,"title":{},"body":{"injectables/SetSporks.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["actual_compon",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["add",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["address",{"_index":592,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["against",{"_index":1046,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1192,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["analyt",{"_index":1075,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1149,"title":{},"body":{"license.html":{}}}],["angular",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["angular/compil",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["angular2",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["angulartics2",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":1036,"title":{},"body":{"index.html":{}}}],["apibaseuri",{"_index":533,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["apirespons",{"_index":1,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["app.compon",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing.modul",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["app.stat",{"_index":797,"title":{},"body":{"components/SporkListComponent.html":{}}}],["appcompon",{"_index":18,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":1034,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":440,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["appmodul",{"_index":119,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":129,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstat",{"_index":272,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/SporkListComponent.html":{},"coverage.html":{}}}],["aris",{"_index":1177,"title":{},"body":{"license.html":{}}}],["arithmet",{"_index":1067,"title":{},"body":{"index.html":{}}}],["assets/config.json",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lang",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["associ",{"_index":1138,"title":{},"body":{"license.html":{}}}],["auth",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"dependencies.html":{},"index.html":{}}}],["auth.component.html",{"_index":294,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.component.scss",{"_index":293,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth.routing.modul",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.modul",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module#authmodul",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/login/login.compon",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/component/register/register.compon",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/login",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout.servic",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authconfig",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":1045,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":254,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authlayoutcompon",{"_index":93,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":130,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":353,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"license.html":{}}}],["authreq",{"_index":350,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["authrout",{"_index":323,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authroutingmodul",{"_index":308,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["authservice.gettoken",{"_index":348,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["authtokeninterceptor",{"_index":133,"title":{"interceptors/AuthTokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"overview.html":{}}}],["autoseri",{"_index":858,"title":{},"body":{"classes/User.html":{}}}],["avail",{"_index":1183,"title":{},"body":{"modules.html":{}}}],["aw",{"_index":1084,"title":{},"body":{"index.html":{}}}],["back",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["backend",{"_index":1033,"title":{},"body":{"index.html":{}}}],["backtologincompon",{"_index":96,"title":{"components/BackToLoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["baseurl",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beanstalk",{"_index":1073,"title":{},"body":{"index.html":{}}}],["below",{"_index":708,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["blacklist",{"_index":1048,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RequestInspectorService.html":{}}}],["bootstrap",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["brows",{"_index":1181,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":1088,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1111,"title":{},"body":{"index.html":{}}}],["burkindin",{"_index":1128,"title":{},"body":{"license.html":{}}}],["c",{"_index":1125,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":1068,"title":{},"body":{"index.html":{}}}],["call",{"_index":1047,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cart",{"_index":1058,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":642,"title":{},"body":{"injectables/LogoutService.html":{}}}],["cerial",{"_index":870,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["changedetect",{"_index":784,"title":{},"body":{"components/SporkListComponent.html":{}}}],["changedetectionstrategi",{"_index":796,"title":{},"body":{"components/SporkListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":785,"title":{},"body":{"components/SporkListComponent.html":{}}}],["changedetectionstrategy.push",{"_index":1060,"title":{},"body":{"index.html":{}}}],["charact",{"_index":597,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["charg",{"_index":1133,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":443,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["checkout",{"_index":1059,"title":{},"body":{"index.html":{}}}],["children",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["chromedriv",{"_index":1116,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1118,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":1083,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1170,"title":{},"body":{"license.html":{}}}],["class",{"_index":70,"title":{"classes/LogServiceAbstract.html":{},"classes/Spork.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["clearus",{"_index":919,"title":{},"body":{"injectables/UserService.html":{}}}],["close",{"_index":589,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["cluster_appmodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":364,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":365,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":366,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodul",{"_index":415,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":416,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_import",{"_index":417,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_layoutmodul",{"_index":463,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declar",{"_index":464,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_import",{"_index":465,"title":{},"body":{"modules/LayoutModule.html":{}}}],["code",{"_index":1081,"title":{},"body":{"index.html":{}}}],["codepipline/codebuild",{"_index":1085,"title":{},"body":{"index.html":{}}}],["collect",{"_index":1055,"title":{},"body":{"index.html":{}}}],["combin",{"_index":1042,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1097,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["compodoc",{"_index":1076,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":17,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component/auth/auth.compon",{"_index":467,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/back",{"_index":468,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/error/error.compon",{"_index":470,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/home/home.compon",{"_index":420,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["component/lang",{"_index":368,"title":{},"body":{"modules/CoreModule.html":{}}}],["component/login/login.compon",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/main/main.compon",{"_index":471,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component/register/register.compon",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["component/spork",{"_index":421,"title":{},"body":{"modules/HomeModule.html":{}}}],["component/topnav/topnav.compon",{"_index":472,"title":{},"body":{"modules/LayoutModule.html":{}}}],["component_templ",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["compos",{"_index":1019,"title":{},"body":{"index.html":{}}}],["condit",{"_index":1154,"title":{},"body":{"license.html":{}}}],["config",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.auth.heroimageuri",{"_index":302,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["config.core.apibaseuri",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.core.apibaseuri}${config.auth.loginuri",{"_index":626,"title":{},"body":{"injectables/LoginService.html":{}}}],["config.core.apibaseuri}${config.auth.logouturi",{"_index":648,"title":{},"body":{"injectables/LogoutService.html":{}}}],["config.core.apibaseuri}${config.auth.registeruri",{"_index":723,"title":{},"body":{"injectables/RegisterService.html":{}}}],["config.core.apibaseuri}${config.logging.logerroruri",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["config.core.apibaseuri}${config.spork.geturi",{"_index":826,"title":{},"body":{"injectables/SporkService.html":{}}}],["config.core.apibaseuri}/auth/login",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.json",{"_index":1110,"title":{},"body":{"index.html":{}}}],["config/auth.config",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["config/cor",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{},"dependencies.html":{}}}],["config/http",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["configfactori",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configfactory(http",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["confighttpload",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["confighttploader(http",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["configload",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodul",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["configservic",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["configur",{"_index":1066,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":709,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["confirmpassword",{"_index":669,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["confirmpasswordcontrol",{"_index":666,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["connect",{"_index":1178,"title":{},"body":{"license.html":{}}}],["consol",{"_index":534,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["console.log(data",{"_index":535,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["const",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["constructor(_angulartics2googletagmanag",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_authservic",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["constructor(_configservic",{"_index":296,"title":{},"body":{"components/AuthLayoutComponent.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["constructor(_datehelp",{"_index":879,"title":{},"body":{"injectables/UserFactory.html":{}}}],["constructor(_formbuild",{"_index":539,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["constructor(_formfactori",{"_index":675,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["constructor(_injector",{"_index":331,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["constructor(_logg",{"_index":393,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{}}}],["constructor(_logoutservic",{"_index":843,"title":{},"body":{"components/TopnavComponent.html":{}}}],["constructor(_ngxlogg",{"_index":498,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(_translateservic",{"_index":455,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["constructor(email",{"_index":854,"title":{},"body":{"classes/User.html":{}}}],["constructor(payload",{"_index":735,"title":{},"body":{"injectables/SetSporks.html":{}}}],["constructor(pric",{"_index":753,"title":{},"body":{"classes/Spork.html":{}}}],["constructor(priv",{"_index":300,"title":{},"body":{"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{}}}],["constructor(publ",{"_index":746,"title":{},"body":{"injectables/SetSporks.html":{}}}],["contract",{"_index":1174,"title":{},"body":{"license.html":{}}}],["convent",{"_index":742,"title":{},"body":{"injectables/SetSporks.html":{}}}],["copi",{"_index":1136,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1124,"title":{},"body":{"license.html":{}}}],["core",{"_index":975,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["core/core.modul",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["core/interface/service/log.service.abstract",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["core/model/payload/api",{"_index":721,"title":{},"body":{"injectables/RegisterService.html":{}}}],["core/model/payload/login",{"_index":619,"title":{},"body":{"injectables/LoginService.html":{}}}],["core/model/user.model",{"_index":622,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/auth/logout.servic",{"_index":847,"title":{},"body":{"components/TopnavComponent.html":{}}}],["core/service/error",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/factory/user.factori",{"_index":623,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["core/service/guard/auth.guard",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/service/interceptor/auth",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/json",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/log",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/interceptor/timing.interceptor.servic",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/log.servic",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["core/service/user.servic",{"_index":624,"title":{},"body":{"injectables/LoginService.html":{}}}],["coremodul",{"_index":131,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":1100,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":932,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtranslateload",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":1015,"title":{},"body":{"index.html":{}}}],["custom",{"_index":1054,"title":{},"body":{"index.html":{}}}],["customvalid",{"_index":546,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.email",{"_index":549,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["customvalidators.equalto(newpasswordcontrol",{"_index":668,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["d3",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["damag",{"_index":1171,"title":{},"body":{"license.html":{}}}],["data",{"_index":528,"title":{},"body":{"classes/LogServiceAbstract.html":{},"index.html":{}}}],["date",{"_index":378,"title":{},"body":{"injectables/DateHelperService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["date.now",{"_index":833,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["datehelperservic",{"_index":371,"title":{"injectables/DateHelperService.html":{}},"body":{"injectables/DateHelperService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["day",{"_index":1025,"title":{},"body":{"index.html":{}}}],["ddthh:mm:ssza').tod",{"_index":383,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["deal",{"_index":1139,"title":{},"body":{"license.html":{}}}],["debug",{"_index":495,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["debug(messag",{"_index":502,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["declar",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["decod",{"_index":894,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":908,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.email",{"_index":911,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decodedtoken.nam",{"_index":912,"title":{},"body":{"injectables/UserFactory.html":{}}}],["decor",{"_index":857,"title":{},"body":{"classes/User.html":{}}}],["default",{"_index":434,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"injectables/SetSporks.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["demo",{"_index":1012,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":1014,"title":{},"body":{"index.html":{}}}],["dep",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":120,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1082,"title":{},"body":{"index.html":{}}}],["deseri",{"_index":926,"title":{},"body":{"injectables/UserService.html":{}}}],["deserialize(sessionstorage.getitem(this._key",{"_index":928,"title":{},"body":{"injectables/UserService.html":{}}}],["devlog",{"_index":524,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["devlog(data",{"_index":526,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["direct",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["disabl",{"_index":1114,"title":{},"body":{"index.html":{}}}],["disabletimeout",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":1147,"title":{},"body":{"license.html":{}}}],["document",{"_index":933,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":706,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["doesn\\'t",{"_index":714,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["dom",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["don't",{"_index":710,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["don\\'t",{"_index":715,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["done",{"_index":1032,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":1113,"title":{},"body":{"index.html":{}}}],["ec2",{"_index":1086,"title":{},"body":{"index.html":{}}}],["effort",{"_index":1107,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":834,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["elast",{"_index":1072,"title":{},"body":{"index.html":{}}}],["element",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["email",{"_index":448,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["employ",{"_index":1061,"title":{},"body":{"index.html":{}}}],["en",{"_index":461,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["enablehtml",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":1052,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1070,"title":{},"body":{"index.html":{}}}],["enforc",{"_index":1093,"title":{},"body":{"index.html":{}}}],["enter",{"_index":591,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["environ",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["environments/environ",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"classes/LogServiceAbstract.html":{}}}],["error",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["error(`provid",{"_index":386,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["error(messag",{"_index":505,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["error.component.html",{"_index":403,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error.component.scss",{"_index":402,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error:${this._geterrorlist(errorrespons",{"_index":698,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorhandl",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":191,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errorlist",{"_index":699,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorlist}${error",{"_index":701,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["errorpagecompon",{"_index":99,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorrespons",{"_index":407,"title":{"interfaces/ErrorResponse.html":{}},"body":{"interfaces/ErrorResponse.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"coverage.html":{}}}],["es",{"_index":462,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["es6",{"_index":1092,"title":{},"body":{"index.html":{}}}],["event",{"_index":491,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{},"index.html":{},"license.html":{}}}],["exce",{"_index":595,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["expect",{"_index":387,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["expos",{"_index":1037,"title":{},"body":{"index.html":{}}}],["express",{"_index":1022,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":513,"title":{},"body":{"injectables/LogService.html":{}}}],["extensions/password",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["factory/spork.factori",{"_index":824,"title":{},"body":{"injectables/SporkService.html":{}}}],["fals",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["fast_rewind",{"_index":362,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["feed",{"_index":1069,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fit",{"_index":1164,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1153,"title":{},"body":{"license.html":{}}}],["fontawesome5",{"_index":1021,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1041,"title":{},"body":{"index.html":{}}}],["form",{"_index":554,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["form.get('password').value?.length",{"_index":704,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["form.get(\\'password\\').value?.length",{"_index":713,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["format",{"_index":389,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["formbuild",{"_index":540,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["formcontrol",{"_index":664,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["formdata",{"_index":885,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.nam",{"_index":906,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formdata.password",{"_index":907,"title":{},"body":{"injectables/UserFactory.html":{}}}],["formgroup",{"_index":544,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{}}}],["formsmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["free",{"_index":1132,"title":{},"body":{"license.html":{}}}],["front",{"_index":1051,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1050,"title":{},"body":{"index.html":{}}}],["full",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"index.html":{}}}],["function",{"_index":208,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":1151,"title":{},"body":{"license.html":{}}}],["get",{"_index":1009,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdatefromutcstr",{"_index":374,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getdatefromutcstring(utcdatestr",{"_index":375,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["getemail",{"_index":862,"title":{},"body":{"classes/User.html":{}}}],["getform",{"_index":538,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["getfromformdata",{"_index":876,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfromformdata(formdata",{"_index":882,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload",{"_index":766,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/UserFactory.html":{}}}],["getfrompayload(payload",{"_index":886,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getfrompayload(sporkspayload",{"_index":769,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["getimageuri",{"_index":759,"title":{},"body":{"classes/Spork.html":{}}}],["getlastlogin",{"_index":864,"title":{},"body":{"classes/User.html":{}}}],["getnam",{"_index":866,"title":{},"body":{"classes/User.html":{}}}],["getpassword",{"_index":868,"title":{},"body":{"classes/User.html":{}}}],["getpayload",{"_index":877,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getpayload(us",{"_index":888,"title":{},"body":{"injectables/UserFactory.html":{}}}],["getpric",{"_index":757,"title":{},"body":{"classes/Spork.html":{}}}],["getspork",{"_index":767,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{}}}],["getspork(pric",{"_index":773,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["getus",{"_index":878,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["getuser(email",{"_index":890,"title":{},"body":{"injectables/UserFactory.html":{}}}],["gitignor",{"_index":1121,"title":{},"body":{"index.html":{}}}],["googl",{"_index":1074,"title":{},"body":{"index.html":{}}}],["gotologin",{"_index":674,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["gotosignup",{"_index":557,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["gotten",{"_index":1057,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1131,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1182,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":275,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["hack",{"_index":1026,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":392,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":395,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.servic",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":391,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":396,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:8",{"_index":394,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["haven't",{"_index":1056,"title":{},"body":{"index.html":{}}}],["header",{"_index":438,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.servic",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["header.interceptor.service.t",{"_index":430,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:12",{"_index":432,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["header.interceptor.service.ts:17",{"_index":433,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["headers['cont",{"_index":442,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["helper.servic",{"_index":901,"title":{},"body":{"injectables/UserFactory.html":{}}}],["helper.service.t",{"_index":373,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:8",{"_index":376,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["helper/d",{"_index":900,"title":{},"body":{"injectables/UserFactory.html":{}}}],["herebi",{"_index":1130,"title":{},"body":{"license.html":{}}}],["heroimageuri",{"_index":295,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["holder",{"_index":1168,"title":{},"body":{"license.html":{}}}],["home",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["home.component.html",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.routing.modul",{"_index":424,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/home.module#homemodul",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["home/model/spork.model",{"_index":274,"title":{},"body":{"interfaces/AppState.html":{}}}],["home/state/reducer/spork.reduc",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["homecompon",{"_index":102,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodul",{"_index":414,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homerout",{"_index":427,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["homeroutingmodul",{"_index":418,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["http",{"_index":1006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http/request",{"_index":479,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["http_interceptor",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["httpclientmodul",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":680,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["httpevent",{"_index":341,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httphandler",{"_index":337,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httpinterceptor",{"_index":342,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprequest",{"_index":336,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["httprespons",{"_index":486,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["identifi",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["imageuri",{"_index":752,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{}}}],["immut",{"_index":1101,"title":{},"body":{"index.html":{}}}],["implement",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/SetSporks.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["impli",{"_index":1162,"title":{},"body":{"license.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["includ",{"_index":1142,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":285,"title":{"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":332,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["inspector.servic",{"_index":480,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["inspector.service.t",{"_index":727,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["inspector.service.ts:7",{"_index":730,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["instanceof",{"_index":492,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["instruct",{"_index":1119,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":330,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["intercept(req",{"_index":335,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interceptor",{"_index":327,"title":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiResponse.html":{},"interfaces/AppState.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/SporkPayload.html":{},"interfaces/UserPayload.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/AppState.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"interfaces/SporkPayload.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interface/service/log.service.abstract",{"_index":397,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"interceptors/TimingInterceptor.html":{}}}],["isconfigfilerequest",{"_index":728,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isconfigfilerequest(req",{"_index":729,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["isnan(date.gettim",{"_index":384,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["issu",{"_index":1115,"title":{},"body":{"index.html":{}}}],["it'",{"_index":1039,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":761,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["json.stringify(serialize(us",{"_index":930,"title":{},"body":{"injectables/UserService.html":{}}}],["jsonheaderinterceptor",{"_index":134,"title":{"interceptors/JsonHeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"overview.html":{}}}],["jwt",{"_index":893,"title":{},"body":{"injectables/UserFactory.html":{},"dependencies.html":{},"index.html":{}}}],["jwtdecod",{"_index":892,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtdecode(payload.token",{"_index":909,"title":{},"body":{"injectables/UserFactory.html":{}}}],["jwtpayload",{"_index":445,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["keyword",{"_index":745,"title":{},"body":{"injectables/SetSporks.html":{}}}],["kind",{"_index":1161,"title":{},"body":{"license.html":{}}}],["lang",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["langswitchcompon",{"_index":104,"title":{"components/LangSwitchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lastlogin",{"_index":603,"title":{},"body":{"interfaces/LoginResult.html":{},"classes/User.html":{},"injectables/UserFactory.html":{}}}],["layout",{"_index":292,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout'},{'nam",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["layout/component/auth/auth.compon",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["layout/component/error/error.compon",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout/component/main/main.compon",{"_index":426,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["layout/layout.modul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{}}}],["layoutmodul",{"_index":132,"title":{"modules/LayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"overview.html":{}}}],["level",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["liabil",{"_index":1172,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1169,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1122,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1143,"title":{},"body":{"license.html":{}}}],["line",{"_index":1099,"title":{},"body":{"index.html":{}}}],["line:nam",{"_index":741,"title":{},"body":{"injectables/SetSporks.html":{}}}],["line:no",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["lint",{"_index":985,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["list",{"_index":786,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list'},{'nam",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["list.compon",{"_index":423,"title":{},"body":{"modules/HomeModule.html":{}}}],["list.component.html",{"_index":788,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.scss",{"_index":787,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.t",{"_index":783,"title":{},"body":{"components/SporkListComponent.html":{},"coverage.html":{}}}],["list.component.ts:20",{"_index":793,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.ts:29",{"_index":795,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list.component.ts:36",{"_index":794,"title":{},"body":{"components/SporkListComponent.html":{}}}],["list/spork",{"_index":422,"title":{},"body":{"modules/HomeModule.html":{},"components/SporkListComponent.html":{},"coverage.html":{}}}],["loadchildren",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lock.json",{"_index":1120,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":496,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"index.html":{}}}],["log(messag",{"_index":507,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["logerroruri",{"_index":511,"title":{},"body":{"injectables/LogService.html":{}}}],["logger",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"dependencies.html":{},"index.html":{}}}],["loggerconfig",{"_index":512,"title":{},"body":{"injectables/LogService.html":{}}}],["loggermodul",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":324,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["login'},{'nam",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["login(email",{"_index":615,"title":{},"body":{"injectables/LoginService.html":{}}}],["login(this.form.value.email",{"_index":578,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login.compon",{"_index":469,"title":{},"body":{"modules/LayoutModule.html":{}}}],["login.component.html",{"_index":359,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.scss",{"_index":358,"title":{},"body":{"components/BackToLoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["login.component.t",{"_index":357,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:11",{"_index":361,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login.component.ts:8",{"_index":360,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["login/back",{"_index":356,"title":{},"body":{"components/BackToLoginComponent.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["loginformfactori",{"_index":536,"title":{"injectables/LoginFormFactory.html":{}},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecompon",{"_index":107,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginresult",{"_index":600,"title":{"interfaces/LoginResult.html":{}},"body":{"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["loginservic",{"_index":560,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":636,"title":{},"body":{"injectables/LogoutService.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["logoutservic",{"_index":280,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/LogoutService.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["logrequestinterceptor",{"_index":135,"title":{"interceptors/LogRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogRequestInterceptor.html":{},"overview.html":{}}}],["logresponseinterceptor",{"_index":136,"title":{"interceptors/LogResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LogResponseInterceptor.html":{},"overview.html":{}}}],["logservic",{"_index":202,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["logserviceabstract",{"_index":45,"title":{"classes/LogServiceAbstract.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["lot",{"_index":1031,"title":{},"body":{"index.html":{}}}],["made",{"_index":1108,"title":{},"body":{"index.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["main.component.html",{"_index":657,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["main.component.scss",{"_index":656,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["mainlayoutcompon",{"_index":108,"title":{"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":617,"title":{},"body":{"injectables/LoginService.html":{},"injectables/SporkService.html":{}}}],["matbuttonmodul",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["matcardmodul",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{}}}],["match",{"_index":16,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["matformfieldmodul",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{}}}],["maticonmodul",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["matinputmodul",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["matpasswordstrengthmodul",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["matpasswordstrengthmodule.forroot",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["max",{"_index":1098,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":1062,"title":{},"body":{"index.html":{}}}],["maxopen",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":1018,"title":{},"body":{"index.html":{}}}],["measur",{"_index":1095,"title":{},"body":{"index.html":{}}}],["menu",{"_index":848,"title":{},"body":{"components/TopnavComponent.html":{}}}],["merchant",{"_index":1163,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1145,"title":{},"body":{"license.html":{}}}],["messag",{"_index":504,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":1002,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1123,"title":{},"body":{"license.html":{}}}],["mm",{"_index":382,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["model/payload/api",{"_index":643,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/error",{"_index":645,"title":{},"body":{"injectables/LogoutService.html":{}}}],["model/payload/jwt",{"_index":895,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/login",{"_index":897,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/payload/spork.payload",{"_index":775,"title":{},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{}}}],["model/payload/us",{"_index":898,"title":{},"body":{"injectables/UserFactory.html":{}}}],["model/spork.model",{"_index":740,"title":{},"body":{"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{}}}],["model/user.model",{"_index":899,"title":{},"body":{"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["modifi",{"_index":1144,"title":{},"body":{"license.html":{}}}],["modul",{"_index":118,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":379,"title":{},"body":{"injectables/DateHelperService.html":{},"dependencies.html":{}}}],["moment(utcdatestr",{"_index":380,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["money",{"_index":754,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"dependencies.html":{},"index.html":{}}}],["money.fromdecimal(sporkpayload.pric",{"_index":778,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["mongodb",{"_index":1023,"title":{},"body":{"index.html":{}}}],["more",{"_index":703,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["mostli",{"_index":1105,"title":{},"body":{"index.html":{}}}],["ms",{"_index":839,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["msg",{"_index":9,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{}}}],["multi",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nav.backtologin",{"_index":363,"title":{},"body":{"components/BackToLoginComponent.html":{}}}],["nav.errorpag",{"_index":406,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["new",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"injectables/DateHelperService.html":{},"injectables/SporkFactory.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["newpasswordcontrol",{"_index":665,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["next",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(authreq",{"_index":354,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["next.handle(req",{"_index":349,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["next.handle(req).pip",{"_index":489,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["ng2",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"dependencies.html":{}}}],["ng2uiauthmodul",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["ng2uiauthmodule.forroot(authconfig",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["ngrx/effect",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"injectables/SetSporks.html":{},"components/SporkListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"injectables/LogService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":499,"title":{},"body":{"injectables/LogService.html":{}}}],["ngxloggerlevel",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.off",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.trac",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":1167,"title":{},"body":{"license.html":{}}}],["note",{"_index":1106,"title":{},"body":{"index.html":{}}}],["notic",{"_index":1156,"title":{},"body":{"license.html":{}}}],["null",{"_index":653,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/UserFactory.html":{}}}],["number",{"_index":813,"title":{},"body":{"interfaces/SporkPayload.html":{},"interceptors/TimingInterceptor.html":{}}}],["number:'.2",{"_index":810,"title":{},"body":{"components/SporkListComponent.html":{}}}],["number:\\'.2",{"_index":811,"title":{},"body":{"components/SporkListComponent.html":{}}}],["object.values(errorresponse.error).foreach((error",{"_index":700,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["observ",{"_index":340,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["obtain",{"_index":1135,"title":{},"body":{"license.html":{}}}],["of(us",{"_index":632,"title":{},"body":{"injectables/LoginService.html":{}}}],["old",{"_index":1079,"title":{},"body":{"index.html":{}}}],["onactivatetick",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":1176,"title":{},"body":{"license.html":{}}}],["out",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"license.html":{},"overview.html":{}}}],["outdatedbrows",{"_index":1077,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1184,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":952,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":401,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page'},{'nam",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["pages.login.loginbutton",{"_index":598,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.registerlink",{"_index":599,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.login.titl",{"_index":588,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pages.register.loginlink",{"_index":712,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.registerbutton",{"_index":711,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["pages.register.titl",{"_index":702,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["paramet",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1165,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1043,"title":{},"body":{"index.html":{}}}],["password",{"_index":551,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{}}}],["path",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pattern",{"_index":1016,"title":{},"body":{"index.html":{}}}],["payload",{"_index":734,"title":{},"body":{"injectables/SetSporks.html":{},"injectables/UserFactory.html":{}}}],["payload.lastlogin",{"_index":913,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model",{"_index":896,"title":{},"body":{"injectables/UserFactory.html":{}}}],["payload.model.t",{"_index":447,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["permiss",{"_index":1129,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1150,"title":{},"body":{"license.html":{}}}],["person",{"_index":1134,"title":{},"body":{"license.html":{}}}],["pete",{"_index":1127,"title":{},"body":{"license.html":{}}}],["pipe(map(this._setuser.bind(thi",{"_index":628,"title":{},"body":{"injectables/LoginService.html":{}}}],["pipelin",{"_index":1080,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":590,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["popper.j",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":1159,"title":{},"body":{"license.html":{}}}],["positionclass",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":436,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["post(this._logouturi",{"_index":652,"title":{},"body":{"injectables/LogoutService.html":{}}}],["pre",{"_index":1096,"title":{},"body":{"index.html":{}}}],["preloadallmodul",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategi",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":1053,"title":{},"body":{"index.html":{}}}],["price",{"_index":751,"title":{},"body":{"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"index.html":{}}}],["privat",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/Spork.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["problem",{"_index":807,"title":{},"body":{"components/SporkListComponent.html":{}}}],["product",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1013,"title":{},"body":{"index.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/AppState.html":{},"components/AuthLayoutComponent.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["protect",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"index.html":{}}}],["provid",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["public",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["publish",{"_index":1146,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1166,"title":{},"body":{"license.html":{}}}],["put",{"_index":437,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["qualiti",{"_index":1094,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["readonli",{"_index":14,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/AppState.html":{},"interfaces/ErrorResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoginResult.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"interfaces/SporkPayload.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{}}}],["recaptcha",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["redi",{"_index":1049,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":1078,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(st",{"_index":1007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regist",{"_index":325,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["register'},{'nam",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["register(us",{"_index":692,"title":{},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{}}}],["register.component.html",{"_index":672,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["register.component.scss",{"_index":671,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["registerformfactori",{"_index":660,"title":{"injectables/RegisterFormFactory.html":{}},"body":{"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["registerpagecompon",{"_index":110,"title":{"components/RegisterPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerservic",{"_index":677,"title":{"injectables/RegisterService.html":{}},"body":{"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registr",{"_index":697,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["repositori",{"_index":1112,"title":{},"body":{"index.html":{}}}],["req",{"_index":339,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{}}}],["req.clon",{"_index":351,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["req.url.endswith('/assets/config.json",{"_index":731,"title":{},"body":{"injectables/RequestInspectorService.html":{}}}],["req.urlwithparam",{"_index":837,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request",{"_index":836,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["request.interceptor.servic",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["request.interceptor.service.t",{"_index":474,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:14",{"_index":477,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["request.interceptor.service.ts:21",{"_index":478,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["requestinspectorservic",{"_index":476,"title":{"injectables/RequestInspectorService.html":{}},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/RequestInspectorService.html":{},"interceptors/TimingInterceptor.html":{},"coverage.html":{}}}],["requir",{"_index":594,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["require('../../assets/config.json",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reserv",{"_index":744,"title":{},"body":{"injectables/SetSporks.html":{}}}],["reset",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}],["response.interceptor.servic",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["response.interceptor.service.t",{"_index":483,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:16",{"_index":484,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.interceptor.service.ts:23",{"_index":485,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["response.model",{"_index":644,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["response.model.t",{"_index":6,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["rest",{"_index":1035,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":1141,"title":{},"body":{"license.html":{}}}],["result",{"_index":15,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.model",{"_index":620,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserFactory.html":{}}}],["result.model.t",{"_index":602,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["resultpayload",{"_index":822,"title":{},"body":{"injectables/SporkService.html":{}}}],["retriev",{"_index":808,"title":{},"body":{"components/SporkListComponent.html":{}}}],["return",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"interceptors/JsonHeaderInterceptor.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["right",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["root",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LoginFormFactory.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{}}}],["root'},{'nam",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["rout",{"_index":251,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":562,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["routermodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["routermodule.forchild(authrout",{"_index":326,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(homerout",{"_index":428,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rule",{"_index":707,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["run",{"_index":1117,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":1065,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":343,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/internal/oper",{"_index":618,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/SporkService.html":{}}}],["rxjs/oper",{"_index":488,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["s3",{"_index":1087,"title":{},"body":{"index.html":{}}}],["scss",{"_index":1091,"title":{},"body":{"index.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["sell",{"_index":1038,"title":{},"body":{"index.html":{},"license.html":{}}}],["serial",{"_index":927,"title":{},"body":{"injectables/UserService.html":{}}}],["serverloglevel",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["service/factory/form/login.form.factori",{"_index":572,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/factory/form/register.form.factori",{"_index":688,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["service/login.servic",{"_index":573,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["service/register.servic",{"_index":689,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["service/spork.servic",{"_index":798,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sessionstorage.removeitem(this._key",{"_index":931,"title":{},"body":{"injectables/UserService.html":{}}}],["sessionstorage.setitem(this._key",{"_index":929,"title":{},"body":{"injectables/UserService.html":{}}}],["set_spork",{"_index":738,"title":{},"body":{"injectables/SetSporks.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setcollect",{"_index":743,"title":{},"body":{"injectables/SetSporks.html":{},"miscellaneous/variables.html":{}}}],["sethead",{"_index":352,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{}}}],["setlang",{"_index":454,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["setlang(lang",{"_index":458,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["setspork",{"_index":732,"title":{"injectables/SetSporks.html":{}},"body":{"injectables/SetSporks.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["setus",{"_index":920,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(us",{"_index":923,"title":{},"body":{"injectables/UserService.html":{}}}],["shall",{"_index":1157,"title":{},"body":{"license.html":{}}}],["showcas",{"_index":1028,"title":{},"body":{"index.html":{}}}],["sitetitl",{"_index":303,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/TopnavComponent.html":{}}}],["softwar",{"_index":1137,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/BackToLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"interfaces/ErrorResponse.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{}}}],["speed",{"_index":1063,"title":{},"body":{"index.html":{}}}],["spoon",{"_index":1040,"title":{},"body":{"index.html":{}}}],["spork",{"_index":113,"title":{"classes/Spork.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["spork(pric",{"_index":781,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["spork.price.tostr",{"_index":809,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sporkact",{"_index":799,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sporkactions.setsporks(spork",{"_index":805,"title":{},"body":{"components/SporkListComponent.html":{}}}],["sporkfactori",{"_index":764,"title":{"injectables/SporkFactory.html":{}},"body":{"injectables/SporkFactory.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporklistcompon",{"_index":112,"title":{"components/SporkListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sporkpayload",{"_index":770,"title":{"interfaces/SporkPayload.html":{}},"body":{"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporkpayload.imageuri",{"_index":780,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["sporkreduc",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["sporks.push",{"_index":776,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["sporkservic",{"_index":790,"title":{"injectables/SporkService.html":{}},"body":{"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"coverage.html":{}}}],["sporkspayload",{"_index":772,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/.../app.module.t",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.config.t",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../spork.actions.t",{"_index":1193,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../spork.reducer.t",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.routing.module.t",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.state.t",{"_index":273,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{}}}],["src/app/auth/auth.module.t",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.module.t",{"_index":322,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/component/login/login.component.t",{"_index":553,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/login/login.component.ts:17",{"_index":565,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:28",{"_index":571,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:33",{"_index":570,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:42",{"_index":568,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:48",{"_index":567,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/login/login.component.ts:53",{"_index":569,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/auth/component/register/register.component.t",{"_index":670,"title":{},"body":{"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/component/register/register.component.ts:19",{"_index":678,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:29",{"_index":686,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:33",{"_index":687,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:44",{"_index":684,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:49",{"_index":681,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:57",{"_index":683,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/component/register/register.component.ts:66",{"_index":685,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.t",{"_index":537,"title":{},"body":{"injectables/LoginFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:11",{"_index":543,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/login.form.factory.ts:8",{"_index":541,"title":{},"body":{"injectables/LoginFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.t",{"_index":661,"title":{},"body":{"injectables/RegisterFormFactory.html":{},"coverage.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:13",{"_index":662,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/factory/form/register.form.factory.ts:16",{"_index":663,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["src/app/auth/service/login.service.t",{"_index":604,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/auth/service/login.service.ts:17",{"_index":611,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:29",{"_index":612,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:36",{"_index":616,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/login.service.ts:42",{"_index":614,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/service/register.service.t",{"_index":716,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{}}}],["src/app/auth/service/register.service.ts:14",{"_index":718,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:24",{"_index":719,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/auth/service/register.service.ts:31",{"_index":720,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/config/auth.config.t",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/component/lang",{"_index":449,"title":{},"body":{"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.t",{"_index":367,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/interface/service/log.service.abstract.t",{"_index":522,"title":{},"body":{"classes/LogServiceAbstract.html":{},"coverage.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:10",{"_index":532,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:13",{"_index":527,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:5",{"_index":525,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:6",{"_index":529,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/interface/service/log.service.abstract.ts:7",{"_index":530,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["src/app/core/model/payload/api",{"_index":5,"title":{},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/error",{"_index":408,"title":{},"body":{"interfaces/ErrorResponse.html":{},"coverage.html":{}}}],["src/app/core/model/payload/jwt",{"_index":446,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/app/core/model/payload/login",{"_index":601,"title":{},"body":{"interfaces/LoginResult.html":{},"coverage.html":{}}}],["src/app/core/model/payload/us",{"_index":916,"title":{},"body":{"interfaces/UserPayload.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.t",{"_index":849,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:11",{"_index":855,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:25",{"_index":863,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:29",{"_index":865,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:33",{"_index":867,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:37",{"_index":869,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:5",{"_index":859,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:7",{"_index":860,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:9",{"_index":861,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/service/auth/logout.service.t",{"_index":633,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{}}}],["src/app/core/service/auth/logout.service.ts:17",{"_index":638,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:29",{"_index":640,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:36",{"_index":641,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/auth/logout.service.ts:49",{"_index":639,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/service/error",{"_index":390,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.t",{"_index":875,"title":{},"body":{"injectables/UserFactory.html":{},"coverage.html":{}}}],["src/app/core/service/factory/user.factory.ts:13",{"_index":880,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:16",{"_index":889,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:24",{"_index":884,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:28",{"_index":887,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/factory/user.factory.ts:40",{"_index":891,"title":{},"body":{"injectables/UserFactory.html":{}}}],["src/app/core/service/guard/auth.guard.t",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:10",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/guard/auth.guard.ts:16",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/service/helper/d",{"_index":372,"title":{},"body":{"injectables/DateHelperService.html":{},"coverage.html":{}}}],["src/app/core/service/http/request",{"_index":726,"title":{},"body":{"injectables/RequestInspectorService.html":{},"coverage.html":{}}}],["src/app/core/service/interceptor/auth",{"_index":328,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["src/app/core/service/interceptor/json",{"_index":429,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["src/app/core/service/interceptor/log",{"_index":473,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.t",{"_index":829,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:16",{"_index":830,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/interceptor/timing.interceptor.service.ts:23",{"_index":831,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["src/app/core/service/log.service.t",{"_index":494,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/core/service/log.service.ts:13",{"_index":503,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:18",{"_index":506,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:23",{"_index":508,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:27",{"_index":510,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/log.service.ts:7",{"_index":500,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/service/user.service.t",{"_index":917,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/service/user.service.ts:10",{"_index":925,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:12",{"_index":922,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:16",{"_index":924,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/user.service.ts:20",{"_index":921,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/home/component/home/home.component.t",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/component/home/home.component.ts:11",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/home/home.component.ts:8",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/component/spork",{"_index":782,"title":{},"body":{"components/SporkListComponent.html":{},"coverage.html":{}}}],["src/app/home/home.module.t",{"_index":419,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/home/home.routing.module.t",{"_index":425,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/home/model/payload/spork.payload.t",{"_index":812,"title":{},"body":{"interfaces/SporkPayload.html":{},"coverage.html":{}}}],["src/app/home/model/spork.model.t",{"_index":747,"title":{},"body":{"classes/Spork.html":{},"coverage.html":{}}}],["src/app/home/model/spork.model.ts:12",{"_index":758,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:16",{"_index":760,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:4",{"_index":756,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/model/spork.model.ts:5",{"_index":755,"title":{},"body":{"classes/Spork.html":{}}}],["src/app/home/service/factory/spork.factory.t",{"_index":765,"title":{},"body":{"injectables/SporkFactory.html":{},"coverage.html":{}}}],["src/app/home/service/factory/spork.factory.ts:10",{"_index":768,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/factory/spork.factory.ts:13",{"_index":771,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/factory/spork.factory.ts:28",{"_index":774,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["src/app/home/service/spork.service.t",{"_index":814,"title":{},"body":{"injectables/SporkService.html":{},"coverage.html":{}}}],["src/app/home/service/spork.service.ts:15",{"_index":818,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:25",{"_index":819,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:32",{"_index":823,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/service/spork.service.ts:36",{"_index":821,"title":{},"body":{"injectables/SporkService.html":{}}}],["src/app/home/state/action/spork.actions.t",{"_index":733,"title":{},"body":{"injectables/SetSporks.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/state/action/spork.actions.ts:12",{"_index":736,"title":{},"body":{"injectables/SetSporks.html":{}}}],["src/app/home/state/action/spork.actions.ts:14",{"_index":737,"title":{},"body":{"injectables/SetSporks.html":{}}}],["src/app/home/state/reducer/spork.reducer.t",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/layout/component/auth/auth.component.t",{"_index":291,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/auth/auth.component.ts:10",{"_index":297,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:16",{"_index":298,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/auth/auth.component.ts:23",{"_index":299,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/layout/component/back",{"_index":355,"title":{},"body":{"components/BackToLoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.t",{"_index":400,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/error/error.component.ts:11",{"_index":405,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/error/error.component.ts:8",{"_index":404,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["src/app/layout/component/main/main.component.t",{"_index":655,"title":{},"body":{"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/main/main.component.ts:11",{"_index":659,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["src/app/layout/component/main/main.component.ts:8",{"_index":658,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.t",{"_index":840,"title":{},"body":{"components/TopnavComponent.html":{},"coverage.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:10",{"_index":844,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:13",{"_index":846,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/component/topnav/topnav.component.ts:15",{"_index":845,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/layout/layout.module.t",{"_index":466,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/environments/environment.prod.t",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabil",{"_index":1064,"title":{},"body":{"index.html":{}}}],["stack",{"_index":1011,"title":{},"body":{"index.html":{}}}],["stage",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":832,"title":{"index.html":{},"license.html":{}},"body":{"interceptors/TimingInterceptor.html":{}}}],["state",{"_index":1008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state/action/spork.act",{"_index":800,"title":{},"body":{"components/SporkListComponent.html":{}}}],["statement",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":1030,"title":{},"body":{"index.html":{}}}],["store",{"_index":792,"title":{},"body":{"components/SporkListComponent.html":{},"index.html":{}}}],["storemodul",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["strength",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["strict",{"_index":1089,"title":{},"body":{"index.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["subject",{"_index":1152,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1148,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":580,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["substanti",{"_index":1158,"title":{},"body":{"license.html":{}}}],["success",{"_index":694,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["super",{"_index":514,"title":{},"body":{"injectables/LogService.html":{}}}],["support",{"_index":1179,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1180,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":451,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch'},{'nam",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["switch.compon",{"_index":370,"title":{},"body":{"modules/CoreModule.html":{}}}],["switch.component.html",{"_index":453,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.scss",{"_index":452,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.t",{"_index":450,"title":{},"body":{"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:12",{"_index":457,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.ts:14",{"_index":459,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch.component.ts:9",{"_index":456,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["switch/lang",{"_index":369,"title":{},"body":{"modules/CoreModule.html":{},"components/LangSwitchComponent.html":{},"coverage.html":{}}}],["tabl",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":487,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"injectables/LogoutService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tap((ev",{"_index":490,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["taptodismiss",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["templat",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["test",{"_index":1103,"title":{},"body":{"index.html":{}}}],["this._authservic",{"_index":627,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._authservice.isauthent",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._authservice.logout",{"_index":574,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{}}}],["this._authservice.removetoken",{"_index":649,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._completehandler.bind(thi",{"_index":654,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._configservice.getset",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["this._configur",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/SporkService.html":{}}}],["this._configuretransl",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["this._datehelper.getdatefromutcstring(payload.lastlogin",{"_index":914,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this._email",{"_index":871,"title":{},"body":{"classes/User.html":{}}}],["this._errorhandler.bind(thi",{"_index":582,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["this._formbuilder.control",{"_index":667,"title":{},"body":{"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.control(nul",{"_index":548,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formbuilder.group",{"_index":547,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["this._formfactory.getform",{"_index":576,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._geturi",{"_index":825,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._http",{"_index":651,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._http.get(this._geturi).pipe(map(this._getresult.bind(thi",{"_index":827,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._http.post",{"_index":724,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._imageuri",{"_index":763,"title":{},"body":{"classes/Spork.html":{}}}],["this._injector.get",{"_index":346,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["this._jsonencodeverbs.includes(req.method.touppercas",{"_index":441,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{}}}],["this._lastlogin",{"_index":872,"title":{},"body":{"classes/User.html":{}}}],["this._logger.devlog",{"_index":835,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["this._logger.devlog(error",{"_index":398,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.devlog(errorresponse.error",{"_index":695,"title":{},"body":{"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["this._logger.devlog(ev",{"_index":493,"title":{},"body":{"interceptors/LogResponseInterceptor.html":{}}}],["this._logger.devlog(req",{"_index":482,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{}}}],["this._logger.devlog(result",{"_index":585,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._logger.devlog(us",{"_index":630,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logger.error(error",{"_index":399,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this._logger.updateloggeruri",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this._loginservic",{"_index":577,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._loginuri",{"_index":625,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._logoutservice.logout",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{},"components/TopnavComponent.html":{}}}],["this._logouturi",{"_index":647,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._nam",{"_index":873,"title":{},"body":{"classes/User.html":{}}}],["this._ngxlogger.debug(messag",{"_index":515,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.error(messag",{"_index":516,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.getconfigsnapshot",{"_index":519,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.log(messag",{"_index":517,"title":{},"body":{"injectables/LogService.html":{}}}],["this._ngxlogger.updateconfig(updatedconfig",{"_index":521,"title":{},"body":{"injectables/LogService.html":{}}}],["this._password",{"_index":874,"title":{},"body":{"classes/User.html":{}}}],["this._pric",{"_index":762,"title":{},"body":{"classes/Spork.html":{}}}],["this._registerservic",{"_index":691,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._registeruri",{"_index":722,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._requestinspector.isconfigfilerequest(req",{"_index":481,"title":{},"body":{"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"interceptors/TimingInterceptor.html":{}}}],["this._router.navigate(['auth",{"_index":587,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{}}}],["this._router.navigate(['hom",{"_index":584,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._sporkfactory.getfrompayload(resultpayload",{"_index":828,"title":{},"body":{"injectables/SporkService.html":{}}}],["this._sporkservice.getsporks().subscribe((spork",{"_index":803,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._store.dispatch(new",{"_index":804,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._store.select('spork",{"_index":802,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._successhandler.bind(thi",{"_index":581,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this._titleservice.settitle(sitetitl",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this._toastr.error",{"_index":696,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._toastr.error('login",{"_index":586,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.error('ther",{"_index":806,"title":{},"body":{"components/SporkListComponent.html":{}}}],["this._toastr.success('log",{"_index":583,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this._toastr.success('register",{"_index":693,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._translateservice.get('sitetitle').subscribe((sitetitl",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.setdefaultlang('en",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use('en",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this._translateservice.use(lang",{"_index":460,"title":{},"body":{"components/LangSwitchComponent.html":{}}}],["this._userfactory.getfromformdata(this.form.valu",{"_index":690,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this._userfactory.getfrompayload(result",{"_index":629,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._userfactory.getpayload(us",{"_index":725,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this._userservice.clearus",{"_index":650,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this._userservice.setuser(us",{"_index":631,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.form",{"_index":575,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this.form.value.password",{"_index":579,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.getspork",{"_index":777,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["this.getus",{"_index":910,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.getuser(formdata.email",{"_index":905,"title":{},"body":{"injectables/UserFactory.html":{}}}],["this.heroimageuri",{"_index":301,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["this.spork",{"_index":801,"title":{},"body":{"components/SporkListComponent.html":{}}}],["thon",{"_index":1027,"title":{},"body":{"index.html":{}}}],["throw",{"_index":385,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["time",{"_index":1109,"title":{},"body":{"index.html":{}}}],["timinginterceptor",{"_index":137,"title":{"interceptors/TimingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimingInterceptor.html":{},"overview.html":{}}}],["titl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservic",{"_index":564,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{}}}],["todo",{"_index":593,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["token",{"_index":347,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interfaces/LoginResult.html":{}}}],["token.interceptor.servic",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["token.interceptor.service.t",{"_index":329,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:12",{"_index":333,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["token.interceptor.service.ts:16",{"_index":338,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{}}}],["took",{"_index":838,"title":{},"body":{"interceptors/TimingInterceptor.html":{}}}],["toolbox",{"_index":1029,"title":{},"body":{"index.html":{}}}],["topnav",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["topnav.component.html",{"_index":842,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav.component.scss",{"_index":841,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnavcompon",{"_index":115,"title":{"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tort",{"_index":1175,"title":{},"body":{"license.html":{}}}],["translat",{"_index":304,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["translate/cor",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LangSwitchComponent.html":{},"modules/LayoutModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["translatemodule.forroot",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["translatepip",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/LangSwitchComponent.html":{}}}],["tree",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["true",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/AuthTokenInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interceptors/JsonHeaderInterceptor.html":{},"modules/LayoutModule.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:disable:no",{"_index":344,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["tslint:enable:no",{"_index":345,"title":{},"body":{"interceptors/AuthTokenInterceptor.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"classes/LogServiceAbstract.html":{},"interceptors/TimingInterceptor.html":{}}}],["two",{"_index":1024,"title":{},"body":{"index.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"interceptors/AuthTokenInterceptor.html":{},"injectables/DateHelperService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/ErrorResponse.html":{},"interceptors/JsonHeaderInterceptor.html":{},"interfaces/JwtPayload.html":{},"components/LangSwitchComponent.html":{},"interceptors/LogRequestInterceptor.html":{},"interceptors/LogResponseInterceptor.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"interfaces/LoginResult.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/RequestInspectorService.html":{},"injectables/SetSporks.html":{},"classes/Spork.html":{},"injectables/SporkFactory.html":{},"components/SporkListComponent.html":{},"interfaces/SporkPayload.html":{},"injectables/SporkService.html":{},"interceptors/TimingInterceptor.html":{},"components/TopnavComponent.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1191,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":1090,"title":{},"body":{"index.html":{}}}],["ui",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthTokenInterceptor.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["undefin",{"_index":1005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":1017,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1102,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LayoutModule.html":{}}}],["updatedconfig",{"_index":518,"title":{},"body":{"injectables/LogService.html":{}}}],["updatedconfig.serverloggingurl",{"_index":520,"title":{},"body":{"injectables/LogService.html":{}}}],["updateloggeruri",{"_index":497,"title":{},"body":{"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(apibaseuri",{"_index":531,"title":{},"body":{"classes/LogServiceAbstract.html":{}}}],["updateloggeruri(logerroruri",{"_index":509,"title":{},"body":{"injectables/LogService.html":{}}}],["us",{"_index":1044,"title":{},"body":{"index.html":{},"license.html":{}}}],["usd",{"_index":779,"title":{},"body":{"injectables/SporkFactory.html":{}}}],["useclass",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":621,"title":{"classes/User.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"classes/User.html":{},"injectables/UserFactory.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user(email",{"_index":915,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.email",{"_index":903,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.nam",{"_index":902,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.password",{"_index":904,"title":{},"body":{"injectables/UserFactory.html":{}}}],["user.servic",{"_index":646,"title":{},"body":{"injectables/LogoutService.html":{}}}],["userfactori",{"_index":608,"title":{"injectables/UserFactory.html":{}},"body":{"injectables/LoginService.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"injectables/UserFactory.html":{},"coverage.html":{}}}],["userpayload",{"_index":883,"title":{"interfaces/UserPayload.html":{}},"body":{"injectables/UserFactory.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["userservic",{"_index":610,"title":{"injectables/UserService.html":{}},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["utc",{"_index":388,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["utcdatestr",{"_index":377,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["valid",{"_index":545,"title":{},"body":{"injectables/LoginFormFactory.html":{},"components/LoginPageComponent.html":{},"injectables/RegisterFormFactory.html":{},"components/RegisterPageComponent.html":{},"dependencies.html":{}}}],["validators.maxlength(255",{"_index":552,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["validators.requir",{"_index":550,"title":{},"body":{"injectables/LoginFormFactory.html":{},"injectables/RegisterFormFactory.html":{}}}],["valu",{"_index":435,"title":{},"body":{"interceptors/JsonHeaderInterceptor.html":{},"injectables/SetSporks.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"components/LoginPageComponent.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"components/SporkListComponent.html":{},"components/TopnavComponent.html":{}}}],["variabl",{"_index":945,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BackToLoginComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ErrorPageComponent.html":{},"components/HomeComponent.html":{},"components/LangSwitchComponent.html":{},"injectables/LogService.html":{},"classes/LogServiceAbstract.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/MainLayoutComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/RegisterService.html":{},"components/SporkListComponent.html":{},"injectables/SporkService.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{}}}],["warranti",{"_index":1160,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1173,"title":{},"body":{"license.html":{}}}],["winston",{"_index":1071,"title":{},"body":{"index.html":{}}}],["without",{"_index":1140,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":998,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ye",{"_index":856,"title":{},"body":{"classes/User.html":{},"injectables/UserFactory.html":{}}}],["yyyi",{"_index":381,"title":{},"body":{"injectables/DateHelperService.html":{}}}],["zone.j",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/LayoutModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/api-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  readonly msg: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _configureTranslation\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_angulartics2GoogleTagManager: Angulartics2GoogleTagManager, _configService: ConfigService, _logger: LogServiceAbstract, _titleService: Title, _translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _angulartics2GoogleTagManager\n                                                  \n                                                        \n                                                                    Angulartics2GoogleTagManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configureTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configureTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ConfigService } from '@ngx-config/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private _angulartics2GoogleTagManager: Angulartics2GoogleTagManager,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _titleService: Title,\n    private _translateService: TranslateService\n  ) {\n    this._configureTranslation();\n  }\n\n  public ngOnInit(): void {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    this._translateService.get('siteTitle').subscribe((siteTitle: string) => {\n      this._titleService.setTitle(siteTitle);\n    });\n\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logger.updateLoggerUri(\n      `${config.core.apiBaseUri}${config.logging.logErrorUri}`\n    );\n  }\n\n  protected _configureTranslation(): void {\n    this._translateService.setDefaultLang('en');\n    this._translateService.use('en');\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthTokenInterceptor\n                            \n                            \n                                     JsonHeaderInterceptor\n                            \n                            \n                                     LogRequestInterceptor\n                            \n                            \n                                     LogResponseInterceptor\n                            \n                            \n                                     TimingInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport { ConfigLoader, ConfigModule, ConfigService } from '@ngx-config/core';\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { Ng2UiAuthModule } from 'ng2-ui-auth';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthConfig } from './config/auth.config';\nimport { CoreModule } from './core/core.module';\nimport { LogServiceAbstract } from './core/interface/service/log.service.abstract';\nimport { ErrorHandlerService } from './core/service/error-handler.service';\nimport { AuthTokenInterceptor } from './core/service/interceptor/auth-token.interceptor.service';\nimport { JsonHeaderInterceptor } from './core/service/interceptor/json-header.interceptor.service';\nimport { LogRequestInterceptor } from './core/service/interceptor/log-request.interceptor.service';\nimport { LogResponseInterceptor } from './core/service/interceptor/log-response.interceptor.service';\nimport { TimingInterceptor } from './core/service/interceptor/timing.interceptor.service';\nimport { LogService } from './core/service/log.service';\nimport { reducer as sporkReducer } from './home/state/reducer/spork.reducer';\nimport { LayoutModule } from './layout/layout.module';\n\nexport function configFactory(http: HttpClient): ConfigLoader {\n  return new ConfigHttpLoader(http, './assets/config.json');\n}\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AppRoutingModule,\n    AuthModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: configFactory,\n      deps: [HttpClient],\n    }),\n    CoreModule,\n    FormsModule,\n    HttpClientModule,\n    LayoutModule,\n    LoggerModule.forRoot({\n      level: environment.production ? NgxLoggerLevel.OFF : NgxLoggerLevel.TRACE,\n      serverLogLevel: NgxLoggerLevel.ERROR,\n    }),\n    MatPasswordStrengthModule.forRoot(),\n    Ng2UiAuthModule.forRoot(AuthConfig),\n    ReactiveFormsModule,\n    RouterModule,\n    StoreModule.forRoot({\n      spork: sporkReducer,\n    }),\n    ToastrModule.forRoot({\n      enableHtml: true,\n      disableTimeOut: true,\n      maxOpened: 2,\n      onActivateTick: true,\n      positionClass: 'toast-bottom-right',\n      tapToDismiss: true,\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n  ],\n  declarations: [AppComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TimingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JsonHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogRequestInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LogResponseInterceptor,\n      multi: true,\n    },\n\n    {\n      provide: ErrorHandler,\n      useClass: ErrorHandlerService,\n    },\n\n    ConfigService,\n    TranslatePipe,\n\n    {\n      provide: LogServiceAbstract,\n      useClass: LogService,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { LoginPageComponent } from './auth/component/login/login.component';\nimport { RegisterPageComponent } from './auth/component/register/register.component';\nimport { AuthGuard } from './core/service/guard/auth.guard';\nimport { AuthLayoutComponent } from './layout/component/auth/auth.component';\nimport { ErrorPageComponent } from './layout/component/error/error.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: './auth/auth.module#AuthModule',\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/auth/login',\n  },\n  {\n    path: 'home',\n    canActivate: [AuthGuard],\n    loadChildren: './home/home.module#HomeModule',\n  },\n  {\n    path: '**',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: '**',\n        component: ErrorPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sporks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sporks\n                                    \n                                \n                                \n                                    \n                                        sporks:     Spork[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Spork[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Spork } from './home/model/spork.model';\n\nexport interface AppState {\n  readonly sporks: Spork[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/service/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_authService: AuthService, _logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/guard/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        canActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/guard/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\n\nimport { LogoutService } from '../auth/logout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  public constructor(\n    private _authService: AuthService,\n    private _logoutService: LogoutService\n  ) {}\n\n  public canActivate(): boolean {\n    if (this._authService.isAuthenticated()) {\n      return true;\n    }\n\n    this._logoutService.logout();\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n            \n                styleUrls\n                auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                heroImageUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heroImageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heroImageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/component/auth/auth.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthLayoutComponent implements OnInit {\n  public heroImageUri: string;\n\n  constructor(private _configService: ConfigService) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this.heroImageUri = `${config.auth.heroImageUri}`;\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      {{ 'siteTitle' | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'siteTitle\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAuthModule -->\n\nCoreModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginPageComponent\n                            \n                            \n                                RegisterPageComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { AuthRoutingModule } from './auth.routing.module';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\n@NgModule({\n  imports: [\n    AuthRoutingModule,\n    CommonModule,\n    CoreModule,\n    FormsModule,\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPasswordStrengthModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [LoginPageComponent, RegisterPageComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthLayoutComponent } from '../layout/component/auth/auth.component';\nimport { LoginPageComponent } from './component/login/login.component';\nimport { RegisterPageComponent } from './component/register/register.component';\n\nconst authRoutes: Routes = [\n  {\n    path: '',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginPageComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(authRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthTokenInterceptor.html":{"url":"interceptors/AuthTokenInterceptor.html","title":"interceptor - AuthTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/auth-token.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/auth-token.interceptor.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  public constructor(private _injector: Injector) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    const authService: AuthService = this._injector.get(\n      AuthService\n    );\n    const token: string = authService.getToken();\n    if (!token) {\n      return next.handle(req);\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: { Authorization: token },\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackToLoginComponent.html":{"url":"components/BackToLoginComponent.html","title":"component - BackToLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BackToLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/back-to-login/back-to-login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-to-login\n            \n\n            \n                styleUrls\n                back-to-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./back-to-login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/back-to-login/back-to-login.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-back-to-login',\n  templateUrl: './back-to-login.component.html',\n  styleUrls: ['./back-to-login.component.scss'],\n})\nexport class BackToLoginComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      fast_rewind{{ 'nav.backToLogin' | translate }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              fast_rewind{{ \\'nav.backToLogin\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackToLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nLangSwitchComponent\n\nLangSwitchComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLangSwitchComponent->CoreModule\n\n\n\n\n\nLangSwitchComponent \n\nLangSwitchComponent \n\nLangSwitchComponent  -->\n\nCoreModule->LangSwitchComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LangSwitchComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LangSwitchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LangSwitchComponent } from './component/lang-switch/lang-switch.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LangSwitchComponent],\n  exports: [LangSwitchComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateHelperService.html":{"url":"injectables/DateHelperService.html","title":"injectable - DateHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DateHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/helper/date-helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDateFromUtcString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDateFromUtcString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDateFromUtcString(utcDateString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/helper/date-helper.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utcDateString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateHelperService {\n  public getDateFromUtcString(utcDateString: string): Date {\n    const date: Date = moment(utcDateString, 'YYYY-MM-DDTHH:mm:ssZa').toDate();\n\n    if (isNaN(date.getTime())) {\n      throw new Error(`Provided date string is not in expected UTC format`);\n    }\n\n    return date;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/error-handler.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-handler.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(private _logger: LogServiceAbstract) {}\n\n  // tslint:disable-next-line:no-any\n  handleError(error: any): void {\n    this._logger.devLog(error);\n    this._logger.error(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/error/error.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ 'nav.errorPage' | translate }}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'nav.errorPage\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorResponse.html":{"url":"interfaces/ErrorResponse.html","title":"interface - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/error-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errors\n                                \n                                \n                                        msg\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                    \n                                \n                                \n                                    \n                                        msg:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorResponse {\n  readonly msg: string;\n  readonly errors: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/home/home.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSporkListComponent\n\nSporkListComponent\n\nHomeModule -->\n\nSporkListComponent->HomeModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                            \n                                SporkListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    HomeRoutingModule\n                            \n                            \n                                    LayoutModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material';\n\nimport { CoreModule } from '../core/core.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { HomeComponent } from './component/home/home.component';\nimport { SporkListComponent } from './component/spork-list/spork-list.component';\nimport { HomeRoutingModule } from './home.routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    HomeRoutingModule,\n    LayoutModule,\n    MatCardModule,\n  ],\n  declarations: [HomeComponent, SporkListComponent],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MainLayoutComponent } from '../layout/component/main/main.component';\nimport { HomeComponent } from './component/home/home.component';\n\nconst homeRoutes: Routes = [\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        component: HomeComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(homeRoutes)],\n  exports: [RouterModule],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JsonHeaderInterceptor.html":{"url":"interceptors/JsonHeaderInterceptor.html","title":"interceptor - JsonHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JsonHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/json-header.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonEncodeVerbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jsonEncodeVerbs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _jsonEncodeVerbs:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['POST', 'PUT']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/interceptor/json-header.interceptor.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JsonHeaderInterceptor implements HttpInterceptor {\n  private _jsonEncodeVerbs: string[] = ['POST', 'PUT'];\n\n  public constructor() {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    // tslint:disable-next-line:no-any\n    const headers: any = {\n      Accept: 'application/json',\n    };\n\n    if (this._jsonEncodeVerbs.includes(req.method.toUpperCase())) {\n      headers['Content-Type'] = 'application/json; charset=utf-8';\n    }\n\n    // tslint:disable-next-line:no-any\n    const authReq: HttpRequest = req.clone({\n      setHeaders: headers,\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/jwt-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  readonly email: string;\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LangSwitchComponent.html":{"url":"components/LangSwitchComponent.html","title":"component - LangSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LangSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/component/lang-switch/lang-switch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lang-switch\n            \n\n            \n                styleUrls\n                lang-switch.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./lang-switch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/component/lang-switch/lang-switch.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/component/lang-switch/lang-switch.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/component/lang-switch/lang-switch.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-lang-switch',\n  templateUrl: './lang-switch.component.html',\n  styleUrls: ['./lang-switch.component.scss'],\n})\nexport class LangSwitchComponent implements OnInit {\n  constructor(private _translateService: TranslateService) {}\n\n  public ngOnInit(): void {}\n\n  public setLang(lang: string): void {\n    this._translateService.use(lang);\n  }\n}\n\n    \n\n    \n        \n  en |\n  es\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  en |  es'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LangSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_imports\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nLayoutModule -->\n\nMainLayoutComponent->LayoutModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nLayoutModule -->\n\nTopnavComponent->LayoutModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthLayoutComponent\n                            \n                            \n                                BackToLoginComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                MainLayoutComponent\n                            \n                            \n                                TopnavComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule, MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { AuthLayoutComponent } from './component/auth/auth.component';\nimport { BackToLoginComponent } from './component/back-to-login/back-to-login.component';\nimport { ErrorPageComponent } from './component/error/error.component';\nimport { MainLayoutComponent } from './component/main/main.component';\nimport { TopnavComponent } from './component/topnav/topnav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    MatCardModule,\n    MatIconModule,\n    RouterModule,\n    TranslateModule,\n  ],\n  declarations: [\n    AuthLayoutComponent,\n    BackToLoginComponent,\n    ErrorPageComponent,\n    MainLayoutComponent,\n    TopnavComponent,\n  ],\n})\n// tslint:disable-next-line:no-unnecessary-class\nexport class LayoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogRequestInterceptor.html":{"url":"interceptors/LogRequestInterceptor.html","title":"interceptor - LogRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-request.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-request.interceptor.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogRequestInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    this._logger.devLog(req);\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LogResponseInterceptor.html":{"url":"interceptors/LogResponseInterceptor.html","title":"interceptor - LogResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LogResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/log-response.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/log-response.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class LogResponseInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return;\n        }\n\n        this._logger.devLog(event);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/log.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxLogger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/log.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxLogger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateLoggerUri(logErrorUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/log.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logErrorUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoggerConfig, NGXLogger } from 'ngx-logger';\n\nimport { LogServiceAbstract } from '../interface/service/log.service.abstract';\n\n@Injectable()\nexport class LogService extends LogServiceAbstract {\n  constructor(private _ngxLogger: NGXLogger) {\n    super();\n  }\n\n  // tslint:disable-next-line:no-any\n  debug(message: any): void {\n    this._ngxLogger.debug(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  error(message: any): void {\n    this._ngxLogger.error(message);\n  }\n\n  // tslint:disable-next-line:no-any\n  log(message: any): void {\n    this._ngxLogger.log(message);\n  }\n\n  updateLoggerUri(logErrorUri: string): void {\n    const updatedConfig: LoggerConfig = this._ngxLogger.getConfigSnapshot();\n    updatedConfig.serverLoggingUrl = logErrorUri;\n\n    this._ngxLogger.updateConfig(updatedConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogServiceAbstract.html":{"url":"classes/LogServiceAbstract.html","title":"class - LogServiceAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogServiceAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interface/service/log.service.abstract.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                debug\n                            \n                            \n                                    Public\n                                devLog\n                            \n                            \n                                    Public\n                                    Abstract\n                                error\n                            \n                            \n                                    Public\n                                    Abstract\n                                log\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateLoggerUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        devLog(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Abstract\n                            updateLoggerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLoggerUri(apiBaseUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interface/service/log.service.abstract.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiBaseUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../../../../environments/environment';\n\nexport abstract class LogServiceAbstract {\n  // tslint:disable:no-any\n  public abstract debug(message: any): void;\n  public abstract error(message: any): void;\n  public abstract log(message: any): void;\n  // tslint:enable:no-any\n\n  public abstract updateLoggerUri(apiBaseUri: string): void;\n\n  // tslint:disable-next-line:no-any\n  public devLog(data: any): void {\n    if (environment.production) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-console\n    console.log(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginFormFactory.html":{"url":"injectables/LoginFormFactory.html","title":"injectable - LoginFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/login.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/login.form.factory.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/login.form.factory.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      password: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToSignUp\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _formFactory: LoginFormFactory, _loginService: LoginService, _logger: LogServiceAbstract, _router: Router, _toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    LoginFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _loginService\n                                                  \n                                                        \n                                                                    LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(result: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { LoginFormFactory } from '../../service/factory/form/login.form.factory';\nimport { LoginService } from '../../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(\n    private _authService: AuthService,\n    private _formFactory: LoginFormFactory,\n    private _loginService: LoginService,\n    private _logger: LogServiceAbstract,\n    private _router: Router,\n    private _toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this._authService.logout();\n    this.form = this._formFactory.getForm();\n  }\n\n  public login(): void {\n    this._loginService\n      .login(this.form.value.email, this.form.value.password)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Logged in...');\n    this._router.navigate(['home']);\n  }\n\n  // tslint:disable-next-line:no-any\n  protected _errorHandler(result: any): void {\n    this._logger.devLog(result);\n    this._toastr.error('Login error');\n  }\n\n  public goToSignUp(): void {\n    this._router.navigate(['auth', 'register']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.login.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.login.loginButton' | translate }}\n  \n\n\n  {{ 'pages.login.registerLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.login.title\\' | translate }}                                        close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                          {{ \\'pages.login.loginButton\\' | translate }}    {{ \\'pages.login.registerLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResult.html":{"url":"interfaces/LoginResult.html","title":"interface - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/login-result.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastLogin\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResult {\n  readonly token: string;\n  readonly lastLogin: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/login.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loginUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _setUser\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _logger: LogServiceAbstract, _userFactory: UserFactory, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _setUser(result: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loginUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _loginUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/login.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { LogServiceAbstract } from '../../core/interface/service/log.service.abstract';\nimport { LoginResult } from '../../core/model/payload/login-result.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\nimport { UserService } from '../../core/service/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private _loginUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _logger: LogServiceAbstract,\n    private _userFactory: UserFactory,\n    private _userService: UserService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._loginUri = `${config.core.apiBaseUri}${config.auth.loginUri}`;\n  }\n\n  public login(email: string, password: string): Observable {\n    return this._authService\n      .login({ email, password }, this._loginUri)\n      .pipe(map(this._setUser.bind(this)));\n  }\n\n  protected _setUser(result: LoginResult): Observable {\n    const user: User = this._userFactory.getFromPayload(result);\n    this._logger.devLog(user);\n    this._userService.setUser(user);\n\n    return of(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/auth/logout.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _logoutUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _completeHandler\n                            \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService, _configService: ConfigService, _http: HttpClient, _router: Router, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _completeHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _completeHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _logoutUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _logoutUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/auth/logout.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '@ngx-config/core';\nimport { AuthService } from 'ng2-ui-auth';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/internal/operators';\nimport { ApiResponse } from '../../model/payload/api-response.model';\nimport { ErrorResponse } from '../../model/payload/error-response.model';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutService {\n  private _logoutUri: string;\n\n  constructor(\n    private _authService: AuthService,\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._logoutUri = `${config.core.apiBaseUri}${config.auth.logoutUri}`;\n  }\n\n  public logout(): void {\n    this._authService.logout();\n    this._authService.removeToken();\n    this._userService.clearUser();\n\n    this._http\n      .post(this._logoutUri, null)\n      .subscribe(\n        this._completeHandler.bind(this),\n        this._completeHandler.bind(this)\n      );\n  }\n\n  protected _completeHandler(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainLayoutComponent.html":{"url":"components/MainLayoutComponent.html","title":"component - MainLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-layout\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/main/main.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/main/main.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainLayoutComponent implements OnInit {\n  constructor() {}\n\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterFormFactory.html":{"url":"injectables/RegisterFormFactory.html","title":"injectable - RegisterFormFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterFormFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/factory/form/register.form.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/factory/form/register.form.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/factory/form/register.form.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     FormGroup\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterFormFactory {\n  constructor(private _formBuilder: FormBuilder) {}\n\n  public getForm(): FormGroup {\n    const newPasswordControl: FormControl = this._formBuilder.control(null, [\n      Validators.required,\n      Validators.maxLength(255),\n    ]);\n\n    const confirmPasswordControl: FormControl = this._formBuilder.control(\n      null,\n      [Validators.required, CustomValidators.equalTo(newPasswordControl)]\n    );\n\n    return this._formBuilder.group({\n      email: this._formBuilder.control(null, [\n        CustomValidators.email,\n        Validators.required,\n      ]),\n      name: this._formBuilder.control(null, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n      password: newPasswordControl,\n      confirmPassword: confirmPasswordControl,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPageComponent.html":{"url":"components/RegisterPageComponent.html","title":"component - RegisterPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/component/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Protected\n                                _getErrorList\n                            \n                            \n                                    Protected\n                                _successHandler\n                            \n                            \n                                    Public\n                                goToLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_formFactory: RegisterFormFactory, _logger: LogServiceAbstract, _registerService: RegisterService, _router: Router, _toastr: ToastrService, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formFactory\n                                                  \n                                                        \n                                                                    RegisterFormFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _registerService\n                                                  \n                                                        \n                                                                    RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _getErrorList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getErrorList(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _successHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _successHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/component/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { User } from '../../../core/model/user.model';\nimport { UserFactory } from '../../../core/service/factory/user.factory';\nimport { RegisterFormFactory } from '../../service/factory/form/register.form.factory';\nimport { RegisterService } from '../../service/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterPageComponent implements OnInit {\n  public form: FormGroup;\n  constructor(\n    private _formFactory: RegisterFormFactory,\n    private _logger: LogServiceAbstract,\n    private _registerService: RegisterService,\n    private _router: Router,\n    private _toastr: ToastrService,\n    private _userFactory: UserFactory\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this._formFactory.getForm();\n  }\n\n  public register(): void {\n    const user: User = this._userFactory.getFromFormData(this.form.value);\n\n    this._registerService\n      .register(user)\n      .subscribe(\n        this._successHandler.bind(this),\n        this._errorHandler.bind(this)\n      );\n  }\n\n  protected _successHandler(): void {\n    this._toastr.success('Registeration successful!');\n    this._router.navigate(['auth', 'login']);\n  }\n\n  protected _errorHandler(errorResponse: HttpErrorResponse): void {\n    this._logger.devLog(errorResponse.error);\n\n    this._toastr.error(\n      `Registration error:${this._getErrorList(errorResponse)}`\n    );\n  }\n\n  protected _getErrorList(errorResponse: HttpErrorResponse): string {\n    let errorList: string = '';\n    Object.values(errorResponse.error).forEach((error: string) => {\n      errorList = `${errorList}${error}`;\n    });\n\n    return `${errorList}`;\n  }\n\n  public goToLogin(): void {\n    this._router.navigate(['auth', 'login']);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'pages.register.title' | translate }}\n  \n  \n    \n      \n        \n        \n          close\n        \n        \n          Your name cannot be more than 255 characters - TODO lang\n        \n        \n          Name is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          Please enter a valid email address - TODO lang\n        \n        \n          Email is required - TODO lang\n        \n      \n\n      \n        \n        \n          close\n        \n        \n          {{ form.get('password').value?.length }} / 32\n        \n        \n          Password exceeds 255 characters - TODO lang\n        \n        \n          Password is required - TODO lang\n        \n        \n        \n          Your password doesn't match the rules below yet - TODO lang\n          \n          \n        \n      \n      \n      \n\n      \n        \n        \n          close\n        \n        \n          Please confirm password - TODO lang\n        \n        \n          Passwords don't match - TODO lang\n        \n      \n    \n  \n  \n    {{ 'pages.register.registerButton' | translate }}\n  \n\n\n  {{ 'pages.register.loginLink' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'pages.register.title\\' | translate }}                                        close                          Your name cannot be more than 255 characters - TODO lang                          Name is required - TODO lang                                              close                          Please enter a valid email address - TODO lang                          Email is required - TODO lang                                              close                          {{ form.get(\\'password\\').value?.length }} / 32                          Password exceeds 255 characters - TODO lang                          Password is required - TODO lang                                  Your password doesn\\'t match the rules below yet - TODO lang                                                                              close                          Please confirm password - TODO lang                          Passwords don\\'t match - TODO lang                          {{ \\'pages.register.registerButton\\' | translate }}    {{ \\'pages.register.loginLink\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/service/register.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _registerUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _http: HttpClient, _userFactory: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userFactory\n                                                  \n                                                        \n                                                                    UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _registerUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _registerUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/service/register.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiResponse } from '../../core/model/payload/api-response.model';\nimport { User } from '../../core/model/user.model';\nimport { UserFactory } from '../../core/service/factory/user.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterService {\n  private _registerUri: string;\n\n  constructor(\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _userFactory: UserFactory\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._registerUri = `${config.core.apiBaseUri}${config.auth.registerUri}`;\n  }\n\n  public register(user: User): Observable {\n    return this._http.post(\n      this._registerUri,\n      this._userFactory.getPayload(user)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInspectorService.html":{"url":"injectables/RequestInspectorService.html","title":"injectable - RequestInspectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestInspectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/http/request-inspector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isConfigFileRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isConfigFileRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isConfigFileRequest(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/http/request-inspector.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class RequestInspectorService {\n  // tslint:disable-next-line:no-any\n  public isConfigFileRequest(req: HttpRequest): boolean {\n    return req.url.endsWith('/assets/config.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetSporks.html":{"url":"injectables/SetSporks.html","title":"injectable - SetSporks","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SetSporks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/state/action/spork.actions.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Spork[])\n                    \n                \n                        \n                            \n                                Defined in src/app/home/state/action/spork.actions.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Spork[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Spork[]\n\n                    \n                \n                    \n                        \n                            Type :     Spork[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/state/action/spork.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SET_SPORKS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/state/action/spork.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action } from '@ngrx/store';\n\nimport { Spork } from '../../model/spork.model';\n\n// tslint:disable-next-line:naming-convention\nexport const SET_SPORKS: string = '[SPORK] SetCollection';\n\n@Injectable()\nexport class SetSporks implements Action {\n  // tslint:disable-next-line:no-reserved-keywords\n  readonly type: string = SET_SPORKS;\n\n  constructor(public payload: Spork[]) {}\n}\n\nexport type Actions = SetSporks;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Spork.html":{"url":"classes/Spork.html","title":"class - Spork","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Spork\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/model/spork.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _imageUri\n                            \n                            \n                                    Private\n                                    Readonly\n                                _price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    price\n                                \n                                \n                                    imageUri\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(price: Money, imageUri: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/model/spork.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        price\n                                                  \n                                                        \n                                                                    Money\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageUri\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _imageUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _imageUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/model/spork.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _price\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _price:     Money\n\n                    \n                \n                    \n                        \n                            Type :     Money\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/model/spork.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        price\n                    \n                \n\n                \n                    \n                        getprice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/home/model/spork.model.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imageUri\n                    \n                \n\n                \n                    \n                        getimageUri()\n                    \n                \n                            \n                                \n                                    Defined in src/app/home/model/spork.model.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as Money from 'js-money';\n\nexport class Spork {\n  private readonly _price: Money;\n  private readonly _imageUri: string;\n\n  constructor(price: Money, imageUri: string) {\n    this._price = price;\n    this._imageUri = imageUri;\n  }\n\n  get price(): Money {\n    return this._price;\n  }\n\n  get imageUri(): string {\n    return this._imageUri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SporkFactory.html":{"url":"injectables/SporkFactory.html","title":"injectable - SporkFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SporkFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/service/factory/spork.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getSpork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/service/factory/spork.factory.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(sporksPayload: SporkPayload[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/factory/spork.factory.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sporksPayload\n                                                        \n                                                                    SporkPayload[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSpork\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSpork(price: Money, imageUri: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/factory/spork.factory.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        price\n                                                        \n                                                                    Money\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        imageUri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as Money from 'js-money';\n\nimport { SporkPayload } from '../../model/payload/spork.payload';\nimport { Spork } from '../../model/spork.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SporkFactory {\n  constructor() {}\n\n  public getFromPayload(sporksPayload: SporkPayload[]): Spork[] {\n    const sporks: Spork[] = [];\n\n    for (const sporkPayload of sporksPayload) {\n      sporks.push(\n        this.getSpork(\n          Money.fromDecimal(sporkPayload.price, 'USD'),\n          sporkPayload.imageUri\n        )\n      );\n    }\n\n    return sporks;\n  }\n\n  public getSpork(price: Money, imageUri: string): Spork {\n    return new Spork(price, imageUri);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SporkListComponent.html":{"url":"components/SporkListComponent.html","title":"component - SporkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SporkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/component/spork-list/spork-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spork-list\n            \n\n            \n                styleUrls\n                spork-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spork-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sporks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _errorHandler\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_logger: LogServiceAbstract, _sporkService: SporkService, _toastr: ToastrService, _store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/component/spork-list/spork-list.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sporkService\n                                                  \n                                                        \n                                                                    SporkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _errorHandler(errorResponse: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sporks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sporks:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/component/spork-list/spork-list.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\n\nimport { AppState } from '../../../app.state';\nimport { LogServiceAbstract } from '../../../core/interface/service/log.service.abstract';\nimport { Spork } from '../../model/spork.model';\nimport { SporkService } from '../../service/spork.service';\nimport * as SporkActions from '../../state/action/spork.actions';\n\n@Component({\n  selector: 'app-spork-list',\n  templateUrl: './spork-list.component.html',\n  styleUrls: ['./spork-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SporkListComponent implements OnInit {\n  public sporks: Observable;\n\n  constructor(\n    private _logger: LogServiceAbstract,\n    private _sporkService: SporkService,\n    private _toastr: ToastrService,\n    private _store: Store\n  ) {}\n\n  public ngOnInit(): void {\n    this.sporks = this._store.select('spork');\n    this._sporkService.getSporks().subscribe((sporks: Spork[]) => {\n      this._store.dispatch(new SporkActions.SetSporks(sporks));\n    }, this._errorHandler.bind(this));\n  }\n\n  protected _errorHandler(errorResponse: HttpErrorResponse): void {\n    this._logger.devLog(errorResponse.error);\n    this._toastr.error('There was a problem retrieving the sporks.');\n  }\n}\n\n    \n\n    \n        \n  \n    \n    ${{ spork.price.toString() | number:'.2-2' }}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ${{ spork.price.toString() | number:\\'.2-2\\' }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SporkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SporkPayload.html":{"url":"interfaces/SporkPayload.html","title":"interface - SporkPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SporkPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/model/payload/spork.payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        imageUri\n                                \n                                \n                                        price\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageUri\n                                    \n                                \n                                \n                                    \n                                        imageUri:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SporkPayload {\n  readonly imageUri: string;\n  readonly price: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SporkService.html":{"url":"injectables/SporkService.html","title":"injectable - SporkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SporkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/service/spork.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getUri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _configure\n                            \n                            \n                                    Protected\n                                _getResult\n                            \n                            \n                                    Public\n                                getSporks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_configService: ConfigService, _http: HttpClient, _sporkFactory: SporkFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/service/spork.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sporkFactory\n                                                  \n                                                        \n                                                                    SporkFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _configure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _getResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _getResult(resultPayload: SporkPayload[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resultPayload\n                                                        \n                                                                    SporkPayload[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Spork[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSporks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSporks()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _getUri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _getUri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/service/spork.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '@ngx-config/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators';\n\nimport { SporkPayload } from '../model/payload/spork.payload';\nimport { Spork } from '../model/spork.model';\nimport { SporkFactory } from './factory/spork.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SporkService {\n  private _getUri: string;\n\n  constructor(\n    private _configService: ConfigService,\n    private _http: HttpClient,\n    private _sporkFactory: SporkFactory\n  ) {\n    this._configure();\n  }\n\n  protected _configure(): void {\n    // tslint:disable-next-line:no-any\n    const config: any = this._configService.getSettings();\n\n    this._getUri = `${config.core.apiBaseUri}${config.spork.getUri}`;\n  }\n\n  public getSporks(): Observable {\n    return this._http.get(this._getUri).pipe(map(this._getResult.bind(this)));\n  }\n\n  protected _getResult(resultPayload: SporkPayload[]): Spork[] {\n    return this._sporkFactory.getFromPayload(resultPayload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimingInterceptor.html":{"url":"interceptors/TimingInterceptor.html","title":"interceptor - TimingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/interceptor/timing.interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_logger: LogServiceAbstract, _requestInspector: RequestInspectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logger\n                                                  \n                                                        \n                                                                    LogServiceAbstract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _requestInspector\n                                                  \n                                                        \n                                                                    RequestInspectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/interceptor/timing.interceptor.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogServiceAbstract } from '../../interface/service/log.service.abstract';\nimport { RequestInspectorService } from '../http/request-inspector.service';\n\n@Injectable()\nexport class TimingInterceptor implements HttpInterceptor {\n  public constructor(\n    private _logger: LogServiceAbstract,\n    private _requestInspector: RequestInspectorService\n  ) {}\n\n  // tslint:disable:no-any\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    // tslint:enable:no-any\n    if (this._requestInspector.isConfigFileRequest(req)) {\n      return next.handle(req);\n    }\n\n    const started: number = Date.now();\n\n    return next.handle(req).pipe(\n      // tslint:disable-next-line:no-any\n      tap((event: HttpEvent) => {\n        if (!(event instanceof HttpResponse)) {\n          return event;\n        }\n\n        const elapsed: number = Date.now() - started;\n        this._logger.devLog(\n          `Request for ${req.urlWithParams} took ${elapsed} ms.`\n        );\n\n        return event;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopnavComponent.html":{"url":"components/TopnavComponent.html","title":"component - TopnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/component/topnav/topnav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topnav\n            \n\n            \n                styleUrls\n                topnav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topnav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_logoutService: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/component/topnav/topnav.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logoutService\n                                                  \n                                                        \n                                                                    LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/topnav/topnav.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/component/topnav/topnav.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { LogoutService } from '../../../core/service/auth/logout.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.scss'],\n})\nexport class TopnavComponent implements OnInit {\n  constructor(private _logoutService: LogoutService) {}\n\n  public ngOnInit(): void {}\n\n  public logout(): void {\n    this._logoutService.logout();\n  }\n}\n\n    \n\n    \n        \n  {{ 'siteTitle' | translate }}\n  \n  \n    menu\n  \n\n  \n    \n      \n        Logout\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'siteTitle\\' | translate }}        menu                      Logout            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BackToLoginComponent', 'selector': 'app-back-to-login'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LangSwitchComponent', 'selector': 'app-lang-switch'},{'name': 'LoginPageComponent', 'selector': 'app-login'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'},{'name': 'RegisterPageComponent', 'selector': 'app-register'},{'name': 'SporkListComponent', 'selector': 'app-spork-list'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _email\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _lastLogin\n                            \n                            \n                                    Private\n                                    Readonly\n                                _name\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    lastLogin\n                                \n                                \n                                    name\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, name: string, lastLogin?: Date, password?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastLogin\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _lastLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _lastLogin:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            _password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : autoserialize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/user.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastLogin\n                    \n                \n\n                \n                    \n                        getlastLogin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { autoserialize } from 'cerialize';\n\nexport class User {\n  @autoserialize\n  private readonly _email: string;\n  @autoserialize\n  private readonly _lastLogin?: Date;\n  @autoserialize\n  private readonly _name: string;\n  @autoserialize\n  private readonly _password?: string;\n\n  constructor(\n    email: string,\n    name: string,\n    lastLogin?: Date,\n    password?: string\n  ) {\n    this._email = email;\n    this._lastLogin = lastLogin;\n    this._name = name;\n    this._password = password;\n  }\n\n  get email(): string {\n    return this._email;\n  }\n\n  get lastLogin(): Date {\n    return this._lastLogin;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get password(): string {\n    return this._password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFactory.html":{"url":"injectables/UserFactory.html","title":"injectable - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/factory/user.factory.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFromFormData\n                            \n                            \n                                    Public\n                                getFromPayload\n                            \n                            \n                                    Public\n                                getPayload\n                            \n                            \n                                    Public\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dateHelper: DateHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/factory/user.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dateHelper\n                                                  \n                                                        \n                                                                    DateHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromFormData(formData: UserPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formData\n                                                        \n                                                                    UserPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromPayload(payload: LoginResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    LoginResult\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPayload(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     UserPayload\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser(email: string, name: string, lastLogin: Date, password?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/factory/user.factory.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastLogin\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as jwtDecode from 'jwt-decode';\n\nimport { JwtPayload } from '../../model/payload/jwt-payload.model';\nimport { LoginResult } from '../../model/payload/login-result.model';\nimport { UserPayload } from '../../model/payload/user-payload.model';\nimport { User } from '../../model/user.model';\nimport { DateHelperService } from '../helper/date-helper.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFactory {\n  constructor(private _dateHelper: DateHelperService) {}\n\n  public getPayload(user: User): UserPayload {\n    return {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n    };\n  }\n\n  public getFromFormData(formData: UserPayload): User {\n    return this.getUser(formData.email, formData.name, null, formData.password);\n  }\n\n  public getFromPayload(payload: LoginResult): User {\n    const decodedToken: JwtPayload = jwtDecode(payload.token);\n\n    return this.getUser(\n      decodedToken.email,\n      decodedToken.name,\n      payload.lastLogin\n        ? this._dateHelper.getDateFromUtcString(payload.lastLogin)\n        : null\n    );\n  }\n\n  public getUser(\n    email: string,\n    name: string,\n    lastLogin: Date,\n    password?: string\n  ): User {\n    return new User(email, name, lastLogin, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/payload/user-payload.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPayload {\n  readonly name: string;\n  readonly email: string;\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _key\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/user.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Deserialize, Serialize } from 'cerialize';\n\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private _key: string = 'user';\n\n  public getUser(): User {\n    return Deserialize(sessionStorage.getItem(this._key));\n  }\n\n  public setUser(user: User): void {\n    sessionStorage.setItem(this._key, JSON.stringify(Serialize(user)));\n  }\n\n  public clearUser(): void {\n    sessionStorage.removeItem(this._key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                configFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.state.ts\n            \n            \n                interface\n            \n            \n                AppState\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/component/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginPageComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/component/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterPageComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/login.form.factory.ts\n            \n            \n                injectable\n            \n            \n                LoginFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/factory/form/register.form.factory.ts\n            \n            \n                injectable\n            \n            \n                RegisterFormFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/service/login.service.ts\n            \n            \n                injectable\n            \n            \n                LoginService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/service/register.service.ts\n            \n            \n                injectable\n            \n            \n                RegisterService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                AuthConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/config/auth.config.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/component/lang-switch/lang-switch.component.ts\n            \n            \n                component\n            \n            \n                LangSwitchComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interface/service/log.service.abstract.ts\n            \n            \n                class\n            \n            \n                LogServiceAbstract\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/api-response.model.ts\n            \n            \n                interface\n            \n            \n                ApiResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/error-response.model.ts\n            \n            \n                interface\n            \n            \n                ErrorResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/jwt-payload.model.ts\n            \n            \n                interface\n            \n            \n                JwtPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/login-result.model.ts\n            \n            \n                interface\n            \n            \n                LoginResult\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/payload/user-payload.model.ts\n            \n            \n                interface\n            \n            \n                UserPayload\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/auth/logout.service.ts\n            \n            \n                injectable\n            \n            \n                LogoutService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/service/factory/user.factory.ts\n            \n            \n                injectable\n            \n            \n                UserFactory\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/helper/date-helper.service.ts\n            \n            \n                injectable\n            \n            \n                DateHelperService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/http/request-inspector.service.ts\n            \n            \n                injectable\n            \n            \n                RequestInspectorService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/component/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/component/spork-list/spork-list.component.ts\n            \n            \n                component\n            \n            \n                SporkListComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/model/payload/spork.payload.ts\n            \n            \n                interface\n            \n            \n                SporkPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/model/spork.model.ts\n            \n            \n                class\n            \n            \n                Spork\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/service/factory/spork.factory.ts\n            \n            \n                injectable\n            \n            \n                SporkFactory\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/service/spork.service.ts\n            \n            \n                injectable\n            \n            \n                SporkService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/home/state/action/spork.actions.ts\n            \n            \n                injectable\n            \n            \n                SetSporks\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/state/action/spork.actions.ts\n            \n            \n                variable\n            \n            \n                SET_SPORKS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/state/reducer/spork.reducer.ts\n            \n            \n                function\n            \n            \n                reducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/component/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthLayoutComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/layout/component/back-to-login/back-to-login.component.ts\n            \n            \n                component\n            \n            \n                BackToLoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainLayoutComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/component/topnav/topnav.component.ts\n            \n            \n                component\n            \n            \n                TopnavComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-extensions/password-strength : ^3.2.0\n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @compodoc/compodoc : ^1.1.5\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngx-config/core : ^6.0.0\n        \n            @ngx-config/http-loader : ^6.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            add : ^2.0.6\n        \n            angular2-recaptcha : ^1.1.0\n        \n            angulartics2 : ^6.3.0\n        \n            bootstrap : ^4.1.3\n        \n            cerialize : ^0.1.18\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-money : ^0.6.3\n        \n            jwt-decode : ^2.2.0\n        \n            lint-staged : ^7.3.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.22.2\n        \n            ng2-ui-auth : ^9.0.0\n        \n            ng2-validation : ^4.2.0\n        \n            ngx-logger : ^3.3.2\n        \n            ngx-toastr : ^9.1.0\n        \n            popper.js : ^1.14.4\n        \n            rxjs : ~6.2.0\n        \n            yarn : ^1.10.1\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            reducer   (src/.../spork.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigFactory(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/home/state/reducer/spork.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 6 Full-Stack Demo\nIn this project I am demonstrating my current patterns and understanding in the\nMEAN stack composed of Angular 6, Angular Material, Bootstrap 4, FontAwesome5, express,\nand MongoDB.\nThis is a two-day hack-a-thon to showcase my day-to-day toolbox, so still a lot to be done!\nBackend\nIn this application, an express REST API backed by MongoDB exposes a store\nselling sporks (it's a spoon and fork combined!).\nPassport and JWT are used for authentication against MongoDB and call authentication.\nTODO is JWT blacklisting and logout since Redis is not in the stack\nFrontend\nAn Angular Material front-end presents the customer with authentication functionality and a collection of sporks.\n(I haven't gotten to the cart and checkout yet)\n@ngrx/store and ChangeDetectionStrategy.Push are employed to provide maximum speed and stability\nngx-translate and ngx-config provide runtime configuration and translation.\njs-money protects against arithmetic errors in price calculation.\nngx-logger feeds errors and events to an API endpoint, where winston feeds them to the Elastic Beanstalk logs\nangulartics2 feeds data to Google Analytics.  Compodoc provides documentation.\nOutdatedBrowser is used to redirect users of old browsers.\nPipeline\nCode is deployed CI/CD using AWS CodePipline/CodeBuild.\nThe backend is deployed to an EC2 using Elastic Beanstalk, and the frontend\nis exposed in an S3 bucket.\nStrict linting of TypeScript, SCSS, JSON and HTML on the front-end\nand ES6 in the backend enforce quality measures at pre-commit and in the pipeline. no-any, max-file-line-count, and\nimmutability are enforced.\nUnit test coverage is at 87% lines, mostly in the core and auth modules.\nNOTE: There is no effort made at this time to implement a config.json builder,\nruntime config.json is committed to the repository\nNOTE: e2e tests are disabled because of issues getting ChromeDriver to run in CI\nInstructions for Use\n** Please note that this project uses yarn and that package-lock.json is in\nthe .gitignore **\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Pete Burkindine\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAuthModule -->\n\nCoreModule->AuthModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\nLangSwitchComponent \n\nLangSwitchComponent \n\nLangSwitchComponent  -->\n\nCoreModule->LangSwitchComponent \n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nCoreModule->HomeModule\n\n\n\nAppModule -->\n\nLayoutModule->AppModule\n\n\n\nAuthModule -->\n\nLayoutModule->AuthModule\n\n\n\nHomeModule -->\n\nLayoutModule->HomeModule\n\n\n\n\n\nAuthTokenInterceptor\n\nAuthTokenInterceptor\n\nAppModule -->\n\nAuthTokenInterceptor->AppModule\n\n\n\n\n\nJsonHeaderInterceptor\n\nJsonHeaderInterceptor\n\nAppModule -->\n\nJsonHeaderInterceptor->AppModule\n\n\n\n\n\nLogRequestInterceptor\n\nLogRequestInterceptor\n\nAppModule -->\n\nLogRequestInterceptor->AppModule\n\n\n\n\n\nLogResponseInterceptor\n\nLogResponseInterceptor\n\nAppModule -->\n\nLogResponseInterceptor->AppModule\n\n\n\n\n\nTimingInterceptor\n\nTimingInterceptor\n\nAppModule -->\n\nTimingInterceptor->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAuthModule -->\n\nRegisterPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nLangSwitchComponent\n\nLangSwitchComponent\n\nCoreModule -->\n\nLangSwitchComponent->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSporkListComponent\n\nSporkListComponent\n\nHomeModule -->\n\nSporkListComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\nLayoutModule -->\n\nAuthLayoutComponent->LayoutModule\n\n\n\n\n\nBackToLoginComponent\n\nBackToLoginComponent\n\nLayoutModule -->\n\nBackToLoginComponent->LayoutModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nLayoutModule -->\n\nErrorPageComponent->LayoutModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nLayoutModule -->\n\nMainLayoutComponent->LayoutModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nLayoutModule -->\n\nTopnavComponent->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Actions   (src/.../spork.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/home/state/action/spork.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     SetSporks\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthConfig   (src/.../auth.config.ts)\n                        \n                        \n                            config   (src/.../auth.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            SET_SPORKS   (src/.../spork.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/config/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthConfig:     ɵa\n\n                    \n                \n                    \n                        \n                            Type :     ɵa\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: config.core.apiBaseUri,\n  loginUrl: `${config.core.apiBaseUri}/auth/login`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : require('../../assets/config.json')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/state/action/spork.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SET_SPORKS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SET_SPORKS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[SPORK] SetCollection'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
